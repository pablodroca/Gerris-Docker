
solid.h,446
#define __SOLID_H____SOLID_H__21,853
  GFS_STATUS_UNDEFINED = 0,GFS_STATUS_UNDEFINED33,997
  GFS_STATUS_SOLID     = 1,GFS_STATUS_SOLID34,1025
  GFS_STATUS_FLUID     = 2GFS_STATUS_FLUID35,1053
typedef struct _GfsSolid         GfsSolid;GfsSolid73,2675
struct _GfsSolid {_GfsSolid75,2719
  GfsEvent parent;parent77,2756
  GfsGenericSurface * s;s80,2793
#define GFS_SOLID(GFS_SOLID83,2822
#define GFS_IS_SOLID(GFS_IS_SOLID86,2938

ocean.c,6467
static void correct_normal_velocity (FttCellFace * face,correct_normal_velocity40,1157
static void scale_gradients (FttCell * cell, gpointer * data)scale_gradients71,1990
static void gfs_correct_normal_velocities_weighted (GfsDomain * domain,gfs_correct_normal_velocities_weighted100,2858
#define THETA THETA138,4041
  GfsVariable * pn, * div, * divn, * dia;pn141,4077
  GfsVariable * pn, * div, * divn, * dia;div141,4077
  GfsVariable * pn, * div, * divn, * dia;divn141,4077
  GfsVariable * pn, * div, * divn, * dia;dia141,4077
  gdouble dt, G;dt142,4119
  gdouble dt, G;G142,4119
} FreeSurfaceParams;FreeSurfaceParams143,4136
static void normal_divergence (FttCell * cell, FreeSurfaceParams * p)normal_divergence145,4158
static void scale_divergence_helmoltz (FttCell * cell, FreeSurfaceParams * p)scale_divergence_helmoltz150,4309
static void merge_pressures (GSList * merged, GfsVariable * v)merge_pressures168,4817
static void gfs_free_surface_pressure (GfsDomain * toplayer,gfs_free_surface_pressure203,5582
static void normal_velocities (GfsDomain * domain, GfsVariable ** u)normal_velocities251,6976
static void ocean_run (GfsSimulation * sim)ocean_run261,7370
static void gfs_ocean_class_init (GfsSimulationClass * klass)gfs_ocean_class_init360,11118
static void gfs_ocean_init (GfsOcean * object)gfs_ocean_init365,11211
GfsSimulationClass * gfs_ocean_class (void)gfs_ocean_class370,11329
#define MAC MAC392,11856
static void ocean_destroy (GtsObject * object)ocean_destroy394,11871
#define MAXLEVEL MAXLEVEL409,12295
static void ocean_read (GtsObject ** object, GtsFile * fp)ocean_read411,12316
static void ocean_write (GtsObject * object, FILE * fp)ocean_write430,12995
static void new_layer (GfsOcean * ocean)new_layer443,13376
static void add_layer (GfsBox * box, GfsDomain * domain)add_layer456,13762
static void ocean_post_read (GfsDomain * domain, GtsFile * fp)ocean_post_read474,14361
static void compute_w (FttCell * c, GfsVariable * W)compute_w484,14748
static void compute_div (FttCell * c, GfsVariable * W)compute_div509,15568
static gdouble height (FttCell * cell)height534,16383
static void compute_H (FttCell * cell, GfsVariable * H)compute_H546,16689
static void face_interpolated_normal_velocity (const FttCellFace * face, GfsVariable ** v)face_interpolated_normal_velocity551,16789
static void depth_integrated_divergence (GfsDomain * domain, GfsVariable * div)depth_integrated_divergence593,17891
static void compute_coeff (FttCell * c)compute_coeff611,18582
static void face_coeff_from_below (FttCell * cell)face_coeff_from_below632,19085
static void depth_integrated_coefficients (GfsDomain * domain)depth_integrated_coefficients659,19731
static void ocean_run (GfsSimulation * sim)ocean_run670,20187
static void gfs_ocean_class_init (GfsSimulationClass * klass)gfs_ocean_class_init810,25268
static void depth_coarse_fine (FttCell * parent, GfsVariable * H)depth_coarse_fine819,25567
static void depth_fine_coarse (FttCell * parent, GfsVariable * H)depth_fine_coarse833,25955
static void gfs_ocean_init (GfsOcean * object)gfs_ocean_init838,26069
GfsSimulationClass * gfs_ocean_class (void)gfs_ocean_class848,26404
static void hydrostatic_pressure (FttCell * cell, gpointer * data)hydrostatic_pressure868,26915
void gfs_hydrostatic_pressure (GfsDomain * domain,gfs_hydrostatic_pressure901,27785
static void gfs_source_hydrostatic_destroy (GtsObject * o)gfs_source_hydrostatic_destroy926,28389
static void gfs_source_hydrostatic_read (GtsObject ** o, GtsFile * fp)gfs_source_hydrostatic_read935,28650
static void gfs_source_hydrostatic_write (GtsObject * o, FILE * fp)gfs_source_hydrostatic_write970,29735
static gdouble gfs_source_hydrostatic_mac_value (GfsSourceGeneric * s,gfs_source_hydrostatic_mac_value978,30007
static gdouble gfs_source_hydrostatic_centered_value (GfsSourceGeneric * s,gfs_source_hydrostatic_centered_value986,30244
static void copy_ph (FttCell * cell, GfsSourceHydrostatic * s)copy_ph996,30591
static gboolean gfs_source_hydrostatic_event (GfsEvent * event, GfsSimulation * sim)gfs_source_hydrostatic_event1001,30713
static void gfs_source_hydrostatic_event_half (GfsEvent * event, GfsSimulation * sim)gfs_source_hydrostatic_event_half1022,31455
static void gfs_source_hydrostatic_class_init (GfsSourceGenericClass * klass)gfs_source_hydrostatic_class_init1030,31761
static void gfs_source_hydrostatic_init (GfsSourceGeneric * s)gfs_source_hydrostatic_init1040,32185
GfsSourceGenericClass * gfs_source_hydrostatic_class (void)gfs_source_hydrostatic_class1046,32365
static void gfs_source_friction_destroy (GtsObject * o)gfs_source_friction_destroy1074,33049
static void gfs_source_friction_read (GtsObject ** o, GtsFile * fp)gfs_source_friction_read1085,33361
static void gfs_source_friction_write (GtsObject * o, FILE * fp)gfs_source_friction_write1114,34238
static gdouble gfs_source_friction_saved_value (GfsSourceGeneric * s, gfs_source_friction_saved_value1120,34480
static void save_velocity (FttCell * cell, GfsSourceFriction * s)save_velocity1131,34789
static gboolean gfs_source_friction_event (GfsEvent * event, GfsSimulation * sim)gfs_source_friction_event1139,34998
static void gfs_source_friction_class_init (GfsSourceGenericClass * klass)gfs_source_friction_class_init1150,35376
static void gfs_source_friction_init (GfsSourceGeneric * s)gfs_source_friction_init1158,35709
GfsSourceGenericClass * gfs_source_friction_class (void)gfs_source_friction_class1163,35844
static void bc_flather_write (GtsObject * o, FILE * fp)bc_flather_write1193,36637
static void set_gradient_boundary (FttCell * cell)set_gradient_boundary1204,36926
static void bc_flather_read (GtsObject ** o, GtsFile * fp)bc_flather_read1209,37027
static void bc_flather_destroy (GtsObject * o)bc_flather_destroy1248,38311
static gdouble flather_value (FttCellFace * f, GfsBc * b)flather_value1256,38535
static void flather (FttCellFace * f, GfsBc * b)flather1293,39714
static void homogeneous_flather (FttCellFace * f, GfsBc * b)homogeneous_flather1299,39909
static void face_flather (FttCellFace * f, GfsBc * b)face_flather1305,40092
static void gfs_bc_flather_class_init (GtsObjectClass * klass)gfs_bc_flather_class_init1311,40262
static void gfs_bc_flather_init (GfsBc * object)gfs_bc_flather_init1318,40442
GfsBcClass * gfs_bc_flather_class (void)gfs_bc_flather_class1325,40687

gerris.c,241
static void set_box_pid (GfsBox * box, gint * pid)set_box_pid40,1203
static void setup_binary_IO (GfsDomain * domain)setup_binary_IO45,1278
static gboolean set_macros ()set_macros59,1662
int main (int argc, char * argv[])main68,1832

advection.c,2221
static gdouble transverse_term (FttCell * cell,transverse_term27,939
void gfs_cell_advected_face_values (FttCell * cell,gfs_cell_advected_face_values58,1794
void gfs_cell_non_advected_face_values (FttCell * cell,gfs_cell_non_advected_face_values110,3530
static gdouble interpolate_1D1 (const FttCell * cell,interpolate_1D1133,4109
static gdouble interpolate_2D1 (const FttCell * cell,interpolate_2D1179,5298
gdouble gfs_face_upwinded_value (const FttCellFace * face,gfs_face_upwinded_value264,7432
void gfs_face_advection_flux (const FttCellFace * face,gfs_face_advection_flux353,10069
void gfs_face_velocity_advection_flux (const FttCellFace * face,gfs_face_velocity_advection_flux395,11321
void gfs_face_velocity_convective_flux (const FttCellFace * face,gfs_face_velocity_convective_flux449,12937
void gfs_face_advected_normal_velocity (const FttCellFace * face,gfs_face_advected_normal_velocity510,14922
void gfs_face_interpolated_normal_velocity (const FttCellFace * face, GfsVariable ** v)gfs_face_interpolated_normal_velocity546,15883
void gfs_face_reset_normal_velocity (const FttCellFace * face)gfs_face_reset_normal_velocity578,16712
gboolean gfs_cell_is_small (const FttCell * cell)gfs_cell_is_small592,17041
static void set_merged (FttCell * cell)set_merged611,17477
void gfs_set_merged (GfsDomain * domain)gfs_set_merged674,18942
static void add_merged (GSList ** merged, FttCell * cell)add_merged682,19147
static void traverse_merged (FttCell * cell, gpointer * datum)traverse_merged715,20103
static void traverse_non_merged (FttCell * cell, gpointer * datum)traverse_non_merged728,20433
void gfs_domain_traverse_merged (GfsDomain * domain,gfs_domain_traverse_merged752,21133
void gfs_advection_update (GSList * merged, const GfsAdvectionParams * par)gfs_advection_update781,22017
void gfs_advection_params_write (GfsAdvectionParams * par, FILE * fp)gfs_advection_params_write874,24516
void gfs_advection_params_init (GfsAdvectionParams * par)gfs_advection_params_init934,26247
static gdouble none (FttCell * cell, FttComponent c, guint v)none955,26767
void gfs_advection_params_read (GfsAdvectionParams * par, GtsFile * fp)gfs_advection_params_read960,26847

vof.h,2156
#define __VOF_H____VOF_H__21,856
#define GFS_IS_FULL(GFS_IS_FULL30,979
#  define gfs_plane_volume gfs_plane_volume44,1443
#  define gfs_plane_alpha gfs_plane_alpha45,1492
#  define gfs_plane_center gfs_plane_center46,1542
#  define gfs_plane_area_center gfs_plane_area_center47,1593
typedef struct _GfsVariableTracerVOF        GfsVariableTracerVOF;GfsVariableTracerVOF67,2211
typedef struct _GfsVariableTracerVOFClass   GfsVariableTracerVOFClass;GfsVariableTracerVOFClass68,2277
struct _GfsVariableTracerVOF {_GfsVariableTracerVOF70,2349
  GfsVariableTracer parent;parent72,2398
  GtsSListContainer * concentrations;concentrations74,2504
  GfsVariable * m[FTT_DIMENSION], * alpha;m77,2560
  GfsVariable * m[FTT_DIMENSION], * alpha;alpha77,2560
struct _GfsVariableTracerVOFClass {_GfsVariableTracerVOFClass80,2607
  GfsVariableClass parent_class;parent_class82,2661
  void (* update) (GfsVariable * v, GfsDomain * domain);update85,2712
#define GFS_VARIABLE_TRACER_VOF(GFS_VARIABLE_TRACER_VOF88,2773
#define GFS_VARIABLE_TRACER_VOF_CLASS(GFS_VARIABLE_TRACER_VOF_CLASS91,2933
#define GFS_IS_VARIABLE_TRACER_VOF(GFS_IS_VARIABLE_TRACER_VOF94,3087
typedef struct _GfsVariableVOFConcentration        GfsVariableVOFConcentration;GfsVariableVOFConcentration101,3324
struct _GfsVariableVOFConcentration {_GfsVariableVOFConcentration103,3405
  GfsVariableTracer parent;parent105,3461
  GfsVariableTracerVOF * vof;vof108,3507
#define GFS_VARIABLE_VOF_CONCENTRATION(GFS_VARIABLE_VOF_CONCENTRATION111,3541
#define GFS_IS_VARIABLE_VOF_CONCENTRATION(GFS_IS_VARIABLE_VOF_CONCENTRATION114,3732
typedef struct _GfsVariableTracerVOFHeight GfsVariableTracerVOFHeight;GfsVariableTracerVOFHeight121,3978
struct _GfsVariableTracerVOFHeight {_GfsVariableTracerVOFHeight123,4050
  GfsVariableTracerVOF parent;parent125,4105
  GfsVariable * hb[FTT_DIMENSION], * ht[FTT_DIMENSION];hb128,4154
  GfsVariable * hb[FTT_DIMENSION], * ht[FTT_DIMENSION];ht128,4154
#define GFS_VARIABLE_TRACER_VOF_HEIGHT(GFS_VARIABLE_TRACER_VOF_HEIGHT131,4214
#define GFS_IS_VARIABLE_TRACER_VOF_HEIGHT(GFS_IS_VARIABLE_TRACER_VOF_HEIGHT134,4394

adaptive.h,2573
#define __ADAPTIVE_H____ADAPTIVE_H__21,856
typedef struct _GfsAdapt         GfsAdapt;GfsAdapt40,1392
struct _GfsAdapt {_GfsAdapt42,1436
  GfsEvent parent;parent44,1473
  gboolean active;active45,1492
  GfsFunction * minlevel, * maxlevel;minlevel48,1529
  GfsFunction * minlevel, * maxlevel;maxlevel48,1529
  guint mincells, maxcells;mincells49,1567
  guint mincells, maxcells;maxcells49,1567
  gdouble cmax, weight, cfactor;cmax50,1595
  gdouble cmax, weight, cfactor;weight50,1595
  gdouble cmax, weight, cfactor;cfactor50,1595
  GfsVariable * c;c51,1628
  GtsKeyFunc cost;cost52,1647
#define GFS_ADAPT(GFS_ADAPT55,1670
#define GFS_IS_ADAPT(GFS_IS_ADAPT58,1786
typedef struct _GfsAdaptVorticity         GfsAdaptVorticity;GfsAdaptVorticity65,1957
struct _GfsAdaptVorticity {_GfsAdaptVorticity67,2019
  GfsAdapt parent;parent69,2065
  GfsVariable ** u;u70,2084
  gdouble maxa;maxa71,2104
#define GFS_ADAPT_VORTICITY(GFS_ADAPT_VORTICITY76,2142
#define GFS_IS_ADAPT_VORTICITY(GFS_IS_ADAPT_VORTICITY79,2287
#define GFS_IS_ADAPT_STREAMLINE_CURVATURE(GFS_IS_ADAPT_STREAMLINE_CURVATURE86,2499
typedef struct _GfsAdaptFunction         GfsAdaptFunction;GfsAdaptFunction93,2733
struct _GfsAdaptFunction {_GfsAdaptFunction95,2793
  GfsAdapt parent;parent97,2838
  GfsFunction * f;f100,2875
#define GFS_ADAPT_FUNCTION(GFS_ADAPT_FUNCTION103,2898
#define GFS_IS_ADAPT_FUNCTION(GFS_IS_ADAPT_FUNCTION106,3040
typedef struct _GfsAdaptGradient         GfsAdaptGradient;GfsAdaptGradient113,3237
struct _GfsAdaptGradient {_GfsAdaptGradient115,3297
  GfsAdaptFunction parent;parent117,3342
  gdouble dimension;dimension118,3369
  GfsVariable * v;v121,3408
#define GFS_ADAPT_GRADIENT(GFS_ADAPT_GRADIENT124,3431
#define GFS_IS_ADAPT_GRADIENT(GFS_IS_ADAPT_GRADIENT127,3573
typedef struct _GfsAdaptError         GfsAdaptError;GfsAdaptError134,3767
struct _GfsAdaptError {_GfsAdaptError136,3821
  GfsAdaptGradient parent;parent138,3863
  GfsVariable * dv[FTT_DIMENSION];dv139,3890
  FttComponent c;c140,3925
  GfsVariable * v;v143,3961
#define GFS_ADAPT_ERROR(GFS_ADAPT_ERROR146,3984
#define GFS_IS_ADAPT_ERROR(GFS_IS_ADAPT_ERROR149,4117
typedef struct _GfsAdaptThickness         GfsAdaptThickness;GfsAdaptThickness156,4306
struct _GfsAdaptThickness {_GfsAdaptThickness158,4368
  GfsAdapt parent;parent160,4414
  GfsVariable * v, * c;v163,4451
  GfsVariable * v, * c;c163,4451
#define GFS_ADAPT_THICKNESS(GFS_ADAPT_THICKNESS166,4479
#define GFS_IS_ADAPT_THICKNESS(GFS_IS_ADAPT_THICKNESS169,4624

function.h,1918
#define __FUNCTION_H____FUNCTION_H__21,856
#define NODATA NODATA23,880
static double Dirichlet = 1.;Dirichlet25,907
static double Neumann = 0.;Neumann26,937
static GfsSimulation * _sim = NULL;_sim27,965
static FttCell * _cell = NULL;_cell28,1001
static double dd (const gchar * name, FttComponent c) {dd30,1033
static double dd2 (const gchar * name, FttComponent c) {dd239,1376
static double dx (const gchar * name) { return dd (name, FTT_X); }dx56,2009
static double dy (const gchar * name) { return dd (name, FTT_Y); }dy57,2076
static double dx2 (const gchar * name) { return dd2 (name, FTT_X); }dx258,2143
static double dy2 (const gchar * name) { return dd2 (name, FTT_Y); }dy259,2212
static double dz (const gchar * name) { return dd (name, FTT_Z); }dz61,2293
static double dz2 (const gchar * name) { return dd2 (name, FTT_Z); }dz262,2360
static double area (const gchar * name)area65,2446
static double correctness (const gchar * name)correctness80,2982
static double distance (double xo, double yo, double zo)distance89,3293
static gboolean is_velocity (GfsVariable * v, GfsDomain * domain)is_velocity102,3672
static void dirichlet_bc (FttCell * cell)dirichlet_bc113,3905
static double dsd (const gchar * name, FttComponent c)dsd119,4025
static double dsx (const gchar * name) { return dsd (name, FTT_X); }dsx140,4789
static double dsy (const gchar * name) { return dsd (name, FTT_Y); }dsy141,4858
static double dsz (const gchar * name) { return dsd (name, FTT_Z); }dsz143,4939
static double flux (const gchar * name)flux146,5025
static gboolean overlaps (double x1, double y1, double x2, double y2)overlaps176,6103
static double mapv (double u, double v, FttComponent c) {mapv197,6823
static double mapvx (double u, double v) { return mapv (u, v, FTT_X); }mapvx205,7059
static double mapvy (double u, double v) { return mapv (u, v, FTT_Y); }mapvy206,7131

ocean.h,1576
#define __OCEAN_H____OCEAN_H__22,873
typedef struct _GfsOcean         GfsOcean;GfsOcean33,1021
struct _GfsOcean {_GfsOcean35,1065
  GfsSimulation parent;parent36,1084
  GPtrArray * layer;layer38,1120
  GfsDomain * toplayer;toplayer39,1141
#define GFS_OCEAN(GFS_OCEAN43,1185
#define GFS_IS_OCEAN(GFS_IS_OCEAN46,1301
typedef struct _GfsSourceHydrostatic         GfsSourceHydrostatic;GfsSourceHydrostatic60,1653
struct _GfsSourceHydrostatic {_GfsSourceHydrostatic62,1721
  GfsSourceVelocity parent;parent64,1770
  GfsVariable * ph1;ph165,1798
  gboolean not_first;not_first66,1819
  GfsVariable * ph, * rho;ph69,1859
  GfsVariable * ph, * rho;rho69,1859
#define GFS_SOURCE_HYDROSTATIC(GFS_SOURCE_HYDROSTATIC72,1890
#define GFS_IS_SOURCE_HYDROSTATIC(GFS_IS_SOURCE_HYDROSTATIC75,2044
typedef struct _GfsSourceFriction         GfsSourceFriction;GfsSourceFriction84,2281
struct _GfsSourceFriction {_GfsSourceFriction86,2343
  GfsSourceVelocity parent;parent88,2389
  GfsVariable * u[FTT_DIMENSION];u89,2417
  GfsVariable * h;h92,2469
  gdouble f;f93,2488
#define GFS_SOURCE_FRICTION(GFS_SOURCE_FRICTION96,2505
#define GFS_IS_SOURCE_FRICTION(GFS_IS_SOURCE_FRICTION99,2650
typedef struct _GfsBcFlather         GfsBcFlather;GfsBcFlather106,2854
struct _GfsBcFlather {_GfsBcFlather108,2906
  GfsBcValue parent;parent110,2947
  GfsVariable * h, * p;h113,2986
  GfsVariable * h, * p;p113,2986
  GfsFunction * val;val114,3010
#define GFS_BC_FLATHER(GFS_BC_FLATHER117,3035
#define GFS_IS_BC_FLATHER(GFS_IS_BC_FLATHER120,3165

variable.c,11115
static void variable_init_domain (GfsVariable * v, GfsDomain * domain)variable_init_domain36,1103
static void gfs_variable_read (GtsObject ** o, GtsFile * fp)gfs_variable_read43,1274
static void gfs_variable_write (GtsObject * o, FILE * fp)gfs_variable_write77,2339
static void gfs_variable_destroy (GtsObject * object)gfs_variable_destroy84,2597
static void gfs_variable_class_init (GtsObjectClass * klass)gfs_variable_class_init112,3421
static void gfs_variable_init (GfsVariable * v)gfs_variable_init119,3600
GfsVariableClass * gfs_variable_class (void)gfs_variable_class128,3882
GfsVariable * gfs_variable_new (GfsVariableClass * klass,gfs_variable_new158,4698
GfsVariable * gfs_variable_from_name (GSList * i,gfs_variable_from_name191,5551
GSList * gfs_variables_from_list (GSList * i,gfs_variables_from_list210,6184
void gfs_variables_swap (GfsVariable * v1, GfsVariable * v2)gfs_variables_swap242,6820
void gfs_variable_set_vector (GfsVariable ** v, guint n)gfs_variable_set_vector260,7218
void gfs_variable_set_tensor (GfsVariable * t[2][2])gfs_variable_set_tensor285,7800
GfsVariable * gfs_variable_clone (GfsVariable * v, gchar * name)gfs_variable_clone307,8659
static void boolean_fine_coarse (FttCell * parent, GfsVariable * v)boolean_fine_coarse344,9784
static void boolean_coarse_fine (FttCell * parent, GfsVariable * v)boolean_coarse_fine359,10121
static void variable_boolean_init (GfsVariable * v)variable_boolean_init371,10400
GfsVariableClass * gfs_variable_boolean_class (void)gfs_variable_boolean_class378,10578
static void variable_tracer_read (GtsObject ** o, GtsFile * fp)variable_tracer_read406,11235
static void variable_tracer_write (GtsObject * o, FILE * fp)variable_tracer_write420,11686
static void variable_tracer_class_init (GtsObjectClass * klass)variable_tracer_class_init428,11928
static void variable_tracer_init (GfsVariableTracer * v)variable_tracer_init434,12075
GfsVariableClass * gfs_variable_tracer_class (void)gfs_variable_tracer_class444,12403
static void scale_residual (FttCell * cell, GfsVariable * res)scale_residual471,13057
static gboolean variable_residual_event (GfsEvent * event, GfsSimulation * sim)variable_residual_event478,13276
static void variable_residual_class_init (GfsEventClass * klass)variable_residual_class_init488,13613
static void variable_residual_init (GfsVariable * v)variable_residual_init493,13725
GfsVariableClass * gfs_variable_residual_class (void)gfs_variable_residual_class498,13849
static void variable_filtered_read (GtsObject ** o, GtsFile * fp)variable_filtered_read526,14533
static void variable_filtered_write (GtsObject * o, FILE * fp)variable_filtered_write564,15632
static void variable_filtered_event_half (GfsEvent * event, GfsSimulation * sim)variable_filtered_event_half571,15883
static gboolean variable_filtered_event (GfsEvent * event, GfsSimulation * sim)variable_filtered_event586,16418
static void variable_filtered_class_init (GtsObjectClass * klass)variable_filtered_class_init596,16708
static void variable_filtered_init (GfsEvent * v)variable_filtered_init604,16991
GfsVariableClass * gfs_variable_filtered_class (void)gfs_variable_filtered_class610,17130
static void unity (FttCell * cell, GfsVariable * v)unity637,17800
static void variable_diagonal (FttCell * cell, gpointer * data)variable_diagonal642,17885
static gboolean variable_diagonal_event (GfsEvent * event, GfsSimulation * sim)variable_diagonal_event670,18544
static void variable_diagonal_class_init (GtsObjectClass * klass)variable_diagonal_class_init692,19463
GfsVariableClass * gfs_variable_diagonal_class (void)gfs_variable_diagonal_class697,19594
static void variable_function_destroy (GtsObject * o)variable_function_destroy725,20275
static void variable_function_read (GtsObject ** o, GtsFile * fp)variable_function_read732,20485
static void variable_function_write (GtsObject * o, FILE * fp)variable_function_write745,20912
static void variable_function_class_init (GtsObjectClass * klass)variable_function_class_init752,21124
static void variable_function_coarse_fine (FttCell * parent, GfsVariable * v)variable_function_coarse_fine759,21323
static void variable_function_init (GfsVariableFunction * v)variable_function_init771,21655
GfsVariableClass * gfs_variable_function_class (void)gfs_variable_function_class777,21841
static gdouble face_metric (FttCell * cell, FttDirection d, GfsDomain * domain)face_metric807,22591
static gdouble face_metric_inverse (FttCell * cell, FttDirection d, GfsDomain * domain)face_metric_inverse819,22831
static void init_mac_from_stream_function (FttCell * cell,init_mac_from_stream_function826,23046
static void variable_stream_function_coarse_fine (FttCell * parent, GfsVariable * v)variable_stream_function_coarse_fine841,23762
static void variable_stream_function_read (GtsObject ** o, GtsFile * fp)variable_stream_function_read881,25376
static void variable_stream_function_fine_coarse (FttCell * cell, GfsVariable * v)variable_stream_function_fine_coarse908,26386
static void init_streamfunction (FttCell * cell, GfsVariable * v)init_streamfunction932,27624
static void init_streamfunction_from_variable (FttCell * cell, GfsVariable * v)init_streamfunction_from_variable950,28289
static gboolean variable_stream_function_event (GfsEvent * event, GfsSimulation * sim)variable_stream_function_event965,28918
static void variable_stream_function_class_init (GfsEventClass * klass)variable_stream_function_class_init984,29652
static void variable_stream_function_init (GfsVariable * v)variable_stream_function_init990,29844
GfsVariableClass * gfs_variable_stream_function_class (void)gfs_variable_stream_function_class997,30020
static void variable_poisson_read (GtsObject ** o, GtsFile * fp)variable_poisson_read1027,30813
static void variable_poisson_write (GtsObject * o, FILE * fp)variable_poisson_write1037,31102
static void has_dirichlet (FttCell * cell, GfsVariable * p)has_dirichlet1045,31342
  GfsFunction * f;f1052,31498
  GfsVariable * div;div1053,31517
} DivData;DivData1054,31538
static void rescale_div (FttCell * cell, DivData * p)rescale_div1056,31550
static gboolean variable_poisson_event (GfsEvent * event, GfsSimulation * sim)variable_poisson_event1063,31785
static void variable_poisson_class_init (GtsObjectClass * klass)variable_poisson_class_init1096,33226
static void variable_poisson_init (GfsVariable * v)variable_poisson_init1103,33435
GfsVariableClass * gfs_variable_poisson_class (void)gfs_variable_poisson_class1110,33646
  GfsVariable * lap;lap1139,34367
  GfsFunction * f;f1140,34388
  GfsVariable * u;u1141,34407
} LapData;LapData1142,34426
static void evaluate_function (FttCell * cell, LapData * p)evaluate_function1144,34438
static void laplacian (FttCell * cell, LapData * p)laplacian1149,34563
static gboolean variable_laplacian_event (GfsEvent * event, GfsSimulation * sim)variable_laplacian_event1173,35145
static void variable_laplacian_class_init (GtsObjectClass * klass)variable_laplacian_class_init1195,36053
static void variable_laplacian_init (GfsVariable * v)variable_laplacian_init1200,36186
GfsVariableClass * gfs_variable_laplacian_class (void)gfs_variable_laplacian_class1207,36354
static void increment_age (FttCell * cell, GfsVariable * v)increment_age1234,37008
static gboolean variable_age_event (GfsEvent * event, GfsSimulation * sim)variable_age_event1239,37102
static void variable_age_class_init (GtsObjectClass * klass)variable_age_class_init1251,37483
static void none (FttCell * parent, GfsVariable * v)none1256,37604
static void variable_age_init (GfsVariable * v)variable_age_init1260,37662
GfsVariableClass * gfs_variable_age_class (void)gfs_variable_age_class1266,37765
static void variable_average_read (GtsObject ** o, GtsFile * fp)variable_average_read1294,38434
static void variable_average_write (GtsObject * o, FILE * fp)variable_average_write1316,39070
static void average (FttCell * cell, GfsVariable * v)average1325,39350
static gboolean variable_average_event (GfsEvent * event, GfsSimulation * sim)variable_average_event1391,41269
static void variable_average_class_init (GtsObjectClass * klass)variable_average_class_init1406,41825
static void variable_average_init (GfsVariable * v)variable_average_init1413,42034
GfsVariableClass * gfs_variable_average_class (void)gfs_variable_average_class1418,42160
static FttComponent hydrostatic_component (GfsDomain * domain)hydrostatic_component1445,42813
static void hydrostatic_pressure_read (GtsObject ** o, GtsFile * fp)hydrostatic_pressure_read1462,43218
static gboolean hydrostatic_pressure_event (GfsEvent * event, GfsSimulation * sim)hydrostatic_pressure_event1478,43692
static void hydrostatic_pressure_class_init (GtsObjectClass * klass)hydrostatic_pressure_class_init1487,43990
static void hydrostatic_pressure_init (GfsVariable * v)hydrostatic_pressure_init1493,44170
GfsVariableClass * gfs_hydrostatic_pressure_class (void)gfs_hydrostatic_pressure_class1499,44329
static void hydrostatic_pressure (FttCell * cell, GfsVariable * v)hydrostatic_pressure1519,44877
void gfs_hydrostatic_pressure_update (GfsHydrostaticPressure * p, GfsFunction * alpha)gfs_hydrostatic_pressure_update1578,46746
static void gfs_constant_destroy (GtsObject * object)gfs_constant_destroy1601,47576
static gdouble constant_func (FttCell * cell, FttCellFace * face, GfsDomain * domain,constant_func1610,47884
static void gfs_constant_read (GtsObject ** o, GtsFile * fp)gfs_constant_read1616,48018
static void gfs_constant_write (GtsObject * o, FILE * fp)gfs_constant_write1639,48659
static void gfs_constant_class_init (GtsObjectClass * klass)gfs_constant_class_init1645,48857
static void gfs_constant_init (GfsEvent * event)gfs_constant_init1652,49041
GfsEventClass * gfs_constant_class (void)gfs_constant_class1658,49136
static void gfs_spatial_sum_destroy (GtsObject * o)gfs_spatial_sum_destroy1685,49765
static void gfs_spatial_sum_write (GtsObject * o, FILE * fp)gfs_spatial_sum_write1691,49960
static void gfs_spatial_sum_read (GtsObject ** o, GtsFile * fp)gfs_spatial_sum_read1697,50157
static void add (FttCell * cell, GfsSpatialSum * s)add1705,50439
static gboolean gfs_spatial_sum_event (GfsEvent * event, GfsSimulation * sim)gfs_spatial_sum_event1711,50624
static void gfs_spatial_sum_class_init (GtsObjectClass * klass)gfs_spatial_sum_class_init1728,51277
static void gfs_spatial_sum_init (GfsSpatialSum * object)gfs_spatial_sum_init1736,51526
GfsEventClass * gfs_spatial_sum_class (void)gfs_spatial_sum_class1741,51649
static void gfs_derived_variable_destroy (GtsObject * object)gfs_derived_variable_destroy1769,52290
static void gfs_derived_variable_class_init (GtsObjectClass * klass)gfs_derived_variable_class_init1777,52549
GtsObjectClass * gfs_derived_variable_class (void)gfs_derived_variable_class1782,52672
GfsDerivedVariable * gfs_derived_variable_from_name (GSList * i, const gchar * name)gfs_derived_variable_from_name1810,53391

gfs.h,35
#define __GFS_H____GFS_H__21,851

cartesian.h,606
#define __CARTESIAN_H____CARTESIAN_H__21,857
typedef struct _GfsCartesianGrid      GfsCartesianGrid;GfsCartesianGrid31,990
struct _GfsCartesianGrid {_GfsCartesianGrid33,1047
  GtsObject parent;parent35,1092
  guint N;       /* Number of dimensions */N36,1112
  guint * n;     /* Size of each dimension */n37,1156
  gdouble ** x;  /* Position of each point in the grid */x38,1202
  gdouble * v;   /* Data */v39,1260
  gchar ** name; /* Name of each dimension */name40,1288
#define GFS_CARTESIAN_GRID(GFS_CARTESIAN_GRID47,1397
#define GFS_IS_CARTESIAN_GRID(GFS_IS_CARTESIAN_GRID50,1534

boundary.c,10265
static FttVector rpos[FTT_NEIGHBORS] = {rpos32,1028
static void symmetry (FttCellFace * f, GfsBc * b)symmetry45,1323
static void set_stencil_neighbor (FttCellFace * f, GfsBc * b, gdouble w)set_stencil_neighbor53,1563
static void symmetry_stencil (FttCellFace * f, GfsBc * b)symmetry_stencil59,1764
static void face_symmetry (FttCellFace * f, GfsBc * b)face_symmetry64,1913
static void bc_write (GtsObject * o, FILE * fp)bc_write76,2357
static void bc_read (GtsObject ** o, GtsFile * fp)bc_read82,2505
static void gfs_bc_class_init (GtsObjectClass * klass)gfs_bc_class_init106,3064
static void gfs_bc_init (GfsBc * object)gfs_bc_init112,3177
GfsBcClass * gfs_bc_class (void)gfs_bc_class120,3504
GfsBc * gfs_bc_new (GfsBcClass * k, GfsVariable * v, gboolean extra)gfs_bc_new149,4108
static void bc_value_write (GtsObject * o, FILE * fp)bc_value_write171,4518
static void bc_value_read (GtsObject ** o, GtsFile * fp)bc_value_read180,4813
static void bc_value_destroy (GtsObject * o)bc_value_destroy192,5197
static void gfs_bc_value_class_init (GtsObjectClass * klass)gfs_bc_value_class_init198,5381
static void gfs_bc_value_init (GfsBcValue * bc)gfs_bc_value_init205,5553
GfsBcClass * gfs_bc_value_class (void)gfs_bc_value_class210,5664
static GfsBc * gfs_bc_value_new (GfsBcClass * k,gfs_bc_value_new231,6168
static void dirichlet (FttCellFace * f, GfsBc * b)dirichlet253,6570
static void dirichlet_vof (FttCellFace * f, GfsBc * b)dirichlet_vof260,6752
static void homogeneous_dirichlet (FttCellFace * f, GfsBc * b)homogeneous_dirichlet265,6894
static void homogeneous_dirichlet_stencil (FttCellFace * f, GfsBc * b)homogeneous_dirichlet_stencil270,7025
static void face_dirichlet (FttCellFace * f, GfsBc * b)face_dirichlet275,7137
static void bc_dirichlet_read (GtsObject ** o, GtsFile * fp)bc_dirichlet_read281,7352
static void gfs_bc_dirichlet_init (GfsBc * object)gfs_bc_dirichlet_init295,7800
static void gfs_bc_dirichlet_class_init (GtsObjectClass * klass)gfs_bc_dirichlet_class_init303,8165
GfsBcClass * gfs_bc_dirichlet_class (void)gfs_bc_dirichlet_class308,8270
static void neumann (FttCellFace * f, GfsBc * b)neumann336,8909
static void homogeneous_neumann (FttCellFace * f, GfsBc * b)homogeneous_neumann344,9115
static void homogeneous_neumann_stencil (FttCellFace * f, GfsBc * b)homogeneous_neumann_stencil349,9242
static void face_neumann (FttCellFace * f, GfsBc * b)face_neumann354,9351
static void bc_neumann_read (GtsObject ** o, GtsFile * fp)bc_neumann_read362,9570
static void gfs_bc_neumann_init (GfsBc * object)gfs_bc_neumann_init374,9925
static void gfs_bc_neumann_class_init (GtsObjectClass * klass)gfs_bc_neumann_class_init382,10280
GfsBcClass * gfs_bc_neumann_class (void)gfs_bc_neumann_class387,10381
static void bc_angle_read (GtsObject ** o, GtsFile * fp)bc_angle_read415,11010
static void gfs_bc_angle_init (GfsBc * object)gfs_bc_angle_init426,11371
static void gfs_bc_angle_class_init (GtsObjectClass * klass)gfs_bc_angle_class_init432,11539
GfsBcClass * gfs_bc_angle_class (void)gfs_bc_angle_class437,11636
static void navier (FttCellFace * f, GfsBc * b)navier464,12215
static void face_navier (FttCellFace * f, GfsBc * b)face_navier473,12545
static void bc_navier_read (GtsObject ** o, GtsFile * fp)bc_navier_read482,12939
static void bc_navier_write (GtsObject * o, FILE * fp)bc_navier_write495,13440
static void gfs_bc_navier_init (GfsBc * object)gfs_bc_navier_init502,13669
static void gfs_bc_navier_class_init (GtsObjectClass * klass)gfs_bc_navier_class_init509,13937
GfsBcClass * gfs_bc_navier_class (void)gfs_bc_navier_class515,14070
static void insert_bc (GfsVariable * v, GtsObject * o, GHashTable * unique)insert_bc543,14696
static void gfs_boundary_destroy (GtsObject * object)gfs_boundary_destroy548,14815
static void match (FttCell * cell, GfsBoundary * boundary)match576,15861
static void boundary_match (GfsBoundary * boundary)boundary_match652,18233
static void is_extra (GfsVariable * v, GfsBc * bc, gboolean * extra)is_extra687,19503
static void write_extra (GfsVariable * v, GfsBc * bc, FILE * fp)write_extra693,19613
static void gfs_boundary_write (GtsObject * o, FILE * fp)gfs_boundary_write703,19839
static gboolean boundary_read_extra_bc (GfsBoundary * b, GtsFile * fp)boundary_read_extra_bc720,20318
static void gfs_boundary_read (GtsObject ** o, GtsFile * fp)gfs_boundary_read776,21635
static void gfs_boundary_class_init (GfsBoundaryClass * klass)gfs_boundary_class_init792,22162
static void gfs_boundary_init (GfsBoundary * b)gfs_boundary_init801,22439
GfsBoundaryClass * gfs_boundary_class (void)gfs_boundary_class808,22666
GfsBoundary * gfs_boundary_new (GfsBoundaryClass * klass,gfs_boundary_new840,23449
void gfs_boundary_update (GfsBoundary * boundary)gfs_boundary_update866,24088
void gfs_boundary_send (GfsBoundary * boundary)gfs_boundary_send880,24431
void gfs_boundary_receive (GfsBoundary * boundary,gfs_boundary_receive896,24857
void gfs_boundary_synchronize (GfsBoundary * boundary)gfs_boundary_synchronize913,25293
GfsBc * gfs_boundary_lookup_bc (GfsBoundary * b, GfsVariable * v)gfs_boundary_lookup_bc928,25677
void gfs_boundary_set_default_bc (GfsBoundary * b, GfsBc * bc)gfs_boundary_set_default_bc954,26193
void gfs_variable_set_default_bc (GfsVariable * v, GfsBc * bc)gfs_variable_set_default_bc973,26623
void gfs_boundary_add_bc (GfsBoundary * b, GfsBc * bc)gfs_boundary_add_bc992,27030
static GtsColor inflow_color (GtsObject * o)inflow_color1019,27664
static void inflow_constant_write (GtsObject * o, FILE * fp)inflow_constant_write1026,27769
static void inflow_constant_read (GtsObject ** o, GtsFile * fp)inflow_constant_read1035,28088
static void gfs_boundary_inflow_constant_class_init (GtsObjectClass * klass)gfs_boundary_inflow_constant_class_init1061,28938
static void gfs_boundary_inflow_constant_init (GfsBoundaryInflowConstant * object)gfs_boundary_inflow_constant_init1068,29136
GfsBoundaryInflowConstantClass * gfs_boundary_inflow_constant_class (void)gfs_boundary_inflow_constant_class1073,29285
static GtsColor outflow_color (GtsObject * o)outflow_color1101,30077
static void outflow_read (GtsObject ** o, GtsFile * fp)outflow_read1108,30184
static void gfs_boundary_outflow_class_init (GfsBoundaryClass * klass)gfs_boundary_outflow_class_init1130,30876
GfsBoundaryOutflowClass * gfs_boundary_outflow_class (void)gfs_boundary_outflow_class1136,31055
static GtsColor gradient_color (GtsObject * o)gradient_color1164,31721
static void set_gradient_boundary (FttCell * cell)set_gradient_boundary1171,31833
static void gradient_read (GtsObject ** o, GtsFile * fp)gradient_read1176,31934
static void gfs_boundary_gradient_class_init (GfsBoundaryClass * klass)gfs_boundary_gradient_class_init1190,32375
GfsBoundaryClass * gfs_boundary_gradient_class (void)gfs_boundary_gradient_class1196,32557
static void boundary_periodic_destroy (GtsObject * object)boundary_periodic_destroy1224,33226
static void boundary_periodic_read (GtsObject ** object, GtsFile * fp)boundary_periodic_read1235,33537
static void center_periodic (FttCellFace * face, GfsBc * b)center_periodic1240,33652
static void face_periodic (FttCellFace * face, GfsBc * b)face_periodic1251,34125
static void boundary_size (FttCell * cell, guint * count)boundary_size1260,34495
static void set_buffers_size (GfsBoundaryPeriodic * boundary)set_buffers_size1265,34572
static void boundary_tree (FttCell * cell, GfsBoundaryPeriodic * boundary)boundary_tree1276,34901
static void periodic_match (GfsBoundary * boundary)periodic_match1307,35883
static void send (GfsBoundary * bb)send1316,36142
static void center_update (FttCell * cell,center_update1333,36783
static void face_update (FttCellFace * face,face_update1341,37044
static void match_ignore (GfsBoundaryPeriodic * boundary)match_ignore1349,37298
static void match_update (FttCell * cell,match_update1370,37881
static void receive (GfsBoundary * bb,receive1414,39349
static void synchronize (GfsBoundary * bb)synchronize1444,40279
static GtsColor periodic_color (GtsObject * o)periodic_color1453,40497
static void gfs_boundary_periodic_class_init (GfsBoundaryClass * klass)gfs_boundary_periodic_class_init1460,40603
static void gfs_boundary_periodic_init (GfsBoundaryPeriodic * boundary)gfs_boundary_periodic_init1474,41115
GfsBoundaryClass * gfs_boundary_periodic_class (void)gfs_boundary_periodic_class1489,41642
GfsBoundaryPeriodic * gfs_boundary_periodic_new (GfsBoundaryClass * klass,gfs_boundary_periodic_new1519,42462
static void center_periodic_rotate (FttCellFace * face, GfsBc * b)center_periodic_rotate1534,42846
static void face_periodic_rotate (FttCellFace * face, GfsBc * b)face_periodic_rotate1554,43708
void gfs_boundary_periodic_rotate (GfsBoundaryPeriodic * boundary,gfs_boundary_periodic_rotate1581,44740
GfsBoundaryPeriodic * gfs_boundary_periodic_rotate_new (GfsBoundaryClass * klass,gfs_boundary_periodic_rotate_new1609,45601
static void gfs_gedge_write (GtsObject * object, FILE * fp)gfs_gedge_write1631,46099
static void gfs_gedge_read (GtsObject ** o, GtsFile * fp)gfs_gedge_read1638,46355
static void gfs_gedge_class_init (GtsObjectClass * klass)gfs_gedge_class_init1664,47039
static void gfs_gedge_init (GfsGEdge * object)gfs_gedge_init1670,47168
GfsGEdgeClass * gfs_gedge_class (void)gfs_gedge_class1675,47266
void gfs_gedge_link_boxes (GfsGEdge * edge)gfs_gedge_link_boxes1704,48003
GfsGEdge * gfs_gedge_new (GfsGEdgeClass * klass,gfs_gedge_new1765,50178
static void gfs_box_destroy (GtsObject * object)gfs_box_destroy1790,50726
static void box_size (FttCell * cell, guint * size)box_size1814,51540
static void gfs_box_write (GtsObject * object, FILE * fp)gfs_box_write1819,51610
static void gfs_box_read (GtsObject ** o, GtsFile * fp)gfs_box_read1853,52836
static gfloat gfs_box_weight (GtsGNode * node)gfs_box_weight2016,57865
static void gfs_box_class_init (GfsBoxClass * klass)gfs_box_class_init2032,58184
static void gfs_box_init (GfsBox * box)gfs_box_init2041,58450
GfsBoxClass * gfs_box_class (void)gfs_box_class2050,58572
GfsBox * gfs_box_new (GfsBoxClass * klass)gfs_box_new2071,59049

timestep.c,5304
  GfsVariable ** g;g32,1015
  guint dimension;dimension33,1035
} GradientData;GradientData34,1054
static void reset_cell_gradients (FttCell * cell, GradientData * p)reset_cell_gradients36,1071
void gfs_reset_gradients (GfsDomain * domain, guint dimension, GfsVariable ** g)gfs_reset_gradients51,1415
static void scale_cell_gradients (FttCell * cell, gpointer * data)scale_cell_gradients60,1695
void gfs_scale_gradients (GfsDomain * domain, guint dimension, GfsVariable ** g)gfs_scale_gradients98,2689
  GfsVariable * p, ** gv;p114,3164
  GfsVariable * p, ** gv;gv114,3164
  gdouble dt;dt115,3190
} CorrectPar;CorrectPar116,3204
static void correct_normal_velocity (FttCellFace * face,correct_normal_velocity118,3219
void gfs_correct_normal_velocities (GfsDomain * domain,gfs_correct_normal_velocities162,4608
static void scale_divergence (FttCell * cell, gpointer * data)scale_divergence181,5074
  GfsSourceGeneric * s;s190,5249
  GfsVariable * v, ** g;v191,5273
  GfsVariable * v, ** g;g191,5273
  FttComponent c;c192,5298
  gdouble dt;dt193,5316
} FaceSource;FaceSource194,5330
#define DIRICHLET_BOUNDARY DIRICHLET_BOUNDARY196,5345
static void tag_dirichlet (FttCellFace * f)tag_dirichlet198,5394
static void ignore_dirichlet_boundaries (GfsBox * box, FaceSource * f)ignore_dirichlet_boundaries203,5483
static void add_face_source (FttCellFace * face,add_face_source217,5959
void gfs_velocity_face_sources (GfsDomain * domain,gfs_velocity_face_sources254,6968
void gfs_update_gradients (GfsDomain * domain, gfs_update_gradients305,8334
  GfsVariable * v, * div;v325,8986
  GfsVariable * v, * div;div325,8986
  gdouble L2;L2326,9012
} SourceVolumePar;   SourceVolumePar327,9026
static void cell_volume_source (FttCell * cell, SourceVolumePar * p)cell_volume_source329,9049
static void volume_sources (GfsDomain * domain, GfsVariable * p, GfsVariable * div) volume_sources345,9459
static void mac_projection (GfsDomain * domain,mac_projection356,9829
void gfs_mac_projection (GfsDomain * domain,gfs_mac_projection460,13361
static void correct (FttCell * cell, gpointer * data)correct486,14085
void gfs_correct_centered_velocities (GfsDomain * domain,gfs_correct_centered_velocities510,14691
void gfs_approximate_projection (GfsDomain * domain,gfs_approximate_projection560,16490
static void save_face_values (FttCell * cell, GfsVariable * f[4])save_face_values598,17758
static void face_values_init (FttCellTraverseFunc face_values, GfsAdvectionParams * par)face_values_init605,17928
static void restore_face_values (FttCell * cell, GfsVariable * f[4])restore_face_values637,18935
static void face_values_set (FttCellTraverseFunc face_values, GfsAdvectionParams * par)face_values_set644,19108
static void face_values_free (GfsVariable * v)face_values_free656,19622
void gfs_predicted_face_velocities (GfsDomain * domain,gfs_predicted_face_velocities681,20327
void gfs_diffusion (GfsDomain * domain,gfs_diffusion735,22031
static GfsSourceDiffusion * source_diffusion (GfsVariable * v)source_diffusion790,23858
static void add_pressure_gradient (FttCell * cell, GfsAdvectionParams * par)add_pressure_gradient809,24340
static void add_sinking (FttCellFace * face, GfsAdvectionParams * par)add_sinking814,24506
void gfs_add_sinking_velocity (GfsDomain * domain, GfsAdvectionParams * par)gfs_add_sinking_velocity827,24945
static void remove_sinking (FttCellFace * face, GfsAdvectionParams * par)remove_sinking838,25264
void gfs_remove_sinking_velocity (GfsDomain * domain, GfsAdvectionParams * par)gfs_remove_sinking_velocity851,25712
static void variable_sources (GfsDomain * domain,variable_sources862,26037
static void variable_diffusion (GfsDomain * domain,variable_diffusion913,27849
static void copy_v_rhs (FttCell * cell, GfsAdvectionParams * apar)copy_v_rhs941,28876
void gfs_centered_velocity_advection_diffusion (GfsDomain * domain,gfs_centered_velocity_advection_diffusion966,29773
void gfs_tracer_advection_diffusion (GfsDomain * domain,gfs_tracer_advection_diffusion1018,31318
static void gfs_surface_generic_bc_destroy (GtsObject * o)gfs_surface_generic_bc_destroy1052,32329
static void gfs_surface_generic_bc_read (GtsObject ** o, GtsFile * fp)gfs_surface_generic_bc_read1060,32570
static void gfs_surface_generic_bc_write (GtsObject * o, FILE * fp)gfs_surface_generic_bc_write1102,33937
static void gfs_surface_generic_bc_class_init (GfsSurfaceGenericBcClass * klass)gfs_surface_generic_bc_class_init1109,34261
GfsSurfaceGenericBcClass * gfs_surface_generic_bc_class (void)gfs_surface_generic_bc_class1116,34547
static void gfs_surface_bc_destroy (GtsObject * object)gfs_surface_bc_destroy1144,35281
static void gfs_surface_bc_read (GtsObject ** o, GtsFile * fp)gfs_surface_bc_read1152,35558
static void gfs_surface_bc_write (GtsObject * o, FILE * fp)gfs_surface_bc_write1176,36317
static void gfs_surface_bc_bc (FttCell * cell, GfsSurfaceGenericBc * b)gfs_surface_bc_bc1190,36802
static void gfs_surface_bc_class_init (GfsSurfaceGenericBcClass * klass)gfs_surface_bc_class_init1211,37530
static void gfs_surface_bc_init (GfsSurfaceBc * object)gfs_surface_bc_init1219,37817
GfsSurfaceGenericBcClass * gfs_surface_bc_class (void)gfs_surface_bc_class1225,38004

metric.c,15392
static gdouble face_metric_direction (const GfsDomain * domain, FttCell * cell, FttDirection d)face_metric_direction36,1104
static gdouble viscous_metric_implicit (const GfsDomain * domain,viscous_metric_implicit45,1351
static gdouble viscous_metric_explicit (const GfsDomain * domain, viscous_metric_explicit66,2141
static void advection_metric (const GfsDomain * domain, advection_metric96,3366
static void set_default_metric (GtsObject ** o, GtsFile * fp)set_default_metric116,3993
static void generic_metric_read (GtsObject ** o, GtsFile * fp)generic_metric_read130,4448
static void generic_metric_class_init (GtsObjectClass * klass)generic_metric_class_init138,4669
GfsEventClass * gfs_generic_metric_class (void)gfs_generic_metric_class143,4774
static void variable_metric_read (GtsObject ** o, GtsFile * fp)variable_metric_read170,5392
static void variable_metric_class_init (GtsObjectClass * klass)variable_metric_class_init178,5615
GfsVariableClass * gfs_variable_metric_class (void)gfs_variable_metric_class183,5722
#define USE_GSL USE_GSL207,6299
static double kpu_1d_l3[3][2] = {kpu_1d_l3215,6612
static double kpu_2d_l2[5][3] = {kpu_2d_l2221,6721
static double kpu_2d_l3[9][3] = {kpu_2d_l3229,6928
static double kpu_2d_l4[17][3] = {kpu_2d_l4241,7349
#define EPS EPS261,8103
static double ru_rv (FttVector r, GfsMap * map)ru_rv263,8121
static double integration2d (GfsMap * map,integration2d279,8725
  FttVector * r;r298,9110
  GfsMap * map;map299,9127
  gdouble v1, v2;v1300,9143
  gdouble v1, v2;v2300,9143
} RuRvData;RuRvData301,9161
static double ru (FttVector r, GfsMap * map)ru303,9174
static double rv (FttVector r, GfsMap * map)rv312,9429
static double ru_gsl (double u, void * data)ru_gsl324,9729
static double rv_gsl (double v, void * data)rv_gsl332,9884
static gdouble integration (const gsl_function * f, double a, double b)integration339,10007
static double length_u (GfsMap * map, double u1, double u2, double v)length_u352,10452
static double length_v (GfsMap * map, double v1, double v2, double u)length_v379,10962
static double ru_rv_gsl (double v, void * data)ru_rv_gsl407,11499
static double ru_rv_dv (double u, void * data)ru_rv_dv415,11697
static double area (GfsMap * map,area427,11979
static void metric_coarse_fine (FttCell * parent, GfsVariable * a)metric_coarse_fine444,12313
static void metric_fine_coarse (FttCell * parent, GfsVariable * a)metric_fine_coarse492,14114
static gdouble face_metric (const GfsDomain * domain, const FttCellFace * face)face_metric514,14860
static gdouble cell_metric (const GfsDomain * domain, const FttCell * cell)cell_metric521,15072
static void solid_metric (const GfsDomain * domain, const FttCell * cell, FttVector * m)solid_metric526,15216
static gdouble scale_metric (const GfsDomain * domain, const FttCell * cell, FttComponent c)scale_metric532,15375
static gdouble face_scale_metric (const GfsDomain * domain, const FttCellFace * face,face_scale_metric542,15758
static void none (FttCell * parent, GfsVariable * v)none552,16108
static void stored_metric_read (GtsObject ** o, GtsFile * fp)stored_metric_read556,16166
static void stored_metric_class_init (GtsObjectClass * klass)stored_metric_class_init599,17669
static void stored_metric_init (GfsStoredMetric * m)stored_metric_init604,17772
GfsVariableClass * gfs_stored_metric_class (void)gfs_stored_metric_class609,17865
#define GFS_IS_MAP_METRIC(GFS_IS_MAP_METRIC633,18449
static void gfs_map_metric_read (GtsObject ** o, GtsFile * fp)gfs_map_metric_read640,18639
static void gfs_map_metric_write (GtsObject * o, FILE * fp)gfs_map_metric_write645,18772
static void gfs_map_metric_class_init (GfsMapClass * klass)gfs_map_metric_class_init650,18902
static void map_metric_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_metric_inverse656,19081
static void gfs_map_metric_init (GfsMap * map)gfs_map_metric_init668,19481
static GfsMapClass * gfs_map_metric_class (void)gfs_map_metric_class673,19572
static void metric_write (GtsObject * o, FILE * fp)metric_write695,20121
static void metric_destroy (GtsObject * o)metric_destroy711,20537
static void metric_read (GtsObject ** o, GtsFile * fp)metric_read722,20809
static void metric_class_init (GtsObjectClass * klass)metric_class_init757,21645
static void metric_init (GfsMetric * m)metric_init764,21800
GfsVariableClass * gfs_metric_class (void)gfs_metric_class772,22084
#define N N797,22667
static double A[N] = {A802,22768
static double B[N] = {B811,23376
static double A[N] = {A823,24036
static double B[N] = {B832,24643
static complex double WofZ (complex double Z)WofZ842,25228
static complex double ZofW (complex double W)ZofW851,25369
#define I3 I3861,25524
#define RA RA863,25582
static void fmap_xy2XYZ (double x, double y, double * X, double * Y, double * Z)fmap_xy2XYZ873,25892
static void cmap_xy2XYZ (double x, double y, double * X, double * Y, double * Z)cmap_xy2XYZ928,27034
static void fmap_XYZ2xy (double X, double Y, double Z, double * x, double * y)fmap_XYZ2xy977,28312
static double angle_between_vectors (const double v1[3], const double v2[3])angle_between_vectors1018,29019
static void plane_normal (const double p1[3], const double p2[3], double plane[3])plane_normal1023,29158
static double excess_of_quad (const double v1[3], const double v2[3],excess_of_quad1034,29504
static void gfs_map_cubed_read (GtsObject ** o, GtsFile * fp)gfs_map_cubed_read1053,30042
static void gfs_map_cubed_write (GtsObject * o, FILE * fp)gfs_map_cubed_write1058,30179
static void gfs_map_cubed_class_init (GfsMapClass * klass)gfs_map_cubed_class_init1063,30313
static int face_num (gdouble X, gdouble Y, gdouble Z)face_num1071,30585
static void map_cubed_transform (GfsMap * map, const FttVector * src, FttVector * dest)map_cubed_transform1087,30946
static void map_cubed_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_cubed_inverse1175,33166
static void map_cubed_inverse_cell (GfsMap * map, const FttVector * src, FttVector * dest)map_cubed_inverse_cell1185,33506
static double evaluate (const FttVector * x, const FttVector * rhs, FttVector * f)evaluate1206,34138
#define DELTA DELTA1218,34422
static void jacobian (const FttVector * x, const FttVector * rhs, FttVector * f,jacobian1220,34442
static void normalized_jacobian (const FttVector * p, GtsMatrix * J)normalized_jacobian1236,34873
static void map_cubed_inverse_vector (GfsMap * map, const FttVector * p,map_cubed_inverse_vector1254,35266
static void map_cubed_transform_vector (GfsMap * map, const FttVector * p,map_cubed_transform_vector1278,35929
static void gfs_map_cubed_init (GfsMap * map)gfs_map_cubed_init1310,36845
static GfsMapClass * gfs_map_cubed_class (void)gfs_map_cubed_class1319,37124
static gdouble cubed_face_scale_metric (const GfsDomain * domain, const FttCellFace * face,cubed_face_scale_metric1344,37706
  double x, y, z;x1354,38026
  double x, y, z;y1354,38026
  double x, y, z;z1354,38026
  double x1, y1, z1;x11355,38044
  double x1, y1, z1;y11355,38044
  double x1, y1, z1;z11355,38044
  double a;a1356,38065
} Point;Point1357,38077
static void point_new (Point * p, double x, double y)point_new1359,38087
static Point ** matrix_refine (Point ** m, int n)matrix_refine1365,38214
static Point ** matrix_from_cell (FttCell * cell)matrix_from_cell1388,39017
static double matrix_a (Point ** r, int m, int i0, int j0)matrix_a1401,39386
static double matrix_hx (Point ** r, int m, int i0, int j0)matrix_hx1413,39718
static double matrix_hy (Point ** r, int m, int i0, int j0)matrix_hy1423,39967
static void cubed_coarse_fine (FttCell * parent, GfsVariable * a)cubed_coarse_fine1433,40216
static void metric_cubed_write (GtsObject * o, FILE * fp)metric_cubed_write1478,41940
static void metric_cubed_read (GtsObject ** o, GtsFile * fp)metric_cubed_read1485,42178
static void metric_cubed_class_init (GtsObjectClass * klass)metric_cubed_class_init1505,42723
static void metric_cubed_init (GfsStoredMetric * m)metric_cubed_init1511,42861
GfsVariableClass * gfs_metric_cubed_class (void)gfs_metric_cubed_class1516,42959
typedef struct _GfsMapLonLat         GfsMapLonLat;GfsMapLonLat1540,43535
struct _GfsMapLonLat {_GfsMapLonLat1542,43587
  GfsMap parent;parent1544,43628
  gdouble r;r1547,43663
#define GFS_MAP_LONLAT(GFS_MAP_LONLAT1550,43680
#define GFS_IS_MAP_LONLAT(GFS_IS_MAP_LONLAT1553,43810
static void gfs_map_lonlat_read (GtsObject ** o, GtsFile * fp)gfs_map_lonlat_read1558,43972
static void gfs_map_lonlat_write (GtsObject * o, FILE * fp)gfs_map_lonlat_write1563,44111
static void gfs_map_lonlat_class_init (GfsMapClass * klass)gfs_map_lonlat_class_init1568,44247
static void map_lonlat_transform (GfsMap * map, const FttVector * src, FttVector * dest)map_lonlat_transform1574,44426
static void map_lonlat_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_lonlat_inverse1581,44648
static void map_lonlat_inverse_cell (GfsMap * map, const FttVector * src, FttVector * dest)map_lonlat_inverse_cell1590,44934
static void gfs_map_lonlat_init (GfsMap * map)gfs_map_lonlat_init1616,45545
static GfsMapClass * gfs_map_lonlat_class (void)gfs_map_lonlat_class1624,45756
static void metric_lon_lat_write (GtsObject * o, FILE * fp)metric_lon_lat_write1649,46355
static gdouble lon_lat_face_metric (const GfsDomain * domain, const FttCellFace * face)lon_lat_face_metric1655,46553
static gdouble lon_lat_cell_metric (const GfsDomain * domain, const FttCell * cell)lon_lat_cell_metric1664,46861
static gdouble lon_lat_scale_metric (const GfsDomain * domain, const FttCell * cell, FttComponent c)lon_lat_scale_metric1669,47013
static gdouble lon_lat_face_scale_metric (const GfsDomain * domain, const FttCellFace * face, lon_lat_face_scale_metric1676,47215
static void lonlat_coarse_fine (FttCell * parent, GfsVariable * a)lonlat_coarse_fine1684,47455
static void lonlat_fine_coarse (FttCell * parent, GfsVariable * a)lonlat_fine_coarse1712,48553
static void metric_lon_lat_read (GtsObject ** o, GtsFile * fp)metric_lon_lat_read1731,49161
static void metric_lon_lat_class_init (GtsObjectClass * klass)metric_lon_lat_class_init1774,50863
static void metric_lon_lat_init (GfsMetricLonLat * m)metric_lon_lat_init1780,51007
GfsVariableClass * gfs_metric_lon_lat_class (void)gfs_metric_lon_lat_class1785,51079
#define GFS_IS_MAP_STRETCH(GFS_IS_MAP_STRETCH1810,51712
static void gfs_map_stretch_read (GtsObject ** o, GtsFile * fp)gfs_map_stretch_read1815,51877
static void gfs_map_stretch_write (GtsObject * o, FILE * fp)gfs_map_stretch_write1820,52018
static void gfs_map_stretch_class_init (GfsMapClass * klass)gfs_map_stretch_class_init1825,52156
static void map_stretch_transform (GfsMap * map, const FttVector * src, FttVector * dest)map_stretch_transform1831,52338
static void map_stretch_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_stretch_inverse1841,52610
static void gfs_map_stretch_init (GfsMap * map)gfs_map_stretch_init1851,52880
static GfsMapClass * gfs_map_stretch_class (void)gfs_map_stretch_class1857,53015
static void metric_stretch_write (GtsObject * o, FILE * fp)metric_stretch_write1882,53606
static gdouble stretch_face_metric (const GfsDomain * domain, const FttCellFace * face)stretch_face_metric1892,53900
static gdouble stretch_cell_metric (const GfsDomain * domain, const FttCell * cell)stretch_cell_metric1909,54319
static void stretch_solid_metric (const GfsDomain * domain, const FttCell * cell, FttVector * m)stretch_solid_metric1919,54549
static gdouble stretch_scale_metric (const GfsDomain * domain, const FttCell * cell, FttComponent c)stretch_scale_metric1933,54904
static gdouble stretch_face_scale_metric (const GfsDomain * domain, const FttCellFace * face,stretch_face_scale_metric1938,55071
static void metric_stretch_read (GtsObject ** o, GtsFile * fp)metric_stretch_read1944,55254
static void metric_stretch_class_init (GtsObjectClass * klass)metric_stretch_class_init1980,56485
static void metric_stretch_init (GfsMetricStretch * m)metric_stretch_init1986,56629
GfsEventClass * gfs_metric_stretch_class (void)gfs_metric_stretch_class1992,56747
#define GFS_IS_MAP_CUBED1(GFS_IS_MAP_CUBED12020,57507
static void gfs_map_cubed1_read (GtsObject ** o, GtsFile * fp)gfs_map_cubed1_read2027,57697
static void gfs_map_cubed1_write (GtsObject * o, FILE * fp)gfs_map_cubed1_write2032,57836
static void gfs_map_cubed1_class_init (GfsMapClass * klass)gfs_map_cubed1_class_init2037,57972
static void map_cubed1_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_cubed1_inverse2043,58151
static void gfs_map_cubed1_init (GfsMap * map)gfs_map_cubed1_init2051,58372
static GfsMapClass * gfs_map_cubed1_class (void)gfs_map_cubed1_class2056,58461
static void metric_cubed1_init (GfsStoredMetric * m)metric_cubed1_init2078,58979
GfsVariableClass * gfs_metric_cubed1_class (void)gfs_metric_cubed1_class2083,59079
#define GFS_IS_MAP_VARIABLE(GFS_IS_MAP_VARIABLE2105,59607
static void gfs_map_variable_read (GtsObject ** o, GtsFile * fp)gfs_map_variable_read2112,59805
static void gfs_map_variable_write (GtsObject * o, FILE * fp)gfs_map_variable_write2117,59948
static void gfs_map_variable_class_init (GfsMapClass * klass)gfs_map_variable_class_init2122,60088
static void map_variable_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_variable_inverse2128,60273
static void gfs_map_variable_init (GfsMap * map)gfs_map_variable_init2143,60835
static GfsMapClass * gfs_map_variable_class (void)gfs_map_variable_class2148,60928
static void metric_variable_coarse_fine (FttCell * parent, GfsVariable * a)metric_variable_coarse_fine2170,61456
static void metric_variable_read (GtsObject ** o, GtsFile * fp)metric_variable_read2187,61874
  GfsMetricVariable * m;m2208,62557
  gdouble max;max2209,62582
  GfsVariable * div;div2210,62597
} UpdateData;UpdateData2211,62618
static void update_metric (FttCell * cell, UpdateData * p)update_metric2213,62633
static gboolean metric_variable_event (GfsEvent * event, GfsSimulation * sim)metric_variable_event2249,64156
static void metric_variable_class_init (GtsObjectClass * klass)metric_variable_class_init2263,64722
static void metric_variable_init (GfsStoredMetric * m)metric_variable_init2269,64887
GfsVariableClass * gfs_metric_variable_class (void)gfs_metric_variable_class2276,65057
static gdouble conformal_face_scale_metric (const GfsDomain * domain, const FttCellFace * face,conformal_face_scale_metric2298,65617
static void metric_laplace_read (GtsObject ** o, GtsFile * fp)metric_laplace_read2306,65861
static void metric_laplace_write (GtsObject * o, FILE * fp)metric_laplace_write2333,66656
static void cartesian_coordinates (FttCell * cell, UpdateData * d)cartesian_coordinates2340,66935
static void spherical_laplacian (FttCell * cell, GfsVariable * dia)spherical_laplacian2351,67216
static gboolean metric_laplace_event (GfsEvent * event, GfsSimulation * sim)metric_laplace_event2357,67405
static void metric_laplace_class_init (GtsObjectClass * klass)metric_laplace_class_init2415,70040
GfsVariableClass * gfs_metric_laplace_class (void)gfs_metric_laplace_class2422,70241

variable.h,5341
#define __VARIABLE_H____VARIABLE_H__21,861
typedef struct _GfsSurfaceGenericBc        GfsSurfaceGenericBc;GfsSurfaceGenericBc27,943
typedef void (* GfsVariableFineCoarseFunc) (FttCell * cell, GfsVariable * v);GfsVariableFineCoarseFunc34,1077
struct _GfsVariable {_GfsVariable36,1156
  GfsEvent parent;parent38,1196
  guint i;i41,1233
  FttComponent component;component42,1244
  GfsVariable * vector[FTT_DIMENSION];vector43,1270
  gchar * name, * description;name44,1309
  gchar * name, * description;description44,1309
  gboolean centered;centered45,1340
  GfsVariableFineCoarseFunc fine_coarse, coarse_fine;fine_coarse46,1361
  GfsVariableFineCoarseFunc fine_coarse, coarse_fine;coarse_fine46,1361
  GtsContainer * sources;sources47,1415
  GfsSurfaceGenericBc * surface_bc;surface_bc48,1441
  GfsBc * default_bc;default_bc49,1477
  GfsDomain * domain;domain50,1499
  FttCellCleanupFunc cleanup;cleanup51,1521
  gdouble units;units52,1551
  GfsVariable * face[2][4];face53,1568
  gboolean face_source; /* whether source terms should be evaluated at cell faces only */face_source54,1596
  gdouble orientation;   /* orientation of rotated variable */orientation55,1686
  gboolean even;         /* "eveness" of rotated variable */even56,1749
typedef struct _GfsVariableClass    GfsVariableClass;GfsVariableClass59,1814
struct _GfsVariableClass {_GfsVariableClass61,1869
  GfsEventClass parent_class;parent_class63,1914
#define GFS_VARIABLE(GFS_VARIABLE68,1966
#define GFS_VARIABLE_CLASS(GFS_VARIABLE_CLASS71,2091
#define GFS_IS_VARIABLE(GFS_IS_VARIABLE74,2214
#define GFS_VALUE(GFS_VALUE76,2315
#define               gfs_temporary_variable(gfs_temporary_variable83,2637
#define GFS_IS_VARIABLE_BOOLEAN(GFS_IS_VARIABLE_BOOLEAN100,3438
typedef struct _GfsVariableTracer                GfsVariableTracer;GfsVariableTracer107,3648
struct _GfsVariableTracer {_GfsVariableTracer109,3717
  GfsVariable parent;parent111,3763
  GfsAdvectionParams advection;advection114,3803
#define GFS_VARIABLE_TRACER(GFS_VARIABLE_TRACER117,3839
#define GFS_IS_VARIABLE_TRACER(GFS_IS_VARIABLE_TRACER120,3988
#define GFS_IS_VARIABLE_RESIDUAL(GFS_IS_VARIABLE_RESIDUAL127,4197
typedef struct _GfsVariableFiltered                GfsVariableFiltered;GfsVariableFiltered134,4414
struct _GfsVariableFiltered {_GfsVariableFiltered136,4487
  GfsVariable parent;parent138,4535
  GfsVariable * v;v141,4575
  guint niter;niter142,4594
#define GFS_VARIABLE_FILTERED(GFS_VARIABLE_FILTERED145,4613
#define GFS_IS_VARIABLE_FILTERED(GFS_IS_VARIABLE_FILTERED148,4768
typedef struct _GfsVariableFunction                GfsVariableFunction;GfsVariableFunction159,5075
struct _GfsVariableFunction {_GfsVariableFunction161,5148
  GfsVariable parent;parent163,5196
  GfsFunction * f;f166,5236
#define GFS_VARIABLE_FUNCTION(GFS_VARIABLE_FUNCTION169,5259
#define GFS_IS_VARIABLE_FUNCTION(GFS_IS_VARIABLE_FUNCTION172,5414
#define GFS_IS_VARIABLE_STREAM_FUNCTION(GFS_IS_VARIABLE_STREAM_FUNCTION181,5647
#define GFS_IS_VARIABLE_AGE(GFS_IS_VARIABLE_AGE190,5899
typedef struct _GfsVariableAverage                GfsVariableAverage;GfsVariableAverage197,6098
struct _GfsVariableAverage {_GfsVariableAverage199,6169
  GfsVariableFunction parent;parent201,6216
  FttComponent c;c204,6264
#define GFS_VARIABLE_AVERAGE(GFS_VARIABLE_AVERAGE207,6286
#define GFS_IS_VARIABLE_AVERAGE(GFS_IS_VARIABLE_AVERAGE210,6438
struct _GfsDerivedVariable {_GfsDerivedVariable217,6649
  GtsObject parent;parent219,6696
  gchar * name, * description;name222,6734
  gchar * name, * description;description222,6734
  gpointer func, data;func223,6765
  gpointer func, data;data223,6765
#define GFS_DERIVED_VARIABLE(GFS_DERIVED_VARIABLE226,6792
#define GFS_IS_DERIVED_VARIABLE(GFS_IS_DERIVED_VARIABLE229,6940
typedef struct _GfsConstant GfsConstant;GfsConstant238,7258
struct _GfsConstant {_GfsConstant241,7330
  GfsEvent parent;parent243,7370
  GfsDerivedVariable * derived;derived244,7389
  gdouble val; /**< the value of the constant */val247,7439
#define GFS_CONSTANT(GFS_CONSTANT250,7492
#define GFS_IS_CONSTANT(GFS_IS_CONSTANT253,7617
typedef struct _GfsSpatialSum         GfsSpatialSum;GfsSpatialSum260,7807
struct _GfsSpatialSum {_GfsSpatialSum263,7893
  GfsConstant parent;parent265,7935
  GfsFunction * v; /**< the function to sum */v268,7975
#define GFS_SPATIAL_SUM(GFS_SPATIAL_SUM271,8026
#define GFS_IS_SPATIAL_SUM(GFS_IS_SPATIAL_SUM274,8159
typedef struct _GfsVariablePoisson                GfsVariablePoisson;GfsVariablePoisson281,8349
struct _GfsVariablePoisson {_GfsVariablePoisson283,8420
  GfsVariableFunction parent;parent285,8467
  GfsMultilevelParams par;par288,8515
#define GFS_VARIABLE_POISSON(GFS_VARIABLE_POISSON291,8546
#define GFS_IS_VARIABLE_POISSON(GFS_IS_VARIABLE_POISSON294,8698
#define GFS_IS_VARIABLE_LAPLACIAN(GFS_IS_VARIABLE_LAPLACIAN301,8911
typedef struct _GfsHydrostaticPressure GfsHydrostaticPressure;GfsHydrostaticPressure308,9132
struct _GfsHydrostaticPressure {_GfsHydrostaticPressure311,9237
  GfsVariable parent;parent313,9288
  FttComponent c;c314,9310
#define GFS_HYDROSTATIC_PRESSURE(GFS_HYDROSTATIC_PRESSURE317,9332
#define GFS_IS_HYDROSTATIC_PRESSURE(GFS_IS_HYDROSTATIC_PRESSURE320,9492

cartesian.c,947
static void cartesian_grid_read (GtsObject ** o, GtsFile * fp)cartesian_grid_read31,1018
static void cartesian_grid_write (GtsObject * o, FILE * fp)cartesian_grid_write108,3216
static void cartesian_grid_destroy (GtsObject * object)cartesian_grid_destroy135,3948
static void cartesian_grid_class_init (GtsObjectClass * klass)cartesian_grid_class_init156,4414
GtsObjectClass * gfs_cartesian_grid_class (void)gfs_cartesian_grid_class164,4721
GfsCartesianGrid * gfs_cartesian_grid_new (GtsObjectClass * klass)gfs_cartesian_grid_new184,5216
static void slice (GfsCartesianGrid * g, guint p, GfsCartesianGrid * s)slice193,5411
static gint lookup (GfsCartesianGrid * g, gdouble x)lookup205,5649
gboolean gfs_cartesian_grid_interpolate (GfsCartesianGrid * g, gdouble * p, gdouble * val)gfs_cartesian_grid_interpolate229,6191
GfsCartesianGrid * gfs_cartesian_grid_read (const gchar * name, GtsFile * fp)gfs_cartesian_grid_read268,7231

spatial.h,679
#define __SPATIAL_H____SPATIAL_H__21,855
#define intersection(intersection27,1009
#define union(union28,1045
#define difference(difference29,1081
#define X X31,1121
#define Y Y32,1134
#define Z Z33,1147
#define rx rx34,1160
#define ry ry35,1174
#define rz rz36,1188
static double _x = 0., _y = 0., _z = 0.;_x38,1203
static double _x = 0., _y = 0., _z = 0.;_y38,1203
static double _x = 0., _y = 0., _z = 0.;_z38,1203
static double ellipse (double xc, double yc, double a, double b)ellipse40,1245
static double sphere (double xc, double yc, double zc, double r)sphere46,1433
static double cube (double xc, double yc, double zc, double h)cube51,1583

boundary.h,5967
#define __BOUNDARY_H____BOUNDARY_H__21,856
typedef struct _GfsBox                    GfsBox;GfsBox30,977
typedef struct _GfsBoxClass               GfsBoxClass;GfsBoxClass31,1027
typedef struct _GfsBoundary               GfsBoundary;GfsBoundary32,1082
typedef struct _GfsBoundaryClass          GfsBoundaryClass;GfsBoundaryClass33,1137
typedef struct _GfsBc         GfsBc;GfsBc37,1219
struct _GfsBc {_GfsBc39,1257
  GtsObject parent;parent41,1291
  GfsLinearProblem * lp;lp42,1311
  GfsBoundary * b;b45,1354
  GfsVariable * v;v46,1373
  gboolean extra;extra47,1392
  FttFaceTraverseFunc bc, homogeneous_bc;bc48,1410
  FttFaceTraverseFunc bc, homogeneous_bc;homogeneous_bc48,1410
  FttFaceTraverseFunc homogeneous_bc_stencil;homogeneous_bc_stencil49,1452
  FttFaceTraverseFunc face_bc;face_bc50,1498
typedef struct _GfsBcClass    GfsBcClass;GfsBcClass53,1533
struct _GfsBcClass {_GfsBcClass55,1576
  GtsObjectClass parent_class;parent_class57,1615
#define GFS_BC(GFS_BC62,1670
#define GFS_BC_CLASS(GFS_BC_CLASS65,1813
#define GFS_IS_BC(GFS_IS_BC68,1940
typedef struct _GfsBcValue         GfsBcValue;GfsBcValue78,2192
struct _GfsBcValue {_GfsBcValue80,2240
  GfsBc parent;parent82,2279
  GfsFunction * val;val85,2313
#define GFS_BC_VALUE(GFS_BC_VALUE88,2338
#define GFS_IS_BC_VALUE(GFS_IS_BC_VALUE91,2462
#define GFS_IS_BC_DIRICHLET(GFS_IS_BC_DIRICHLET98,2636
#define GFS_IS_BC_NEUMANN(GFS_IS_BC_NEUMANN105,2820
#define GFS_IS_BC_ANGLE(GFS_IS_BC_ANGLE112,2996
typedef struct _GfsBcNavier         GfsBcNavier;GfsBcNavier119,3167
struct _GfsBcNavier {_GfsBcNavier121,3217
  GfsBcValue parent;parent123,3257
  GfsFunction * lambda;lambda126,3296
#define GFS_BC_NAVIER(GFS_BC_NAVIER129,3324
#define GFS_IS_BC_NAVIER(GFS_IS_BC_NAVIER132,3451
  GFS_BOUNDARY_CENTER_VARIABLE,GFS_BOUNDARY_CENTER_VARIABLE140,3640
  GFS_BOUNDARY_FACE_VARIABLE,GFS_BOUNDARY_FACE_VARIABLE141,3672
  GFS_BOUNDARY_MATCH_VARIABLE,GFS_BOUNDARY_MATCH_VARIABLE142,3702
  GFS_BOUNDARY_VARIABLE_NUMBERGFS_BOUNDARY_VARIABLE_NUMBER143,3733
} GfsBoundaryVariableType;GfsBoundaryVariableType144,3764
struct _GfsBoundary {_GfsBoundary146,3792
  GtsObject parent;parent148,3832
  FttCell * root;root150,3853
  GfsBox * box;box151,3871
  FttDirection d;d152,3887
  guint depth;depth153,3905
  GfsBc * default_bc;default_bc154,3920
  gboolean changed;changed155,3942
  GfsVariable * v;v158,3980
  GfsBoundaryVariableType type;type159,3999
  GHashTable * bc;bc160,4031
struct _GfsBoundaryClass {_GfsBoundaryClass163,4054
  GtsObjectClass parent_class;parent_class164,4081
  void (* match)             (GfsBoundary * boundary);match166,4113
  void (* send)              (GfsBoundary * boundary);send167,4168
  void (* receive)           (GfsBoundary * boundary,receive168,4223
  void (* synchronize)       (GfsBoundary * boundary);synchronize171,4336
  void (* update)            (GfsBoundary * boundary);update172,4391
#define GFS_BOUNDARY(GFS_BOUNDARY175,4450
#define GFS_BOUNDARY_CLASS(GFS_BOUNDARY_CLASS178,4579
#define GFS_IS_BOUNDARY(GFS_IS_BOUNDARY181,4706
typedef struct _GfsBoundaryInflowConstant         GfsBoundaryInflowConstant;GfsBoundaryInflowConstant205,5826
typedef struct _GfsBoundaryInflowConstantClass    GfsBoundaryInflowConstantClass;GfsBoundaryInflowConstantClass206,5903
struct _GfsBoundaryInflowConstant {_GfsBoundaryInflowConstant208,5986
  GfsBoundary parent;parent209,6022
  GfsFunction * un;un211,6045
struct _GfsBoundaryInflowConstantClass {_GfsBoundaryInflowConstantClass214,6069
  GfsBoundaryClass parent_class;parent_class215,6110
#define GFS_BOUNDARY_INFLOW_CONSTANT(GFS_BOUNDARY_INFLOW_CONSTANT218,6147
#define GFS_BOUNDARY_INFLOW_CONSTANT_CLASS(GFS_BOUNDARY_INFLOW_CONSTANT_CLASS221,6292
#define GFS_IS_BOUNDARY_INFLOW_CONSTANT(GFS_IS_BOUNDARY_INFLOW_CONSTANT224,6456
typedef struct _GfsBoundaryOutflowClass    GfsBoundaryOutflowClass;GfsBoundaryOutflowClass231,6698
struct _GfsBoundaryOutflowClass {_GfsBoundaryOutflowClass233,6767
  GfsBoundaryClass parent_class;parent_class234,6801
#define GFS_BOUNDARY_OUTFLOW_CLASS(GFS_BOUNDARY_OUTFLOW_CLASS237,6838
#define GFS_IS_BOUNDARY_OUTFLOW(GFS_IS_BOUNDARY_OUTFLOW240,6988
#define GFS_IS_BOUNDARY_GRADIENT(GFS_IS_BOUNDARY_GRADIENT247,7213
typedef struct _GfsBoundaryPeriodic         GfsBoundaryPeriodic;GfsBoundaryPeriodic254,7434
struct _GfsBoundaryPeriodic {_GfsBoundaryPeriodic256,7500
  GfsBoundary parent;parent258,7548
  GfsBox * matching;matching260,7571
  FttDirection d;d261,7592
  GArray * sndbuf, * rcvbuf;sndbuf262,7610
  GArray * sndbuf, * rcvbuf;rcvbuf262,7610
  guint sndcount, rcvcount;sndcount263,7639
  guint sndcount, rcvcount;rcvcount263,7639
  gdouble rotate;rotate265,7668
#define GFS_BOUNDARY_PERIODIC(GFS_BOUNDARY_PERIODIC268,7690
#define GFS_IS_BOUNDARY_PERIODIC(GFS_IS_BOUNDARY_PERIODIC271,7845
typedef struct _GfsGEdge         GfsGEdge;GfsGEdge291,8588
typedef struct _GfsGEdgeClass    GfsGEdgeClass;GfsGEdgeClass292,8631
struct _GfsGEdge {_GfsGEdge294,8680
  GtsGEdge parent;parent295,8699
  FttDirection d, rotate;d297,8719
  FttDirection d, rotate;rotate297,8719
struct _GfsGEdgeClass {_GfsGEdgeClass300,8749
  GtsGEdgeClass parent_class;parent_class301,8773
#define GFS_GEDGE(GFS_GEDGE304,8807
#define GFS_GEDGE_CLASS(GFS_GEDGE_CLASS307,8925
#define GFS_IS_GEDGE(GFS_IS_GEDGE310,9041
struct _GfsBox {_GfsBox319,9375
  GtsGNode parent;parent320,9392
  FttCell * root;root322,9412
  GtsObject * neighbor[FTT_NEIGHBORS];neighbor323,9430
  guint id;id324,9469
  int pid;pid325,9481
  gint size;size326,9492
struct _GfsBoxClass {_GfsBoxClass329,9509
  GtsGNodeClass parent_class;parent_class330,9531
#define GFS_BOX(GFS_BOX333,9565
#define GFS_BOX_CLASS(GFS_BOX_CLASS336,9673
#define GFS_IS_BOX(GFS_IS_BOX339,9791
GfsDomain * gfs_box_domain (GfsBox * box)gfs_box_domain346,10035

timestep.h,1024
#define __TIMESTEP_H____TIMESTEP_H__21,856
struct _GfsSurfaceGenericBc {_GfsSurfaceGenericBc102,3779
  GtsObject parent;parent104,3827
  GfsVariable * v;  v107,3865
typedef struct _GfsSurfaceGenericBcClass    GfsSurfaceGenericBcClass;GfsSurfaceGenericBcClass110,3890
struct _GfsSurfaceGenericBcClass {_GfsSurfaceGenericBcClass112,3961
  GtsObjectClass parent_class;parent_class114,4014
  void (* bc) (FttCell *, GfsSurfaceGenericBc *);bc117,4063
#define GFS_SURFACE_GENERIC_BC(GFS_SURFACE_GENERIC_BC120,4117
#define GFS_SURFACE_GENERIC_BC_CLASS(GFS_SURFACE_GENERIC_BC_CLASS123,4270
#define GFS_IS_SURFACE_GENERIC_BC(GFS_IS_SURFACE_GENERIC_BC126,4421
typedef struct _GfsSurfaceBc         GfsSurfaceBc;GfsSurfaceBc133,4637
struct _GfsSurfaceBc {_GfsSurfaceBc135,4689
  GfsSurfaceGenericBc parent;parent137,4730
  GfsFunction * type, * val;type140,4778
  GfsFunction * type, * val;val140,4778
#define GFS_SURFACE_BC(GFS_SURFACE_BC143,4811
#define GFS_IS_SURFACE_BC(GFS_IS_SURFACE_BC146,4941

moving.c,5801
#define OLD_SOLID(OLD_SOLID39,1185
  GfsDomain * domain;domain42,1279
  gdouble dt;dt43,1301
  FttComponent c;c44,1315
  GfsVariable * div;div45,1333
  GfsVariable * v;v46,1354
} DivergenceData;DivergenceData47,1373
static void numbered_vertex_read (GtsObject ** o, GtsFile * f)numbered_vertex_read53,1447
static void numbered_vertex_class_init (GtsObjectClass * klass)numbered_vertex_class_init63,1697
GtsVertexClass * gfs_numbered_vertex_class (void)gfs_numbered_vertex_class68,1804
  GfsSimulation * sim;sim95,2427
  GfsSolidMoving * s;s96,2450
  GfsVariable * old_solid_v, ** sold2, ** v;old_solid_v97,2472
  GfsVariable * old_solid_v, ** sold2, ** v;sold297,2472
  GfsVariable * old_solid_v, ** sold2, ** v;v97,2472
  GArray * stmp, * sall;stmp98,2517
  GArray * stmp, * sall;sall98,2517
} SolidInfo;SolidInfo99,2542
static double surface_value (FttCell * cell, GfsVariable * v, FttVector * ca)surface_value101,2556
static void init_new_cell_velocity_from_solid (FttCell * cell, SolidInfo * p)init_new_cell_velocity_from_solid135,3536
static void update_neighbors (FttCell * cell)update_neighbors142,3744
static gboolean refine_maxlevel (FttCell * cell, gint * maxlevel)refine_maxlevel154,4077
static void moving_cell_coarse_fine (FttCell * cell, GfsVariable * v)moving_cell_coarse_fine159,4194
static void moving_vof_cell_coarse_fine (FttCell * cell, GfsVariable * v)moving_vof_cell_coarse_fine174,4613
static void moving_cell_init (FttCell * cell, SolidInfo * solid_info)moving_cell_init210,5566
static void moving_cell_fine_init (FttCell * cell, SolidInfo * solid_info)moving_cell_fine_init243,6458
static void create_new_cells (FttCell * cell, GfsSurface * s, SolidInfo * solid_info)create_new_cells269,7239
static FttVector rpos[FTT_NEIGHBORS] = {rpos288,7973
static void match (FttCell * cell, GfsBoundary * boundary)match296,8196
static void boundary_match (GfsBoundary * boundary)boundary_match372,10745
static void renew_boundary (GfsBox * box, GfsSimulation * sim)renew_boundary389,11250
static void remesh_surface_moving (GfsSimulation * sim, GfsSolidMoving * s)remesh_surface_moving419,12317
static void solid_moving_destroy (GtsObject * object)solid_moving_destroy436,12903
static void solid_moving_read (GtsObject ** o, GtsFile * fp)solid_moving_read442,13116
static void solid_moving_write (GtsObject * object, FILE * fp)solid_moving_write506,14901
static void set_old_solid (FttCell * cell, GfsVariable * old_solid_v)set_old_solid518,15283
static void check_face (FttCellFace * f, guint * nf)check_face526,15505
static void check_solid_fractions (GfsBox * box, guint * nf)check_solid_fractions534,15691
static void is_diffusion (GfsSource * s, gboolean * diffusion)is_diffusion544,15988
static void set_permanent (FttCell * cell)set_permanent549,16110
  GfsDomain * domain;domain555,16212
  GfsVariable * status;status556,16234
  GfsVariable ** v;v557,16258
} ReInitParams;ReInitParams558,16278
static void redistribute_destroyed_cells_content (FttCell * cell, ReInitParams * p)redistribute_destroyed_cells_content560,16295
static guint domain_reinit_solid_fractions (GfsSimulation * sim,domain_reinit_solid_fractions629,18488
static void reinit_solid_fractions (GfsSimulation * sim)reinit_solid_fractions663,19448
static void moving_advection_update (GSList * merged, const GfsAdvectionParams * par)moving_advection_update694,20465
static void moving_init (GfsSimulation * sim)moving_init765,22587
static gboolean solid_moving_event (GfsEvent * event, GfsSimulation * sim)solid_moving_event790,23401
static void solid_moving_class_init (GfsEventClass * klass)solid_moving_class_init797,23637
static void solid_moving_init (GfsSolidMoving * solid)solid_moving_init805,23909
GfsEventClass * gfs_solid_moving_class (void)gfs_solid_moving_class813,24118
#define MOVING_CFL MOVING_CFL835,24675
static void set_dtmax (FttCell * cell, SolidInfo * p)set_dtmax842,24792
static void simulation_moving_set_timestep (GfsSimulation * sim)simulation_moving_set_timestep857,25137
static void move_vertex (GfsNumberedVertex * v, SolidInfo * par)move_vertex869,25512
static void move_vertex_mpi (GfsNumberedVertex * v, SolidInfo * par)move_vertex_mpi885,25942
static void synchronize_vertex (GfsNumberedVertex * v, SolidInfo * par)synchronize_vertex905,26577
static void solid_move_remesh (GfsSolidMoving * solid, GfsSimulation * sim)solid_move_remesh916,26843
static void move_solids (GfsSimulation * sim)move_solids949,27976
static void moving_divergence_approx (FttCell * cell, DivergenceData * p)moving_divergence_approx993,29501
static void moving_divergence_distribution (GSList * merged, DivergenceData * p)moving_divergence_distribution1000,29748
static void divergence_approx_hook (GfsDomain * domain, divergence_approx_hook1027,30540
static void moving_divergence_mac (FttCell * cell, DivergenceData * p)moving_divergence_mac1043,31068
static void divergence_mac_hook_order_1 (GfsDomain * domain,divergence_mac_hook_order_11053,31455
static void divergence_mac_hook_order_2 (GfsDomain * domain, divergence_mac_hook_order_21070,31898
static void moving_mac_projection (GfsSimulation * sim,moving_mac_projection1087,32354
static void simulation_moving_run (GfsSimulation * sim)simulation_moving_run1103,32867
static void simulation_moving_class_init (GfsSimulationClass * klass)simulation_moving_class_init1220,36704
static void old_solid_cleanup (FttCell * cell, GfsVariable * old_solid_v)old_solid_cleanup1225,36817
static void none (void) {}none1231,36952
static void simulation_moving_init (GfsDomain * domain)simulation_moving_init1233,36980
GfsSimulationClass * gfs_simulation_moving_class (void)gfs_simulation_moving_class1251,37850

domain.c,19793
static void locate_index (FttVector * p, GfsLocateArray * a, gint i[FTT_DIMENSION])locate_index43,1212
static void root_bounds (FttCell * root, GfsLocateArray * a)root_bounds50,1399
static void box_bounds (GfsBox * box, GfsLocateArray * a)box_bounds61,1709
static gint locate_linear_index (FttVector * p, GfsLocateArray * a)locate_linear_index70,1964
static void box_index (GfsBox * b, GfsLocateArray * a)box_index82,2250
GfsLocateArray * gfs_locate_array_new (GfsDomain * domain)gfs_locate_array_new109,2988
GSList * gfs_locate_array_locate (GfsLocateArray * a, FttVector * p)gfs_locate_array_locate139,3838
void gfs_locate_array_destroy (GfsLocateArray * a)gfs_locate_array_destroy152,4145
static void domain_write (GtsObject * o, FILE * fp)domain_write168,4388
static void domain_read (GtsObject ** o, GtsFile * fp)domain_read211,5711
static void box_set_pos (GfsBox * box, FttVector * pos, box_set_pos295,8155
static void set_ref_pos (GfsBox * box, FttVector * pos)set_ref_pos343,9372
static void pid_max (GfsBox * box, gint * np)pid_max349,9492
  GSList * removed;removed356,9604
  gint pid;pid357,9624
} RemovedData;RemovedData358,9636
static void removed_list (GfsBox * box, RemovedData * p)removed_list360,9652
static void mpi_links (GfsBox * box, GfsDomain * domain)mpi_links384,10462
static void add_id (GfsBox * box, GPtrArray * ids)add_id406,11066
static GPtrArray * box_ids (GfsDomain * domain)box_ids413,11235
static void convert_boundary_mpi_into_edges (GfsBox * box, GPtrArray * ids)convert_boundary_mpi_into_edges420,11415
static void domain_post_read (GfsDomain * domain, GtsFile * fp)domain_post_read466,12799
static void free_pair (gpointer key, gpointer value)free_pair520,14664
static void cleanup_each_box (GfsBox * box, GfsDomain * domain)cleanup_each_box526,14756
static void domain_destroy (GtsObject * o)domain_destroy541,15355
static void add_item (gpointer item, GPtrArray * a)add_item581,16386
static int compare_boxes (const void * p1, const void * p2)compare_boxes586,16472
static void domain_foreach (GtsContainer * c, domain_foreach597,16770
static void domain_add (GtsContainer * c, GtsContainee * i)domain_add619,17467
static void domain_remove (GtsContainer * c, GtsContainee * i)domain_remove625,17658
static void domain_class_init (GfsDomainClass * klass)domain_class_init631,17855
static void domain_init (GfsDomain * domain)domain_init644,18269
GfsDomainClass * gfs_domain_class (void)gfs_domain_class694,19443
  FttTraverseFlags flags;flags716,19960
  gint max_depth;max_depth717,19986
  GfsVariable * v, * v1;v718,20004
  GfsVariable * v, * v1;v1718,20004
  FttComponent c;c719,20029
  GfsLinearProblem * lp;lp720,20047
} BcData;BcData721,20072
static void box_bc (GfsBox * box, BcData * p)box_bc723,20083
static void direction_face_bc (GtsObject * neighbor,direction_face_bc746,20629
static void box_face_bc (GfsBox * box, BcData * p)box_face_bc765,21123
static void box_receive_bc (GfsBox * box, BcData * r)box_receive_bc779,21446
static void box_match (GfsBox * box)box_match799,22090
static void box_synchronize (GfsBox * box, FttComponent * c)box_synchronize819,22652
void gfs_domain_copy_bc (GfsDomain * domain,gfs_domain_copy_bc846,23450
void gfs_domain_bc (GfsDomain * domain,gfs_domain_bc878,24341
static void box_homogeneous_bc (GfsBox * box, BcData * p)box_homogeneous_bc889,24586
static void box_homogeneous_bc_stencil (GfsBox * box, BcData * p)box_homogeneous_bc_stencil911,25129
void gfs_domain_homogeneous_bc (GfsDomain * domain,gfs_domain_homogeneous_bc945,26125
void gfs_domain_homogeneous_bc_stencil (GfsDomain * domain,gfs_domain_homogeneous_bc_stencil980,27221
  FttCellTraverseFunc func;func996,27644
  gpointer data;data997,27672
  FttTraverseType order;order998,27689
  FttTraverseFlags flags;flags999,27714
  gint max_depth;max_depth1000,27740
} TraverseData;TraverseData1001,27758
  TraverseData t;t1004,27792
  BcData b;b1005,27810
} TraverseBcData;TraverseBcData1006,27822
static void update_mpi_cell (FttCell * cell, TraverseData * p)update_mpi_cell1008,27841
static void update_other_cell (FttCell * cell, TraverseData * p)update_other_cell1016,28024
static void update_mpi_boundaries (GfsBox * box, TraverseBcData * p)update_mpi_boundaries1024,28211
static void update_other_homogeneous_boundaries (GfsBox * box, BcData * p)update_other_homogeneous_boundaries1048,28903
void gfs_traverse_and_homogeneous_bc (GfsDomain * domain,gfs_traverse_and_homogeneous_bc1093,30411
static void update_other_boundaries (GfsBox * box, BcData * p)update_other_boundaries1127,31722
void gfs_traverse_and_bc (GfsDomain * domain,gfs_traverse_and_bc1172,33154
void gfs_domain_face_bc (GfsDomain * domain,gfs_domain_face_bc1213,34560
static void box_changed (GfsBox * box, gboolean * changed)box_changed1234,35229
static void refine_cell_corner (FttCell * cell, GfsDomain * domain)refine_cell_corner1243,35454
static void box_depth (GfsBox * box, guint * depth)box_depth1249,35664
static gboolean domain_match (GfsDomain * domain)domain_match1257,35796
void gfs_domain_match (GfsDomain * domain)gfs_domain_match1284,36739
void gfs_domain_forget_boundary (GfsDomain * domain, GfsBoundary * boundary)gfs_domain_forget_boundary1305,37207
static void dirichlet_bc (FttCell * cell)dirichlet_bc1320,37595
static void neumann_bc (FttCell * cell)neumann_bc1326,37715
static gboolean is_velocity (GfsVariable * v, GfsDomain * domain)is_velocity1332,37834
void gfs_domain_surface_bc (GfsDomain * domain,gfs_domain_surface_bc1350,38221
static void box_traverse (GfsBox * box, TraverseData * d)box_traverse1368,38877
void gfs_domain_cell_traverse (GfsDomain * domain,gfs_domain_cell_traverse1388,39583
static void cell_traverse_add (FttCell * cell, GPtrArray * a)cell_traverse_add1403,40005
FttCellTraverse * gfs_domain_cell_traverse_new (GfsDomain * domain,gfs_domain_cell_traverse_new1420,40510
void gfs_domain_traverse_layers (GfsDomain * domain,gfs_domain_traverse_layers1449,41437
static void box_traverse_box (GfsBox * box, gpointer * datum)box_traverse_box1462,41764
void gfs_domain_cell_traverse_box (GfsDomain * domain,gfs_domain_cell_traverse_box1491,42773
static void box_traverse_condition (GfsBox * box, gpointer * datum)box_traverse_condition1516,43337
void gfs_domain_cell_traverse_condition (GfsDomain * domain,gfs_domain_cell_traverse_condition1550,44540
static void traverse_mixed (GfsBox * box, TraverseData * d)traverse_mixed1576,45190
void gfs_domain_traverse_mixed (GfsDomain * domain,gfs_domain_traverse_mixed1592,45687
  FttCellTraverseCutFunc func;func1607,46072
  gpointer data;data1608,46103
  FttTraverseType order;order1609,46120
  FttTraverseFlags flags;flags1610,46145
  GfsGenericSurface * s;s1611,46171
} TraverseCut;TraverseCut1612,46196
static void traverse_cut (GfsBox * box, TraverseCut * p)traverse_cut1614,46212
void gfs_domain_traverse_cut (GfsDomain * domain,gfs_domain_traverse_cut1631,46741
static void traverse_cut_2D (GfsBox * box, TraverseCut * p)traverse_cut_2D1647,47190
void gfs_domain_traverse_cut_2D (GfsDomain * domain,gfs_domain_traverse_cut_2D1666,47778
guint gfs_domain_depth (GfsDomain * domain)gfs_domain_depth1690,48444
void gfs_domain_face_traverse (GfsDomain * domain,gfs_domain_face_traverse1725,49592
static void cell_traverse_boundary (GfsBox * box, gpointer * datum)cell_traverse_boundary1795,51667
void gfs_domain_cell_traverse_boundary (GfsDomain * domain,gfs_domain_cell_traverse_boundary1827,52750
static void add_stats (const FttCell * cell, gpointer * data)add_stats1851,53316
static void range_reduce (void * i, void * o, range_reduce1861,53537
static void domain_range_reduce (GfsDomain * domain, GtsRange * s)domain_range_reduce1878,53938
static void domain_range_reduce (GfsDomain * domain, GtsRange * s)domain_range_reduce1895,54477
GtsRange gfs_domain_stats_variable (GfsDomain * domain,gfs_domain_stats_variable1919,55194
static void add_stats_solid (FttCell * cell, GtsRange * s)add_stats_solid1948,55956
GtsRange gfs_domain_stats_solid (GfsDomain * domain)gfs_domain_stats_solid1962,56391
static void add_stats_merged (GSList * m, gpointer * data)add_stats_merged1977,56729
void gfs_domain_stats_merged (GfsDomain * domain,gfs_domain_stats_merged2010,57626
static void cell_count (FttCell * cell, guint * count)cell_count2032,58189
#define BPID(BPID2037,58263
static void box_count (GfsBox * b, GArray * a)box_count2039,58342
static void boundary_size (GfsBox * box, GArray * a)boundary_size2049,58645
void gfs_domain_stats_balance (GfsDomain * domain,gfs_domain_stats_balance2074,59605
static void add_norm (const FttCell * cell, gpointer * data)add_norm2116,60860
static void add_norm_weighted (FttCell * cell, gpointer * data)add_norm_weighted2124,61057
static void norm_reduce (void * i, void * o, norm_reduce2135,61334
static void domain_norm_reduce (GfsDomain * domain, GfsNorm * n)domain_norm_reduce2151,61721
static void domain_norm_reduce (GfsDomain * domain, GfsNorm * n)domain_norm_reduce2168,62258
GfsNorm gfs_domain_norm_variable (GfsDomain * domain,gfs_domain_norm_variable2195,63118
  GfsVariable * res;res2234,64135
  gdouble bias;bias2235,64156
  GfsNorm n;n2236,64172
} ResData;ResData2237,64185
static void add_norm_residual (const FttCell * cell, ResData * p)add_norm_residual2239,64197
GfsNorm gfs_domain_norm_residual (GfsDomain * domain,gfs_domain_norm_residual2264,65139
GfsVariable ** gfs_domain_velocity (GfsDomain * domain)gfs_domain_velocity2296,65920
static void add_norm_velocity (FttCell * cell, gpointer * data)add_norm_velocity2312,66305
GfsNorm gfs_domain_norm_velocity (GfsDomain * domain,gfs_domain_norm_velocity2331,66903
GfsDomain * gfs_domain_read (GtsFile * fp)gfs_domain_read2362,67686
  GSList * boxlist;boxlist2381,68088
  guint bid;bid2382,68108
  gboolean one_box_per_pe;one_box_per_pe2383,68121
  gint pid;pid2384,68148
  GfsVariable * newboxp;newboxp2385,68160
  GfsDomain * domain;domain2386,68185
} SplitPar;SplitPar2387,68207
static void box_split (GfsBox * box, SplitPar * p)box_split2389,68220
static GtsGEdge * node_is_linked (GtsGNode * n1, GtsGNode * n2, FttDirection d)node_is_linked2450,70245
static void box_link (GfsBox * box, SplitPar * p)box_link2462,70530
static void box_destroy (GfsBox * box, GfsVariable * newboxp)box_destroy2534,72906
static void get_ref_pos (GfsBox * box, FttVector * pos)get_ref_pos2559,73574
void gfs_domain_split (GfsDomain * domain, gboolean one_box_per_pe)gfs_domain_split2576,74075
FttCell * gfs_domain_locate (GfsDomain * domain,gfs_domain_locate2623,75704
FttCell * gfs_domain_boundary_locate (GfsDomain * domain,gfs_domain_boundary_locate2656,76762
static void box_distance2 (GfsBox * box, GPtrArray * a)box_distance22686,77550
static void bubble_sort (GPtrArray * a, gdouble * d)bubble_sort2691,77639
gdouble gfs_domain_cell_point_distance2 (GfsDomain * domain,gfs_domain_cell_point_distance22721,78461
void gfs_domain_advect_point (GfsDomain * domain, gfs_domain_advect_point2764,79689
static void count (FttCell * cell, guint * n)count2790,80344
guint gfs_domain_size (GfsDomain * domain,gfs_domain_size2804,80645
  gdouble cfl;cfl2819,81006
  GfsVariable ** v;v2820,81021
  GfsDomain * domain;domain2821,81041
} CflData;CflData2822,81063
static void minimum_mac_cfl (FttCellFace * face, CflData * p)minimum_mac_cfl2824,81075
static void minimum_cfl (FttCell * cell, CflData * p)minimum_cfl2857,81989
gdouble gfs_domain_cfl (GfsDomain * domain,gfs_domain_cfl2906,83290
void gfs_cell_init (FttCell * cell, GfsDomain * domain)gfs_cell_init2932,84028
void gfs_cell_reinit (FttCell * cell, GfsDomain * domain)gfs_cell_reinit2963,84848
void gfs_cell_fine_init (FttCell * parent, GfsDomain * domain)gfs_cell_fine_init2979,85243
void gfs_cell_copy (const FttCell * from, gfs_cell_copy3020,86287
void gfs_cell_write (const FttCell * cell, FILE * fp,gfs_cell_write3064,87345
void gfs_cell_read (FttCell * cell, GtsFile * fp, GfsDomain * domain)gfs_cell_read3099,88255
void gfs_cell_write_binary (const FttCell * cell, FILE * fp,gfs_cell_write_binary3176,90302
void gfs_cell_read_binary (FttCell * cell, GtsFile * fp, GfsDomain * domain)gfs_cell_read_binary3212,91336
static void box_realloc (GfsBox * box, GfsDomain * domain)box_realloc3271,93049
guint gfs_domain_alloc (GfsDomain * domain)gfs_domain_alloc3291,93642
void gfs_domain_free (GfsDomain * domain, guint i)gfs_domain_free3314,94302
GfsVariable * gfs_domain_add_variable (GfsDomain * domain,gfs_domain_add_variable3334,94877
GfsVariable * gfs_domain_get_or_add_variable (GfsDomain * domain,gfs_domain_get_or_add_variable3361,95731
  gdouble * f, * m;f3384,96288
  gdouble * f, * m;m3384,96288
  GfsVariable * v;v3385,96308
  GfsFunction * weight;weight3386,96327
  GfsSourceDiffusion * d;d3387,96351
} Force;Force3388,96377
static void add_pressure_force (FttCell * cell, Force * f)add_pressure_force3390,96387
static GfsSourceDiffusion * source_diffusion (GfsVariable * v)source_diffusion3408,96839
static void add_viscous_force (FttCell * cell, Force * f)add_viscous_force3424,97161
void gfs_domain_solid_force (GfsDomain * domain, gfs_domain_solid_force3502,99170
#define THRESHOLD THRESHOLD3564,100961
static void tag_cell_fraction (GtsFifo * fifo,tag_cell_fraction3566,100985
  GfsVariable * v, * c;v3599,101870
  GfsVariable * v, * c;c3599,101870
  FttDirection d;d3600,101894
  guint * touch, * tags, tag, tagshift;touch3601,101912
  guint * touch, * tags, tag, tagshift;tags3601,101912
  guint * touch, * tags, tag, tagshift;tag3601,101912
  guint * touch, * tags, tag, tagshift;tagshift3601,101912
} TagPar;TagPar3602,101952
static void tag_new_fraction_region (FttCell * cell, TagPar * p)tag_new_fraction_region3604,101963
static void touching_regions (guint tag1, guint tag2, guint * touch)touching_regions3620,102516
static void reduce_touching_regions (void * in, void * inout, int * len, MPI_Datatype * type)reduce_touching_regions3642,102926
static void shift_tags (FttCell * cell, TagPar * p)shift_tags3653,103205
static void unify_tag_range (GfsDomain * domain, TagPar * p)unify_tag_range3660,103362
static void match_periodic_bc (FttCell * cell, TagPar * p)match_periodic_bc3687,104175
static void match_box_bc (GfsBox * box, TagPar * p)match_box_bc3698,104464
static void fix_touching (FttCell * cell, TagPar * p)fix_touching3706,104765
guint gfs_domain_tag_droplets (GfsDomain * domain,gfs_domain_tag_droplets3725,105319
  GfsVariable * tag, * c;tag3796,107442
  GfsVariable * tag, * c;c3796,107442
  guint * sizes;sizes3797,107468
  guint n, min;n3798,107485
  guint n, min;min3798,107485
  gdouble val;val3799,107501
} RemoveDropletsPar;RemoveDropletsPar3800,107516
static void compute_droplet_size (FttCell * cell, RemoveDropletsPar * p)compute_droplet_size3802,107538
static void reset_small_fraction (FttCell * cell, RemoveDropletsPar * p)reset_small_fraction3809,107690
static int greater (const void * a, const void * b)greater3816,107884
void gfs_domain_remove_droplets (GfsDomain * domain,gfs_domain_remove_droplets3833,108402
static void tag_cell (GtsFifo * fifo, FttCell * cell, GfsVariable * v, guint tag, guint * size)tag_cell3879,109747
static void tag_new_region (FttCell * cell, gpointer * data)tag_new_region3912,110703
static gboolean remove_small (FttCell * cell, gpointer * data)remove_small3930,111164
static void remove_small_box (GfsBox * box, gpointer * data)remove_small_box3969,112308
void gfs_domain_remove_ponds (GfsDomain * domain, gfs_domain_remove_ponds3991,112920
static gboolean tag_speck (FttCell * cell, GfsVariable * v)tag_speck4037,114218
static void fill_speck (FttCell * cell, gpointer * data)fill_speck4080,115330
void gfs_domain_remove_specks (GfsDomain * domain)gfs_domain_remove_specks4101,115840
void gfs_domain_timer_start (GfsDomain * domain, const gchar * name)gfs_domain_timer_start4134,116849
void gfs_domain_timer_stop (GfsDomain * domain, const gchar * name)gfs_domain_timer_stop4161,117546
static void cell_combine_traverse (FttCell * cell,cell_combine_traverse4180,118044
static void box_combine_traverse (GfsBox * box, gpointer * data)box_combine_traverse4211,118830
void gfs_domain_combine_traverse (GfsDomain * domain1,gfs_domain_combine_traverse4243,119882
GfsDerivedVariable * gfs_domain_add_derived_variable (GfsDomain * domain, gfs_domain_add_derived_variable4276,120743
gboolean gfs_domain_remove_derived_variable (GfsDomain * domain, const gchar * name)gfs_domain_remove_derived_variable4306,121787
  FttDirection d;d4329,122342
  GfsFunction * f;f4330,122360
  GfsVariable * v;v4331,122379
} SumData;SumData4332,122398
static gdouble product (FttCell * cell, GfsFunction * f)product4334,122410
static void sum (FttCell * cell, SumData * data)sum4340,122610
void gfs_domain_sum (GfsDomain * domain, FttDirection d, GfsFunction * f, GfsVariable * v)gfs_domain_sum4370,123520
static void filter (FttCell * cell, gpointer * data)filter4388,124022
void gfs_domain_filter (GfsDomain * domain, GfsVariable * v, GfsVariable * fv)gfs_domain_filter4421,125059
struct _GfsRequest {_GfsRequest4440,125649
  void * buf;buf4441,125670
  MPI_Request request[2];request4443,125700
GfsRequest * gfs_send_objects (GSList * list, int dest)gfs_send_objects4461,126179
void gfs_wait (GfsRequest * r)gfs_wait4497,127137
GSList * gfs_receive_objects (GfsDomain * domain, int src)gfs_receive_objects4521,127615
static void unlink_box (GfsBox * box, gint * dest)unlink_box4558,128846
static void setup_binary_IO (GfsDomain * domain)setup_binary_IO4589,130239
GfsRequest * gfs_send_boxes (GfsDomain * domain, GSList * boxes, int dest)gfs_send_boxes4614,130930
GSList * gfs_receive_boxes (GfsDomain * domain, int src)gfs_receive_boxes4637,131598
GtsObject * gfs_object_from_name (GfsDomain * domain, const gchar * name)gfs_object_from_name4666,132423
static void gfs_domain_projection_destroy (GtsObject * o)gfs_domain_projection_destroy4681,132784
static void gfs_domain_projection_class_init (GfsEventClass * klass)gfs_domain_projection_class_init4689,133059
GfsDomainClass * gfs_domain_projection_class (void)gfs_domain_projection_class4694,133202
  GfsDomainProjection * proj;proj4715,133730
  FttCell * cell;cell4716,133760
  GfsVariable * maxlevel;maxlevel4717,133778
} ProjData;ProjData4718,133804
static gboolean overlap (FttCell * cell1, gpointer data)overlap4720,133817
static void update_maxlevel (FttCell * cell, int * maxlevel)update_maxlevel4740,134345
static void project_refine (FttCell * cell, ProjData * p)project_refine4747,134496
static gboolean finer (FttCell * cell, ProjData * p)finer4767,135244
static void project_coarsen_box (GfsBox * box, ProjData * p)project_coarsen_box4774,135442
void gfs_domain_projection_reshape (GfsDomainProjection * proj)gfs_domain_projection_reshape4787,135752
GfsDomainProjection * gfs_domain_projection_new (GfsDomain * domain,gfs_domain_projection_new4808,136485
  GfsDomainProjection * proj;proj4847,137786
  FttCell * cell;cell4848,137816
  GfsProjectionTraverseFunc func;func4849,137834
  gpointer data;data4850,137868
} ProjectionTraverse;ProjectionTraverse4851,137885
static void apply_func (FttCell * cell, ProjectionTraverse * p)apply_func4853,137908
static void traverse_overlapping (FttCell * cell, ProjectionTraverse * p)traverse_overlapping4858,138017
void gfs_domain_projection_traverse (GfsDomainProjection * domain,gfs_domain_projection_traverse4882,138915

metric.h,2715
#define __METRIC_H____METRIC_H__21,854
#define GFS_IS_GENERIC_METRIC(GFS_IS_GENERIC_METRIC31,984
#define GFS_IS_VARIABLE_METRIC(GFS_IS_VARIABLE_METRIC38,1184
typedef struct _GfsStoredMetric GfsStoredMetric;GfsStoredMetric45,1388
struct _GfsStoredMetric {_GfsStoredMetric47,1438
  GfsVariable parent;parent49,1482
  GfsMap * map;map50,1504
  GfsVariable * h[4], * e;h53,1538
  GfsVariable * h[4], * e;e53,1538
  GfsMapClass * map_class;map_class54,1565
#define GFS_STORED_METRIC(GFS_STORED_METRIC57,1596
#define GFS_IS_STORED_METRIC(GFS_IS_STORED_METRIC60,1739
typedef struct _GfsMetric GfsMetric;GfsMetric67,1931
struct _GfsMetric {_GfsMetric69,1969
  GfsStoredMetric parent;parent71,2007
  GfsFunction * x, * y, * z;x74,2051
  GfsFunction * x, * y, * z;y74,2051
  GfsFunction * x, * y, * z;z74,2051
#define GFS_METRIC(GFS_METRIC77,2084
#define GFS_IS_METRIC(GFS_IS_METRIC80,2207
typedef struct _GfsMetricCubed GfsMetricCubed;GfsMetricCubed87,2383
struct _GfsMetricCubed {_GfsMetricCubed89,2431
  GfsStoredMetric parent;parent91,2474
  gint level;level94,2518
#define GFS_METRIC_CUBED(GFS_METRIC_CUBED97,2536
#define GFS_IS_METRIC_CUBED(GFS_IS_METRIC_CUBED100,2676
typedef struct _GfsMetricLonLat GfsMetricLonLat;GfsMetricLonLat107,2871
struct _GfsMetricLonLat {_GfsMetricLonLat109,2921
  GfsVariable parent;parent111,2965
  GfsVariable * h2, * h3;h2114,3005
  GfsVariable * h2, * h3;h3114,3005
  gdouble r;r115,3031
#define GFS_METRIC_LON_LAT(GFS_METRIC_LON_LAT118,3048
#define GFS_IS_METRIC_LON_LAT(GFS_IS_METRIC_LON_LAT121,3193
typedef struct _GfsMetricStretch GfsMetricStretch;GfsMetricStretch128,3395
struct _GfsMetricStretch {_GfsMetricStretch130,3447
  GfsEvent parent;parent132,3492
  gdouble sx, sy, sz;sx135,3529
  gdouble sx, sy, sz;sy135,3529
  gdouble sx, sy, sz;sz135,3529
#define GFS_METRIC_STRETCH(GFS_METRIC_STRETCH138,3555
#define GFS_IS_METRIC_STRETCH(GFS_IS_METRIC_STRETCH141,3701
typedef struct _GfsMetricVariable GfsMetricVariable;GfsMetricVariable152,3985
struct _GfsMetricVariable {_GfsMetricVariable154,4039
  GfsStoredMetric parent;parent156,4085
  GfsVariable * x[3];x159,4129
#define GFS_METRIC_VARIABLE(GFS_METRIC_VARIABLE162,4155
#define GFS_IS_METRIC_VARIABLE(GFS_IS_METRIC_VARIABLE165,4304
typedef struct _GfsMetricLaplace GfsMetricLaplace;GfsMetricLaplace172,4509
struct _GfsMetricLaplace {_GfsMetricLaplace174,4561
  GfsMetricVariable parent;parent176,4606
  gboolean conformal, spherical;conformal179,4652
  gboolean conformal, spherical;spherical179,4652
#define GFS_METRIC_LAPLACE(GFS_METRIC_LAPLACE182,4689
#define GFS_IS_METRIC_LAPLACE(GFS_IS_METRIC_LAPLACE185,4835

levelset.c,1151
static void variable_distance_read (GtsObject ** o, GtsFile * fp)variable_distance_read32,1028
static void variable_distance_write (GtsObject * o, FILE * fp)variable_distance_write67,2060
static gdouble vof_distance2 (FttCell * cell, GtsPoint * t, gpointer v)vof_distance276,2352
static void distance_for_stencil (FttCell * cell, gpointer * data)distance_for_stencil88,2667
static void distance (FttCell * cell, GfsVariable * v)distance106,3183
static void stencil_interpolate (FttCell * cell, gpointer * data)stencil_interpolate117,3536
static void stencil_gradient (FttCell * cell, gpointer * data)stencil_gradient126,3754
static void variable_distance_event_half (GfsEvent * event, GfsSimulation * sim)variable_distance_event_half137,4021
static gboolean variable_distance_event (GfsEvent * event, GfsSimulation * sim)variable_distance_event180,5939
static void variable_distance_class_init (GtsObjectClass * klass)variable_distance_class_init193,6347
static void variable_distance_init (GfsVariable * v)variable_distance_init201,6630
GfsVariableClass * gfs_variable_distance_class (void)gfs_variable_distance_class206,6705

moving.h,1160
#define __MOVING_H____MOVING_H__21,854
typedef struct _GfsNumberedVertex        GfsNumberedVertex;GfsNumberedVertex35,1068
#define GFS_IS_NUMBERED_VERTEX(GFS_IS_NUMBERED_VERTEX37,1129
#define GFS_NUMBERED_VERTEX(GFS_NUMBERED_VERTEX39,1240
struct _GfsNumberedVertex {_GfsNumberedVertex43,1381
  GtsVertex parent;parent44,1409
  glong num;num45,1429
typedef struct _GfsSolidMoving         GfsSolidMoving;GfsSolidMoving52,1537
struct _GfsSolidMoving {_GfsSolidMoving54,1593
  GfsSolid parent;parent56,1636
  GfsFunction * level;level59,1673
  gboolean active;active60,1696
  glong nvertex;nvertex61,1715
#define GFS_SOLID_MOVING(GFS_SOLID_MOVING66,1784
#define GFS_IS_SOLID_MOVING(GFS_IS_SOLID_MOVING69,1920
typedef struct _GfsSimulationMoving         GfsSimulationMoving;GfsSimulationMoving74,2065
struct _GfsSimulationMoving {_GfsSimulationMoving76,2131
  GfsSimulation parent;parent78,2179
  GfsVariable * old_solid, ** sold2;old_solid81,2221
  GfsVariable * old_solid, ** sold2;sold281,2221
#define GFS_SIMULATION_MOVING(GFS_SIMULATION_MOVING84,2262
#define GFS_IS_SIMULATION_MOVING(GFS_IS_SIMULATION_MOVING87,2413

domain.h,5276
#define __DOMAIN_H____DOMAIN_H__21,854
  GSList ** root;root33,1025
  gdouble h, min[FTT_DIMENSION], max[FTT_DIMENSION];h34,1043
  gdouble h, min[FTT_DIMENSION], max[FTT_DIMENSION];min34,1043
  gdouble h, min[FTT_DIMENSION], max[FTT_DIMENSION];max34,1043
  gint n[FTT_DIMENSION], size;n35,1096
  gint n[FTT_DIMENSION], size;size35,1096
} GfsLocateArray;GfsLocateArray36,1127
typedef struct _GfsDomainClass     GfsDomainClass;GfsDomainClass45,1388
typedef struct _GfsDiffusion       GfsDiffusion;GfsDiffusion46,1439
typedef struct _GfsSourceDiffusion GfsSourceDiffusion;GfsSourceDiffusion47,1488
typedef struct _GfsTimer           GfsTimer;GfsTimer48,1543
struct _GfsTimer {_GfsTimer50,1589
  GtsRange r;r51,1608
  gdouble start;start52,1622
struct _GfsDomain {_GfsDomain55,1643
  GtsWGraph parent;parent56,1663
  int pid;pid58,1684
  GfsClock * timer;timer59,1695
  GHashTable * timers;timers60,1715
  GtsRange timestep;timestep62,1739
  GtsRange size;size63,1760
  gboolean profile_bc;profile_bc65,1778
  GtsRange mpi_messages;mpi_messages67,1802
  GtsRange mpi_wait;mpi_wait68,1827
  guint rootlevel;rootlevel70,1849
  FttVector refpos;refpos71,1868
  FttVector lambda;lambda72,1888
  GArray * allocated;allocated74,1909
  GSList * variables;variables75,1931
  GSList * derived_variables;derived_variables76,1953
  GfsVariable * velocity[FTT_DIMENSION];velocity78,1984
  GSList * variables_io;variables_io80,2026
  gboolean binary;binary81,2051
  gint max_depth_write;max_depth_write82,2070
  FttCellInitFunc cell_init;cell_init84,2095
  gpointer cell_init_data;cell_init_data85,2124
  gint version;version87,2152
  gpointer array;array89,2169
  gboolean overlap; /* whether to overlap MPI communications with computation */overlap91,2188
  gpointer metric_data;metric_data94,2297
  gdouble (* face_metric)       (const GfsDomain *, const FttCellFace *);face_metric95,2321
  gdouble (* cell_metric)       (const GfsDomain *, const FttCell *);cell_metric96,2395
  void    (* solid_metric)      (const GfsDomain *, const FttCell *, FttVector *);solid_metric97,2465
  gdouble (* scale_metric)      (const GfsDomain *, const FttCell *, FttComponent);scale_metric98,2548
  gdouble (* face_scale_metric) (const GfsDomain *, const FttCellFace *, FttComponent);face_scale_metric99,2632
  gdouble (* viscous_metric_implicit)    (const GfsDomain * domain, viscous_metric_implicit100,2720
  gdouble (* viscous_metric_explicit)    (const GfsDomain * domain, viscous_metric_explicit103,2844
  void    (* advection_metric)           (const GfsDomain * domain, advection_metric107,2986
  GHashTable * objects;objects113,3177
  int np;np116,3245
  GTimer * clock;clock119,3274
  GPtrArray * sorted; /**< array of sorted boxes */sorted121,3293
  gboolean dirty;     /**< whether the sorted array needs updating */dirty122,3345
  GSList * projections; /**< list of GfsDomainProjection associated with this domain */projections124,3416
  gboolean has_rotated_bc; /**< whether the domain uses "rotated" edges */has_rotated_bc126,3505
  void (* traverse_layers) (GfsDomain *, FttCellTraverseFunc, gpointer);traverse_layers128,3581
struct _GfsDomainClass {_GfsDomainClass131,3658
  GtsWGraphClass parent_class;parent_class132,3683
  void    (* post_read) (GfsDomain *, GtsFile * fp);post_read134,3715
#define GFS_DOMAIN(GFS_DOMAIN137,3772
#define GFS_DOMAIN_CLASS(GFS_DOMAIN_CLASS140,3895
#define GFS_IS_DOMAIN(GFS_IS_DOMAIN143,4016
#define gfs_domain_variables_number(gfs_domain_variables_number146,4116
#define gfs_domain_variables_size(gfs_domain_variables_size147,4181
#define gfs_domain_traverse_leaves(gfs_domain_traverse_leaves157,4595
void      (* FttCellCombineTraverseFunc)      (FttCell * cell1, FttCellCombineTraverseFunc368,13240
  gchar * name, * description;name379,13627
  gchar * name, * description;description379,13627
  gpointer func, data;func380,13658
  gpointer func, data;data380,13658
} GfsDerivedVariableInfo;GfsDerivedVariableInfo381,13681
typedef struct _GfsRequest GfsRequest;GfsRequest394,14189
gdouble gfs_domain_face_fraction (const GfsDomain * domain, const FttCellFace * face)gfs_domain_face_fraction415,14868
gdouble gfs_domain_face_fraction_right (const GfsDomain * domain, const FttCellFace * face)gfs_domain_face_fraction_right432,15313
gdouble gfs_domain_cell_fraction (const GfsDomain * domain, const FttCell * cell)gfs_domain_cell_fraction453,15856
void gfs_domain_solid_metric (const GfsDomain * domain, const FttCell * cell, FttVector * m)gfs_domain_solid_metric471,16355
gdouble gfs_domain_face_scale_metric (const GfsDomain * domain, gfs_domain_face_scale_metric487,16756
gdouble gfs_cell_volume (const FttCell * cell, const GfsDomain * domain)gfs_cell_volume504,17121
typedef struct _GfsDomainProjection GfsDomainProjection;GfsDomainProjection515,17494
struct _GfsDomainProjection {_GfsDomainProjection517,17552
  GfsDomain parent;parent519,17600
  GfsDomain * domain;domain522,17640
  FttComponent c;c523,17662
#define GFS_DOMAIN_PROJECTION(GFS_DOMAIN_PROJECTION526,17684
typedef void       (* GfsProjectionTraverseFunc)     (FttCell * cell, GfsProjectionTraverseFunc534,18087

levelset.h,476
#define __LEVELSET_H____LEVELSET_H__21,861
typedef struct _GfsVariableDistance                GfsVariableDistance;GfsVariableDistance31,1001
struct _GfsVariableDistance {_GfsVariableDistance33,1074
  GfsVariable parent;parent35,1122
  gboolean first_done;first_done36,1144
  GfsVariable * v;v39,1185
  gboolean stencil;stencil40,1204
#define GFS_VARIABLE_DISTANCE(GFS_VARIABLE_DISTANCE43,1228
#define GFS_IS_VARIABLE_DISTANCE(GFS_IS_VARIABLE_DISTANCE46,1383

refine.c,3804
static gboolean refine_maxlevel (FttCell * cell, GfsFunction * maxlevel)refine_maxlevel34,1064
static void refine_box (GfsBox * box, GfsFunction * maxlevel)refine_box39,1214
static void gfs_refine_refine (GfsRefine * refine, GfsSimulation * sim)gfs_refine_refine46,1430
static void gfs_refine_destroy (GtsObject * o)gfs_refine_destroy54,1691
static void gfs_refine_write (GtsObject * object, FILE * fp)gfs_refine_write60,1878
static void gfs_refine_read (GtsObject ** o, GtsFile * fp)gfs_refine_read66,2050
static void gfs_refine_class_init (GfsRefineClass * klass)gfs_refine_class_init101,3039
static void gfs_refine_init (GfsRefine * object)gfs_refine_init110,3306
GfsRefineClass * gfs_refine_class (void)gfs_refine_class115,3427
GfsRefine * gfs_refine_new (GfsRefineClass * klass)gfs_refine_new137,3952
typedef struct _GfsRefineSolid           GfsRefineSolid;GfsRefineSolid153,4223
struct _GfsRefineSolid {_GfsRefineSolid155,4281
  GfsRefine parent;parent156,4306
  GfsDerivedVariable * v;v158,4327
#define GFS_REFINE_SOLID(GFS_REFINE_SOLID161,4359
static void refine_solid_destroy (GtsObject * object)refine_solid_destroy165,4500
  GtsSurface * s;s174,4774
  gdouble kappa;kappa175,4792
} KappaData;KappaData176,4809
static void max_kappa (GtsVertex * v, KappaData * d)max_kappa178,4823
static gdouble solid_curvature (FttCell * cell, FttCellFace * face, solid_curvature189,5070
static void refine_solid_read (GtsObject ** o, GtsFile * fp)refine_solid_read199,5385
  GfsRefine * refine;refine214,5919
  GfsDomain * domain;domain215,5941
  GfsGenericSurface * surface;surface216,5963
} RefineCut;RefineCut217,5994
static void refine_cut_cell (FttCell * cell, GfsGenericSurface * s, RefineCut * p)refine_cut_cell219,6008
static void refine_implicit_cell (FttCell * cell, RefineCut * p)refine_implicit_cell228,6392
static void gfs_refine_solid_refine (GfsRefine * refine, GfsSimulation * sim)gfs_refine_solid_refine235,6708
static void gfs_refine_solid_class_init (GfsRefineClass * klass)gfs_refine_solid_class_init259,7451
GfsRefineClass * gfs_refine_solid_class (void)gfs_refine_solid_class266,7678
static void refine_surface_destroy (GtsObject * object)refine_surface_destroy294,8321
static void refine_surface_write (GtsObject * o, FILE * fp)refine_surface_write303,8572
static void refine_surface_read (GtsObject ** o, GtsFile * fp)refine_surface_read309,8814
static void gfs_refine_surface_refine (GfsRefine * refine, GfsSimulation * sim)gfs_refine_surface_refine318,9101
static void gfs_refine_surface_class_init (GfsRefineClass * klass)gfs_refine_surface_class_init345,10006
static void refine_surface_init (GfsRefineSurface * r)refine_surface_init354,10300
GfsRefineClass * gfs_refine_surface_class (void)gfs_refine_surface_class359,10455
static void refine_distance_destroy (GtsObject * object)refine_distance_destroy387,11156
static gdouble cell_distance (FttCell * cell, cell_distance398,11517
static void refine_distance_read (GtsObject ** o, GtsFile * fp)refine_distance_read414,11962
static void gfs_refine_distance_class_init (GfsRefineClass * klass)gfs_refine_distance_class_init438,12678
GfsRefineClass * gfs_refine_distance_class (void)gfs_refine_distance_class446,12909
static void refine_height_destroy (GtsObject * object)refine_height_destroy474,13549
static gdouble interpolated_value (GtsSurface * s, FttVector * p)interpolated_value481,13789
static gdouble cell_height (FttCell * cell, cell_height496,14123
static void refine_height_read (GtsObject ** o, GtsFile * fp)refine_height_read506,14379
static void gfs_refine_height_class_init (GfsRefineClass * klass)gfs_refine_height_class_init527,15008
GfsRefineClass * gfs_refine_height_class (void)gfs_refine_height_class535,15233

particle.c,414
static gboolean gfs_particle_event (GfsEvent * event, gfs_particle_event31,984
static void gfs_particle_read (GtsObject ** o, GtsFile * fp)gfs_particle_read47,1472
static void gfs_particle_write (GtsObject * o, FILE * fp)gfs_particle_write80,2305
static void gfs_particle_class_init (GfsEventClass * klass)gfs_particle_class_init86,2474
GfsEventClass * gfs_particle_class (void)gfs_particle_class93,2706

refine.h,1512
#define __REFINE_H____REFINE_H__21,854
# define GFS_DIAGONAL GFS_DIAGONAL30,970
# define GFS_DIAGONAL GFS_DIAGONAL32,1022
typedef struct _GfsRefine             GfsRefine;GfsRefine37,1101
typedef struct _GfsRefineClass        GfsRefineClass;GfsRefineClass38,1150
struct _GfsRefine {_GfsRefine40,1205
  GtsSListContainee parent;parent41,1225
  GfsFunction * maxlevel;maxlevel43,1254
struct _GfsRefineClass {_GfsRefineClass46,1284
  GtsSListContaineeClass parent_class;parent_class47,1309
  void (* refine) (GfsRefine * refine, GfsSimulation * simulation);refine49,1349
#define GFS_REFINE(GFS_REFINE52,1421
#define GFS_REFINE_CLASS(GFS_REFINE_CLASS55,1544
#define GFS_IS_REFINE(GFS_IS_REFINE58,1665
#define GFS_IS_REFINE_SOLID(GFS_IS_REFINE_SOLID66,1905
typedef struct _GfsRefineSurface         GfsRefineSurface;GfsRefineSurface73,2104
struct _GfsRefineSurface {_GfsRefineSurface75,2164
  GfsRefine parent;parent76,2191
  GfsGenericSurface * surface;surface78,2212
#define GFS_REFINE_SURFACE(GFS_REFINE_SURFACE81,2247
#define GFS_IS_REFINE_SURFACE(GFS_IS_REFINE_SURFACE84,2393
typedef struct _GfsRefineDistance         GfsRefineDistance;GfsRefineDistance91,2599
struct _GfsRefineDistance {_GfsRefineDistance93,2661
  GfsRefineSurface parent;parent94,2689
  GNode * stree;stree96,2717
#define GFS_REFINE_DISTANCE(GFS_REFINE_DISTANCE99,2738
#define GFS_IS_REFINE_DISTANCE(GFS_IS_REFINE_DISTANCE102,2885
#define GFS_IS_REFINE_HEIGHT(GFS_IS_REFINE_HEIGHT109,3091

poisson.c,6395
void gfs_multilevel_params_write (GfsMultilevelParams * par, FILE * fp)gfs_multilevel_params_write40,1239
void gfs_multilevel_params_init (GfsMultilevelParams * par)gfs_multilevel_params_init70,1923
void gfs_multilevel_params_read (GfsMultilevelParams * par, GtsFile * fp)gfs_multilevel_params_read91,2326
static gdouble rate (gdouble a, gdouble b, guint n)rate128,3612
void gfs_multilevel_params_stats_write (GfsMultilevelParams * par,gfs_multilevel_params_stats_write142,3903
GfsLinearProblem * gfs_linear_problem_new (GfsDomain * domain)gfs_linear_problem_new182,4910
void gfs_linear_problem_add_stencil (GfsLinearProblem * lp, gfs_linear_problem_add_stencil206,5560
void gfs_linear_problem_destroy (GfsLinearProblem * lp)gfs_linear_problem_destroy221,5871
  GfsLinearProblem * lp;lp241,6349
  GfsVariable * dia;dia242,6374
  gint maxlevel;maxlevel243,6395
  GfsVariable * metric, * rhs;metric244,6412
  GfsVariable * metric, * rhs;rhs244,6412
} RelaxStencilParams;RelaxStencilParams245,6443
static void relax_stencil (FttCell * cell, RelaxStencilParams * p)relax_stencil247,6466
static void relax_dirichlet_stencil (FttCell * cell, RelaxStencilParams * p)relax_dirichlet_stencil278,7293
  GfsLinearProblem * lp;lp313,8420
  GfsVariable * lhs, * rhs;lhs314,8445
  GfsVariable * lhs, * rhs;rhs314,8445
  guint nleafs;nleafs315,8473
  gint maxlevel;maxlevel316,8489
  FttFaceTraverseFunc bc_number;bc_number317,8506
} NumberingParams;NumberingParams318,8539
static void leaves_numbering (FttCell * cell, NumberingParams * p)leaves_numbering320,8559
static void bc_number (FttCellFace * f, NumberingParams * p)bc_number328,8867
static void reset_bc (FttCellFace * f, GfsLinearProblem * lp)reset_bc337,9204
static void box_reset_bc (GfsBox * box, GfsLinearProblem * lp)box_reset_bc343,9375
static void set_mpi_domain_index (GfsDomain * domain, GfsLinearProblem * lp)set_mpi_domain_index358,9814
static void leaves_renumbering (FttCell * cell, NumberingParams * p)leaves_renumbering375,10265
  GfsVariable * lhs;lhs383,10425
  gboolean dirichlet;dirichlet384,10446
} CompatPar;CompatPar385,10468
static void check_box_dirichlet (GfsBox * box, CompatPar * p)check_box_dirichlet387,10482
static void cell_numbering (GfsDomain * domain,cell_numbering401,10847
GfsLinearProblem * gfs_get_poisson_problem (GfsDomain * domain,gfs_get_poisson_problem439,12147
  guint u, rhs, dia, res;u498,14299
  guint u, rhs, dia, res;rhs498,14299
  guint u, rhs, dia, res;dia498,14299
  guint u, rhs, dia, res;res498,14299
  gint maxlevel;maxlevel499,14325
  gdouble beta, omega;beta500,14342
  gdouble beta, omega;omega500,14342
  guint metric;metric501,14365
} RelaxParams;RelaxParams502,14381
static void relax (FttCell * cell, RelaxParams * p)relax507,14478
static void relax2D (FttCell * cell, RelaxParams * p)relax2D532,15061
static void relax_dirichlet (FttCell * cell, RelaxParams * p)relax_dirichlet561,15807
void gfs_relax (GfsDomain * domain,gfs_relax604,17186
static void residual_set (FttCell * cell, RelaxParams * p)residual_set634,17863
static void residual_set2D (FttCell * cell, RelaxParams * p)residual_set2D657,18426
static void residual_set_dirichlet (FttCell * cell, RelaxParams * p)residual_set_dirichlet680,18997
void gfs_residual (GfsDomain * domain,gfs_residual721,20289
  gdouble lambda2[FTT_DIMENSION];lambda2750,21032
  GfsFunction * alpha;alpha751,21066
  GfsDomain * domain;domain752,21089
  gboolean positive;positive753,21111
} PoissonCoeff;PoissonCoeff754,21132
static void reset_coeff (FttCell * cell, PoissonCoeff * p)reset_coeff756,21149
static void poisson_coeff (FttCellFace * face,poisson_coeff768,21433
static void poisson_mixed_coeff (FttCell * cell, PoissonCoeff * p)poisson_mixed_coeff798,22362
static void face_coeff_from_below (FttCell * cell)face_coeff_from_below826,23249
void gfs_poisson_coefficients (GfsDomain * domain,gfs_poisson_coefficients868,24447
static void tension_coeff (FttCellFace * face, gpointer * data)tension_coeff903,25473
void gfs_source_tension_coefficients (GfsSourceTension * s,gfs_source_tension_coefficients971,27448
static void correct (FttCell * cell, gpointer * data)correct998,28168
static void get_from_above (FttCell * parent, GfsVariable * v)get_from_above1005,28333
static void get_from_below_3D (FttCell * cell, const GfsVariable * v)get_from_below_3D1044,29313
static void get_from_below_2D (FttCell * cell, const GfsVariable * v)get_from_below_2D1057,29607
static void relax_loop (GfsDomain * domain, relax_loop1070,29898
void gfs_poisson_cycle (GfsDomain * domain,gfs_poisson_cycle1109,31216
gdouble gfs_poisson_compatibility (GfsDomain * domain,gfs_poisson_compatibility1191,33815
void gfs_poisson_solve (GfsDomain * domain, gfs_poisson_solve1225,35105
  GfsSourceDiffusion * d;d1272,36588
  gdouble lambda2[FTT_DIMENSION];lambda21273,36614
  gdouble dt;dt1274,36648
  GfsVariable * rhoc, * metric;rhoc1275,36662
  GfsVariable * rhoc, * metric;metric1275,36662
  GfsFunction * alpha;alpha1276,36694
  GfsDomain * domain;domain1277,36717
} DiffusionCoeff;DiffusionCoeff1278,36739
static void diffusion_coef (FttCellFace * face, DiffusionCoeff * c)diffusion_coef1280,36758
static void diffusion_mixed_coeff (FttCell * cell, DiffusionCoeff * c)diffusion_mixed_coeff1303,37413
static void viscous_metric_coeff (FttCell * cell, DiffusionCoeff * c)viscous_metric_coeff1335,38500
void gfs_diffusion_coefficients (GfsDomain * domain,gfs_diffusion_coefficients1357,39233
static void diffusion_rhs (FttCell * cell, RelaxParams * p)diffusion_rhs1401,40544
void gfs_diffusion_rhs (GfsDomain * domain, gfs_diffusion_rhs1447,41912
static void diffusion_relax (FttCell * cell, RelaxParams * p)diffusion_relax1471,42604
static void diffusion_relax_stencil (FttCell * cell, RelaxStencilParams * p)diffusion_relax_stencil1500,43453
static void diffusion_residual (FttCell * cell, RelaxParams * p)diffusion_residual1534,44587
void gfs_diffusion_residual (GfsDomain * domain,gfs_diffusion_residual1587,46036
void gfs_diffusion_cycle (GfsDomain * domain,gfs_diffusion_cycle1633,47496
static void scale_rhs (FttCell * cell, RelaxStencilParams * p)scale_rhs1692,49324
GfsLinearProblem * gfs_get_diffusion_problem (GfsDomain * domain,gfs_get_diffusion_problem1712,49968

map.c,2711
static void gfs_map_read (GtsObject ** o, GtsFile * fp)gfs_map_read30,974
static void gfs_map_write (GtsObject * o, FILE * fp)gfs_map_write58,1729
static void gfs_map_class_init (GfsMapClass * klass)gfs_map_class_init63,1832
static void not_implemented (GfsMap * map, const FttVector * src, FttVector * dest)not_implemented69,1990
static double evaluate (GfsMap * map, const FttVector * x, const FttVector * rhs, FttVector * f)evaluate74,2110
#define DELTA DELTA86,2391
#define NMAX NMAX87,2410
static void jacobian (GfsMap * map, const FttVector * x, const FttVector * rhs, FttVector * f,jacobian89,2428
static void map_transform (GfsMap * map, const FttVector * src, FttVector * dest)map_transform102,2785
static void normalized_jacobian (GfsMap * map, const FttVector * p, GtsMatrix * J)normalized_jacobian128,3530
static void map_inverse_vector (GfsMap * map, const FttVector * p,map_inverse_vector145,3922
static void map_transform_vector (GfsMap * map, const FttVector * p,map_transform_vector159,4299
static void inverse_cell (GfsMap * map, const FttVector * src, FttVector * dest)inverse_cell179,4832
static void gfs_map_init (GfsMap * map)gfs_map_init186,5005
GfsMapClass * gfs_map_class (void)gfs_map_class195,5246
static void gfs_map_function_read (GtsObject ** o, GtsFile * fp)gfs_map_function_read223,5804
static void gfs_map_function_write (GtsObject * o, FILE * fp)gfs_map_function_write258,6667
static void gfs_map_function_destroy (GtsObject * o)gfs_map_function_destroy274,7109
static void gfs_map_function_class_init (GfsMapClass * klass)gfs_map_function_class_init285,7408
static void map_function_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_function_inverse292,7657
static void gfs_map_function_init (GfsMapFunction * m)gfs_map_function_init307,8118
GfsMapClass * gfs_map_function_class (void)gfs_map_function_class315,8402
static void gfs_map_transform_destroy (GtsObject * o)gfs_map_transform_destroy342,9051
static void gfs_map_transform_read (GtsObject ** o, GtsFile * fp)gfs_map_transform_read350,9290
static void gfs_map_transform_write (GtsObject * o, FILE * fp)gfs_map_transform_write411,11436
static void gfs_map_transform_class_init (GtsObjectClass * klass)gfs_map_transform_class_init425,11978
static void map_transform_transform (GfsMap * map, const FttVector * src, FttVector * dest)map_transform_transform432,12177
static void map_transform_inverse (GfsMap * map, const FttVector * src, FttVector * dest)map_transform_inverse440,12436
static void gfs_map_transform_init (GfsMap * map)gfs_map_transform_init448,12692
GfsMapClass * gfs_map_transform_class (void)gfs_map_transform_class456,12953

particle.h,326
#define __PARTICLE_H____PARTICLE_H__21,854
typedef struct _GfsParticle GfsParticle;GfsParticle31,980
struct _GfsParticle {_GfsParticle33,1022
  GfsEvent parent;parent34,1044
  FttVector pos;pos35,1063
  guint id;id36,1080
#define GFS_PARTICLE(GFS_PARTICLE39,1096
#define GFS_IS_PARTICLE(GFS_IS_PARTICLE42,1221

wave.c,2877
static double frequency (int ik)frequency34,1047
static double theta (guint ith, guint ntheta)theta41,1179
static void group_velocity (int ik, int ith, FttVector * u, guint ntheta, gdouble g)group_velocity46,1259
static gdouble cell_E (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_E54,1482
static void set_group_velocity (const FttCellFace * face, FttVector * u)set_group_velocity71,2008
  GfsAdvectionParams * p;p78,2209
  GfsVariable * div, * fv;div79,2235
  GfsVariable * div, * fv;fv79,2235
} SolidFluxParams;SolidFluxParams80,2262
static void solid_flux (FttCell * cell, SolidFluxParams * par)solid_flux82,2282
  GfsVariable * F, * Fn, * dF;F95,2647
  GfsVariable * F, * Fn, * dF;Fn95,2647
  GfsVariable * F, * Fn, * dF;dF95,2647
  gdouble D[2][2];D96,2678
} GSEData;GSEData97,2697
static void compute_gradient (FttCell * cell, GSEData * p)compute_gradient99,2709
static void diffusion (FttCell * cell, GSEData * p)diffusion104,2862
static void copy_F (FttCell * cell, GSEData * p)copy_F120,3339
static void gse_alleviation_diffusion (GfsDomain * domain, GfsVariable * F,gse_alleviation_diffusion125,3445
static void redo_some_events (GfsEvent * event, GfsSimulation * sim)redo_some_events165,5138
static void wave_run (GfsSimulation * sim)wave_run171,5296
static void wave_destroy (GtsObject * object)wave_destroy268,8930
static void wave_read (GtsObject ** o, GtsFile * fp)wave_read275,9129
static void wave_write (GtsObject * o, FILE * fp)wave_write309,10274
static void gfs_wave_class_init (GfsSimulationClass * klass)gfs_wave_class_init322,10574
static gdouble cell_hs (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_hs330,10811
static gdouble cell_frequency (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_frequency336,10975
static gdouble cell_direction (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_direction341,11111
static void wave_init (GfsWave * wave)wave_init346,11271
GfsSimulationClass * gfs_wave_class (void)gfs_wave_class374,12228
static void gfs_init_wave_read (GtsObject ** o, GtsFile * fp)gfs_init_wave_read401,12835
static void gfs_init_wave_write (GtsObject * o, FILE * fp)gfs_init_wave_write419,13376
static void gfs_init_wave_destroy (GtsObject * object)gfs_init_wave_destroy427,13618
static void init_energy (FttCell * cell, GfsInitWave * event)init_energy435,13887
static void scale_energy (FttCell * cell, GfsInitWave * event)scale_energy443,14224
static gboolean gfs_init_wave_event (GfsEvent * event, GfsSimulation * sim)gfs_init_wave_event457,14671
static void gfs_init_wave_class_init (GfsGenericInitClass * klass)gfs_init_wave_class_init474,15393
static void gfs_init_wave_init (GfsInitWave * object)gfs_init_wave_init482,15694
GfsGenericInitClass * gfs_init_wave_class (void)gfs_init_wave_class488,15874

poisson.h,1326
#define __POISSON_H____POISSON_H__21,860
typedef struct _GfsMultilevelParams GfsMultilevelParams;GfsMultilevelParams31,980
typedef void (* GfsPoissonSolverFunc) (GfsDomain * domain,GfsPoissonSolverFunc32,1037
struct _GfsMultilevelParams {_GfsMultilevelParams39,1278
  gdouble tolerance;tolerance40,1308
  guint nrelax, erelax;nrelax41,1329
  guint nrelax, erelax;erelax41,1329
  guint minlevel;minlevel42,1353
  guint nitermax, nitermin;nitermax43,1371
  guint nitermax, nitermin;nitermin43,1371
  guint dimension;dimension45,1400
  guint niter;niter46,1419
  guint depth;depth47,1434
  gboolean weighted, function;weighted48,1449
  gboolean weighted, function;function48,1449
  gdouble beta, omega;beta49,1480
  gdouble beta, omega;omega49,1480
  GfsNorm residual_before, residual;residual_before50,1503
  GfsNorm residual_before, residual;residual50,1503
  GfsPoissonSolverFunc poisson_solve;poisson_solve51,1540
struct _GfsLinearProblem {_GfsLinearProblem129,4427
  GPtrArray * LP;LP130,4454
  GArray * rhs, * lhs;rhs131,4472
  GArray * rhs, * lhs;lhs131,4472
  GfsVariable * id, * neighbor, * neighborw;id132,4495
  GfsVariable * id, * neighbor, * neighborw;neighbor132,4495
  GfsVariable * id, * neighbor, * neighborw;neighborw132,4495
  gint istart;istart133,4540

river.c,8657
static gdouble generic_limiter (gdouble r, gdouble beta)generic_limiter64,2193
static gdouble minmod_limiter (gdouble r)minmod_limiter71,2352
static gdouble superbee_limiter (gdouble r)superbee_limiter76,2433
static gdouble sweby_limiter (gdouble r)sweby_limiter81,2516
static gdouble center_limited_gradient_full (FttCell * cell,center_limited_gradient_full86,2597
static gdouble center_limited_gradient (FttCell * cell,center_limited_gradient117,3329
static gdouble center_minmod_gradient (FttCell * cell,center_minmod_gradient209,6552
static gdouble center_superbee_gradient (FttCell * cell,center_superbee_gradient216,6722
static gdouble center_sweby_gradient (FttCell * cell,center_sweby_gradient223,6886
#define H H235,7125
#define U U236,7138
#define V V237,7151
#define HL HL238,7164
#define T(T239,7177
#define RHO(RHO240,7225
#define HP(HP241,7277
#define HPT(HPT242,7329
#define ZB ZB243,7381
static void flux (const gdouble * u, gdouble g, gdouble * f)flux245,7403
static gdouble min (gdouble a, gdouble b)min252,7639
static gdouble max (gdouble a, gdouble b)max257,7710
static void riemann_hllc (const GfsRiver * r,riemann_hllc271,8035
#define SQRT3 SQRT3317,9480
#define PARENT_TRACER(PARENT_TRACER319,9512
static double density (GfsRiver * r, int l, const gdouble * u, FttCell * cell)density321,9604
static void hydrostatic_pressure (GfsRiver * r, double * u, FttCell * cell)hydrostatic_pressure332,10044
static void riemann_kinetic (const GfsRiver * r,riemann_kinetic348,10556
  FttComponent u;u398,11806
  gdouble du;du399,11824
  FttComponent v;v400,11838
  gdouble dv;dv401,11856
} Sym;Sym402,11870
#define CFL_CLAMP(CFL_CLAMP404,11878
static double left (const GfsRiver * r, const FttCellFace * f, int i, double a)left406,11964
static double right (const GfsRiver * r, const FttCellFace * f, int i, double a)right411,12131
static void face_fluxes (FttCellFace * face, GfsRiver * r)face_fluxes416,12307
static gdouble limited_gradient (const FttCell * cell, const GfsRiver * r, limited_gradient604,18930
#define limited_gradient_u(limited_gradient_u623,19552
#define limited_gradient_t(limited_gradient_t625,19676
static void vertical_advection (FttCell * cell, const GfsRiver * r)vertical_advection628,19798
static void reset_fluxes (FttCell * cell, const GfsRiver * r)reset_fluxes652,20727
static void solid_boundary_fluxes (FttCell * cell, GfsRiver * r)solid_boundary_fluxes661,20956
static void metric_sources (FttCell * cell, GfsRiver * r)metric_sources687,21917
  double * a; /* sub-diagonal indexed from 1..n-1 */a713,22966
  double * b; /* diagonal (destroyed) */b714,23019
  double * c; /* sup-diagonal indexed from 0..n-2 */c715,23060
  double * v; /* rhs (destroyed) */v716,23113
  int n;n717,23149
} Tridiagonal;Tridiagonal718,23158
static void tridiagonal_init (Tridiagonal * t, int n)tridiagonal_init720,23174
static void tridiagonal_solve (Tridiagonal * t, double * x)tridiagonal_solve729,23407
static void tridiagonal_free (Tridiagonal * t)tridiagonal_free743,23756
static void vertical_diffusion (double * u, vertical_diffusion752,23911
static void bottom_friction (FttCell * cell, GfsRiver * r)bottom_friction786,24994
static void domain_vertical_diffusion (GfsRiver * r, double dt)domain_vertical_diffusion798,25326
static void advance (GfsRiver * r, gdouble dt)advance847,26877
static void copy (FttCell * cell, const GfsRiver * r)copy896,28776
static void cell_H (FttCell * cell, const GfsRiver * r)cell_H903,28938
static void cell_gradients (FttCell * cell,cell_gradients916,29301
  FttCellTraverseFunc func;func942,30019
  FttDirection d;d943,30047
  gpointer data;data944,30065
} FaceTraverseData;FaceTraverseData945,30082
static void face_traverse (FttCell * cell, FaceTraverseData * p)face_traverse947,30103
static void domain_traverse_all_leaves (GfsDomain * domain,domain_traverse_all_leaves954,30281
static void dirichlet_p (FttCellFace * f, GfsBc * b)dirichlet_p969,30730
static void fix_box_bc (GfsBox * box, GfsRiver * r)fix_box_bc974,30870
static void river_run (GfsSimulation * sim)river_run998,31673
static gdouble maximum_face_metric (FttCell * cell, GfsDomain * domain, FttComponent c)maximum_face_metric1082,34700
static void minimum_cfl (FttCell * cell, GfsRiver * r)minimum_cfl1096,35055
static gdouble river_cfl (GfsSimulation * sim)river_cfl1119,35702
static void (* default_tracer_read) (GtsObject ** o, GtsFile * fp) = NULL;default_tracer_read1128,35982
static void river_tracer_read (GtsObject ** o, GtsFile * fp)river_tracer_read1130,36058
static void river_read (GtsObject ** o, GtsFile * fp)river_read1178,37828
static void river_write (GtsObject * o, FILE * fp)river_write1254,40191
static void river_destroy (GtsObject * o)river_destroy1281,40874
static void river_class_init (GfsSimulationClass * klass)river_class_init1308,41537
static gdouble cell_velocity (FttCell * cell, FttCellFace * face, GfsRiver * r)cell_velocity1317,41801
static gdouble cell_velocity2 (FttCell * cell, FttCellFace * face, GfsRiver * r)cell_velocity21326,42117
static void momentum_coarse_fine (FttCell * parent, GfsVariable * v)momentum_coarse_fine1336,42446
static GfsVariable * massflux (GfsDomain * domain, int l)massflux1347,42906
static void allocate_river (GfsRiver * r, int start, int nl)allocate_river1357,43236
static void river_init (GfsRiver * r)river_init1402,45122
GfsSimulationClass * gfs_river_class (void)gfs_river_class1473,47857
static void traverse_layers (GfsDomain * domain, FttCellTraverseFunc func, gpointer data)traverse_layers1500,48431
static gdouble cell_sigma (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_sigma1517,49159
static gdouble cell_z (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_z1527,49419
static void gfs_layers_read (GtsObject ** o, GtsFile * fp)gfs_layers_read1535,49798
static void gfs_layers_write (GtsObject * o, FILE * fp)gfs_layers_write1590,51620
static void gfs_layers_class_init (GtsObjectClass * klass)gfs_layers_class_init1595,51747
static void gfs_layers_init (GfsLayers * l)gfs_layers_init1602,51922
GtsObjectClass * gfs_layers_class (void)gfs_layers_class1607,51984
static void subcritical (FttCellFace * f, GfsBc * b)subcritical1636,52545
static void bc_subcritical_read (GtsObject ** o, GtsFile * fp)bc_subcritical_read1647,52953
static void gfs_bc_subcritical_init (GfsBc * object)gfs_bc_subcritical_init1664,53448
static void gfs_bc_subcritical_class_init (GtsObjectClass * klass)gfs_bc_subcritical_class_init1669,53557
GfsBcClass * gfs_bc_subcritical_class (void)gfs_bc_subcritical_class1674,53666
static void discharge_elevation_destroy (GtsObject * o)discharge_elevation_destroy1702,54300
static void discharge_elevation_read (GtsObject ** o, GtsFile * fp)discharge_elevation_read1710,54590
static void discharge_elevation_write (GtsObject * o, FILE * fp)discharge_elevation_write1736,55452
static void boundary_flux (FttCellFace * f, GfsDischargeElevation * b)boundary_flux1744,55820
static void traverse_dirichlet_boundaries (GfsBox * box, GfsDischargeElevation * bd)traverse_dirichlet_boundaries1764,56540
static gboolean discharge_elevation_event (GfsEvent * event, GfsSimulation * sim)discharge_elevation_event1778,57026
static void gfs_discharge_elevation_class_init (GtsObjectClass * klass)gfs_discharge_elevation_class_init1835,58859
static void gfs_discharge_elevation_init (GfsDischargeElevation * b)gfs_discharge_elevation_init1843,59140
GfsEventClass * gfs_discharge_elevation_class (void)gfs_discharge_elevation_class1853,59496
static gboolean read_position (GtsFile * fp, FttVector * p)read_position1881,60207
static void source_pipe_read (GtsObject ** o, GtsFile * fp)source_pipe_read1895,60505
static void source_pipe_write (GtsObject * o, FILE * fp)source_pipe_write1923,61373
#define DQ DQ1933,61666
static double flow_rate_Q (double z1, double h1, double z2, double h2,flow_rate_Q1935,61688
static gboolean source_pipe_event (GfsEvent * event, GfsSimulation * sim)source_pipe_event1945,62007
static void source_pipe_class_init (GfsSourceGenericClass * klass)source_pipe_class_init2013,64530
static gdouble source_pipe_value (GfsSourceGeneric * s, source_pipe_value2020,64764
static double pipe_flow_rate (double z1, double h1, /* terrain elevation and flow depth at inlet */pipe_flow_rate2034,65200
static void source_pipe_init (GfsSourceGeneric * s)source_pipe_init2050,65921
GfsSourceGenericClass * gfs_source_pipe_class (void)gfs_source_pipe_class2056,66085

map.h,1773
#define __MAP_H____MAP_H__21,851
typedef struct _GfsMap         GfsMap;GfsMap32,992
struct _GfsMap {_GfsMap34,1032
  GtsSListContainee parent;parent36,1067
  void (* transform)           (GfsMap * map, const FttVector * src, FttVector * dest);transform38,1096
  void (* inverse)             (GfsMap * map, const FttVector * src, FttVector * dest);inverse39,1184
  void (* transform_vector)    (GfsMap * map, const FttVector * p,transform_vector40,1272
  void (* inverse_vector)      (GfsMap * map, const FttVector * p,inverse_vector42,1385
  void (* inverse_cell)        (GfsMap * map, const FttVector * src, FttVector * dest);inverse_cell44,1498
typedef struct _GfsMapClass    GfsMapClass;GfsMapClass48,1607
struct _GfsMapClass {_GfsMapClass50,1652
  GtsSListContaineeClass parent_class;parent_class52,1692
#define GFS_MAP(GFS_MAP57,1753
#define GFS_MAP_CLASS(GFS_MAP_CLASS60,1863
#define GFS_IS_MAP(GFS_IS_MAP63,1971
typedef struct _GfsMapFunction         GfsMapFunction;GfsMapFunction70,2135
struct _GfsMapFunction {_GfsMapFunction72,2191
  GfsMap parent;parent74,2234
  GfsFunction * x, * y, * z;x77,2269
  GfsFunction * x, * y, * z;y77,2269
  GfsFunction * x, * y, * z;z77,2269
#define GFS_MAP_FUNCTION(GFS_MAP_FUNCTION80,2302
#define GFS_IS_MAP_FUNCTION(GFS_IS_MAP_FUNCTION83,2438
typedef struct _GfsMapTransform         GfsMapTransform;GfsMapTransform90,2630
struct _GfsMapTransform {_GfsMapTransform92,2688
  GfsMap parent;parent94,2732
  GtsMatrix * m, * im;m95,2749
  GtsMatrix * m, * im;im95,2749
  GtsVector translate, rotate;translate98,2790
  GtsVector translate, rotate;rotate98,2790
#define GFS_MAP_TRANSFORM(GFS_MAP_TRANSFORM101,2825
#define GFS_IS_MAP_TRANSFORM(GFS_IS_MAP_TRANSFORM104,2964

wave.h,885
#define __WAVE_H____WAVE_H__21,852
#define GFS_WAVE_GAMMA GFS_WAVE_GAMMA31,978
#define GFS_WAVE_F0 GFS_WAVE_F032,1005
typedef struct _GfsWave    GfsWave;GfsWave34,1031
struct _GfsWave {_GfsWave36,1068
  GfsSimulation parent;parent38,1104
  guint ik, ith;ik39,1128
  guint ik, ith;ith39,1128
  void (* source) (GfsWave * wave);source40,1145
  guint nk, ntheta;nk43,1199
  guint nk, ntheta;ntheta43,1199
  gdouble alpha_s;alpha_s44,1219
  GfsVariable *** F;F45,1238
#define GFS_WAVE(GFS_WAVE48,1263
#define GFS_IS_WAVE(GFS_IS_WAVE51,1380
typedef struct _GfsInitWave         GfsInitWave;GfsInitWave58,1557
struct _GfsInitWave {_GfsInitWave60,1607
  GfsGenericInit parent;parent62,1647
  GfsFunction * d, * hs;d65,1690
  GfsFunction * d, * hs;hs65,1690
#define GFS_INIT_WAVE(GFS_INIT_WAVE68,1719
#define GFS_IS_INIT_WAVE(GFS_IS_INIT_WAVE71,1846

fluid.c,9587
FttCellFace gfs_cell_face (FttCell * cell,gfs_cell_face42,1234
typedef struct _Gradient Gradient;Gradient54,1507
struct _Gradient {_Gradient57,1590
  gdouble a, b, c;a58,1609
  gdouble a, b, c;b58,1609
  gdouble a, b, c;c58,1609
static gdouble average_neighbor_value (const FttCellFace * face,average_neighbor_value64,1735
static void average_neighbor_value_stencil (const FttCellFace * face, guint v)average_neighbor_value_stencil95,2652
static GfsGradient interpolate_1D2 (FttCell * cell,interpolate_1D2126,3402
static GfsGradient interpolate_1D1 (FttCell * cell,interpolate_1D1171,4342
static void interpolate_1D1_stencil (FttCell * cell,interpolate_1D1_stencil193,4746
static GfsGradient interpolate_2D1 (FttCell * cell,interpolate_2D1214,5202
static void interpolate_2D1_stencil (FttCell * cell,interpolate_2D1_stencil247,5877
static gint perpendicular[FTT_NEIGHBORS][FTT_CELLS] = perpendicular265,6278
static gint perpendicular[FTT_NEIGHBORS][FTT_CELLS][2] = perpendicular271,6438
static Gradient gradient_fine_coarse (const FttCellFace * face, guint v)gradient_fine_coarse282,6987
#define REFINE_CORNER(REFINE_CORNER311,7615
void ftt_cell_refine_corners (FttCell * cell,ftt_cell_refine_corners315,7818
gdouble gfs_neighbor_value (const FttCellFace * face,gfs_neighbor_value364,8995
static void neighbor_value_stencil (const FttCellFace * face, guint v)neighbor_value_stencil398,9924
gdouble gfs_center_gradient (FttCell * cell,gfs_center_gradient434,10875
void gfs_center_gradient_stencil (FttCell * cell,gfs_center_gradient_stencil486,12179
gdouble gfs_center_van_leer_gradient (FttCell * cell,gfs_center_van_leer_gradient522,13044
static gdouble generic_limiter (gdouble r, gdouble beta)generic_limiter563,14136
static gdouble minmod_limiter (gdouble r)minmod_limiter570,14295
static gdouble superbee_limiter (gdouble r)superbee_limiter575,14376
static gdouble sweby_limiter (gdouble r)sweby_limiter580,14459
static gdouble center_limited_gradient (FttCell * cell,center_limited_gradient585,14540
gdouble gfs_center_minmod_gradient (FttCell * cell,gfs_center_minmod_gradient628,15569
gdouble gfs_center_superbee_gradient (FttCell * cell,gfs_center_superbee_gradient650,16143
gdouble gfs_center_sweby_gradient (FttCell * cell,gfs_center_sweby_gradient672,16732
gdouble gfs_center_regular_gradient (FttCell * cell,gfs_center_regular_gradient694,17320
gdouble gfs_center_regular_2nd_derivative (FttCell * cell, gfs_center_regular_2nd_derivative743,18894
void gfs_face_gradient (const FttCellFace * face,gfs_face_gradient778,20111
static void face_weighted_gradient (const FttCellFace * face,face_weighted_gradient833,21562
void gfs_face_weighted_gradient (const FttCellFace * face,gfs_face_weighted_gradient905,23522
void gfs_face_weighted_gradient_2D (const FttCellFace * face,gfs_face_weighted_gradient_2D913,23708
static void fullest_directions (const FttCellFace * face,fullest_directions921,23894
static FttCell * cell_corner_neighbor1 (FttCell * cell,cell_corner_neighbor1935,24312
# define N_CELLS N_CELLS967,25086
# define N_CELLS N_CELLS969,25121
static gboolean inverse (gdouble mi[N_CELLS - 1][N_CELLS - 1])inverse972,25157
static void draw_cell (FttCell * cell, gdouble r, gdouble g, gdouble b,draw_cell1049,27356
static void output_error_mesh (FttCell ** n)output_error_mesh1124,29140
static gboolean face_bilinear (const FttCellFace * face,face_bilinear1138,29540
static gboolean mixed_face_gradient (const FttCellFace * face,mixed_face_gradient1251,32846
static void face_cm_gradient (const FttCellFace * face,face_cm_gradient1333,34901
void gfs_face_cm_gradient (const FttCellFace * face,gfs_face_cm_gradient1417,37328
void gfs_face_cm_weighted_gradient (const FttCellFace * face,gfs_face_cm_weighted_gradient1444,38182
static gboolean cell_bilinear (FttCell * cell,cell_bilinear1455,38433
void gfs_cell_dirichlet_gradient (FttCell * cell,gfs_cell_dirichlet_gradient1494,39693
void gfs_mixed_cell_gradient (FttCell * cell,gfs_mixed_cell_gradient1532,40580
gdouble gfs_mixed_cell_interpolate (FttCell * cell,gfs_mixed_cell_interpolate1587,42116
gdouble gfs_cell_dirichlet_gradient_flux (FttCell * cell,gfs_cell_dirichlet_gradient_flux1644,43768
static void gfs_cell_dirichlet_gradient_stencil (FttCell * cell,gfs_cell_dirichlet_gradient_stencil1661,44171
gdouble gfs_cell_dirichlet_gradient_flux_stencil (FttCell * cell,gfs_cell_dirichlet_gradient_flux_stencil1703,45480
gdouble gfs_cell_dirichlet_value (FttCell * cell,gfs_cell_dirichlet_value1732,46325
void gfs_shear_strain_rate_tensor (FttCell * cell, gfs_shear_strain_rate_tensor1782,47751
gdouble gfs_2nd_principal_invariant (FttCell * cell, GfsVariable ** u)gfs_2nd_principal_invariant1817,48670
void gfs_get_from_below_intensive (FttCell * cell, const GfsVariable * v)gfs_get_from_below_intensive1843,49385
void gfs_cell_coarse_fine (FttCell * parent, GfsVariable * v)gfs_cell_coarse_fine1876,50280
void gfs_cell_cleanup (FttCell * cell, GfsDomain * domain)gfs_cell_cleanup1951,52788
void gfs_cell_reset (FttCell * cell, GfsVariable * v)gfs_cell_reset1980,53414
void gfs_face_reset (FttCellFace * face, GfsVariable * v)gfs_face_reset1995,53728
static void add_stats (const FttCell * cell, gpointer * data)add_stats2003,53925
GtsRange gfs_stats_variable (FttCell * root,gfs_stats_variable2024,54555
static void add_norm (const FttCell * cell, gpointer * data)add_norm2045,55005
GfsNorm gfs_norm_variable (FttCell * root,gfs_norm_variable2065,55634
void gfs_norm_init (GfsNorm * n)gfs_norm_init2092,56147
void gfs_norm_reset (GfsNorm * n)gfs_norm_reset2107,56382
void gfs_norm_add (GfsNorm * n, gdouble val, gdouble weight)gfs_norm_add2124,56649
void gfs_norm_update (GfsNorm * n)gfs_norm_update2145,57051
gdouble gfs_face_interpolated_value (const FttCellFace * face,gfs_face_interpolated_value2171,57651
gdouble gfs_face_interpolated_value_generic (const FttCellFace * face, const GfsVariable * v)gfs_face_interpolated_value_generic2217,58833
gdouble gfs_face_weighted_interpolated_value (const FttCellFace * face,gfs_face_weighted_interpolated_value2253,60178
void gfs_normal_divergence (FttCell * cell,gfs_normal_divergence2295,61367
void gfs_normal_divergence_2D (FttCell * cell,gfs_normal_divergence_2D2319,62002
gdouble gfs_divergence (FttCell * cell,gfs_divergence2342,62594
gdouble gfs_vorticity (FttCell * cell,gfs_vorticity2371,63392
gdouble gfs_vector_norm2 (FttCell * cell,gfs_vector_norm22422,65342
gdouble gfs_vector_norm (FttCell * cell,gfs_vector_norm2443,65785
gdouble gfs_vector_lambda2 (FttCell * cell,gfs_vector_lambda22458,66164
void gfs_pressure_force (FttCell * cell,gfs_pressure_force2491,67129
static void cell_traverse_mixed (FttCell * cell,cell_traverse_mixed2518,67684
void gfs_cell_traverse_mixed (FttCell * root,gfs_cell_traverse_mixed2561,69099
static FttDirection corner[4][FTT_DIMENSION] = {corner2574,69412
static FttDirection corner[8][FTT_DIMENSION] = {corner2581,69589
void gfs_cell_corner_values (FttCell * cell, gfs_cell_corner_values2602,70295
gdouble gfs_interpolate_from_corners (FttCell * cell,gfs_interpolate_from_corners2625,70937
gdouble gfs_interpolate (FttCell * cell,gfs_interpolate2682,72629
void gfs_interpolate_stencil (FttCell * cell,gfs_interpolate_stencil2705,73183
gdouble gfs_center_curvature (FttCell * cell,gfs_center_curvature2734,73868
gdouble gfs_streamline_curvature (FttCell * cell,gfs_streamline_curvature2770,74678
static FttCell * cell_corner_neighbor (FttCell * cell,cell_corner_neighbor2798,75239
static void interpolator_merge (GfsInterpolator * a, GfsInterpolator * b)interpolator_merge2833,76152
static void interpolator_scale (GfsInterpolator * a, gdouble b)interpolator_scale2857,76565
static void t_junction_interpolator (FttCell * cell,t_junction_interpolator2864,76692
static gboolean do_path (FttCell * cell, gint i,do_path2910,78205
static gdouble distance (FttVector * c, FttCell * cell, gboolean centered)distance2968,79922
void gfs_cell_corner_interpolator (FttCell * cell,gfs_cell_corner_interpolator3000,80808
gdouble gfs_cell_corner_value (FttCell * cell,gfs_cell_corner_value3066,82464
GfsStencil * gfs_stencil_new (FttCell * cell, GfsLinearProblem * lp, gdouble coeff)gfs_stencil_new3100,83274
void gfs_stencil_add_element (GfsStencil * stencil, gfs_stencil_add_element3121,83868
void gfs_stencil_destroy (GfsStencil * stencil)gfs_stencil_destroy3157,84748
static void get_average_neighbor_value_stencil (const FttCellFace * face,get_average_neighbor_value_stencil3165,84934
static GfsGradient get_interpolate_1D1_stencil (FttCell * cell,get_interpolate_1D1_stencil3206,86160
static GfsGradient get_interpolate_2D1_stencil (FttCell * cell,get_interpolate_2D1_stencil3234,86656
static Gradient gradient_fine_coarse_stencil (const FttCellFace * face,gradient_fine_coarse_stencil3267,87352
static void face_weighted_gradient_stencil (const FttCellFace * face,face_weighted_gradient_stencil3299,88160
void gfs_face_weighted_gradient_stencil (const FttCellFace * face,gfs_face_weighted_gradient_stencil3369,89984
static gboolean mixed_face_gradient_stencil (const FttCellFace * face,mixed_face_gradient_stencil3378,90241
static void face_cm_gradient_stencil (const FttCellFace * face,face_cm_gradient_stencil3462,92442
void gfs_face_cm_weighted_gradient_stencil (const FttCellFace * face,gfs_face_cm_weighted_gradient_stencil3546,95275
void gfs_cm_gradient (FttCell * cell,gfs_cm_gradient3571,95915

version.h,91
#define GFSVERSION_HGFSVERSION_H7,104
#define GFS_BUILD_VERSION GFS_BUILD_VERSION9,126

river.h,2954
#define __RIVER_H____RIVER_H__21,858
typedef struct _GfsLayers         GfsLayers;GfsLayers32,1003
struct _GfsLayers {_GfsLayers34,1049
  GfsRefine parent;parent36,1087
  int nl;nl39,1125
#define GFS_LAYERS(GFS_LAYERS42,1139
#define GFS_IS_LAYERS(GFS_IS_LAYERS45,1258
typedef struct _GfsRiver GfsRiver;GfsRiver52,1424
struct _GfsRiver {_GfsRiver54,1460
  GfsSimulation parent;parent56,1497
  gdouble * uL, * uR, * f, cfl;uL57,1521
  gdouble * uL, * uR, * f, cfl;uR57,1521
  gdouble * uL, * uR, * f, cfl;f57,1521
  gdouble * uL, * uR, * f, cfl;cfl57,1521
  GfsVariable ** v, ** v1, * zb, * h, * qx, * qy;v60,1571
  GfsVariable ** v, ** v1, * zb, * h, * qx, * qy;v160,1571
  GfsVariable ** v, ** v1, * zb, * h, * qx, * qy;zb60,1571
  GfsVariable ** v, ** v1, * zb, * h, * qx, * qy;h60,1571
  GfsVariable ** v, ** v1, * zb, * h, * qx, * qy;qx60,1571
  GfsVariable ** v, ** v1, * zb, * h, * qx, * qy;qy60,1571
  GfsVariable ** dv[FTT_DIMENSION];dv61,1621
  GfsVariable ** flux, ** massflux;flux62,1657
  GfsVariable ** flux, ** massflux;massflux62,1657
  gdouble * dz;dz63,1693
  int l, nlayers, nvar, nt;l64,1709
  int l, nlayers, nvar, nt;nlayers64,1709
  int l, nlayers, nvar, nt;nvar64,1709
  int l, nlayers, nvar, nt;nt64,1709
  gdouble g, dt;g65,1737
  gdouble g, dt;dt65,1737
  GfsCenterGradient gradient;gradient66,1754
  guint time_order;time_order67,1784
  gdouble dry;dry68,1804
  void (* scheme) (const GfsRiver * r,scheme69,1819
  GfsFunction * nu, * dut, * k;nu72,1923
  GfsFunction * nu, * dut, * k;dut72,1923
  GfsFunction * nu, * dut, * k;k72,1923
  gboolean variable_density;variable_density73,1955
#define GFS_RIVER(GFS_RIVER76,1988
#define GFS_IS_RIVER(GFS_IS_RIVER79,2108
#define GFS_IS_BC_SUBCRITICAL(GFS_IS_BC_SUBCRITICAL86,2291
typedef struct _GfsDischargeElevation GfsDischargeElevation;GfsDischargeElevation92,2489
struct _GfsDischargeElevation {_GfsDischargeElevation94,2551
  GfsConstant parent;parent96,2601
  GfsVariable * P;P97,2623
  gdouble flow;flow98,2642
  GfsFunction * Q, * profile;Q101,2676
  GfsFunction * Q, * profile;profile101,2676
  gdouble tolerance;tolerance102,2706
#define GFS_DISCHARGE_ELEVATION(GFS_DISCHARGE_ELEVATION105,2731
#define GFS_IS_DISCHARGE_ELEVATION(GFS_IS_DISCHARGE_ELEVATION108,2892
typedef struct _GfsSourcePipe         GfsSourcePipe;GfsSourcePipe115,3102
struct _GfsSourcePipe {_GfsSourcePipe117,3156
  GfsSourceGeneric parent;parent119,3198
  FttCell * scell, * ecell;scell120,3225
  FttCell * scell, * ecell;ecell120,3225
  gdouble Q;Q121,3253
  double (* flow_rate) (double z1, double h1, /* terrain elevation and flow depth at inlet */flow_rate124,3284
  FttVector start, end;start129,3573
  FttVector start, end;end129,3573
  gdouble diameter;diameter130,3597
#define GFS_SOURCE_PIPE(GFS_SOURCE_PIPE133,3621
#define GFS_IS_SOURCE_PIPE(GFS_IS_SOURCE_PIPE136,3754

init.c,809
# define _GNU_SOURCE_GNU_SOURCE33,1108
#     define EXCEPTIONS EXCEPTIONS38,1214
#     define EXCEPTIONS EXCEPTIONS40,1274
static void gfs_log (const gchar * log_domain,gfs_log74,1912
GtsObjectClass ** gfs_classes (void)gfs_classes122,3138
static gboolean disabled_fpe = FALSE;disabled_fpe314,8678
typedef void (* AtExitFunc) (void);AtExitFunc316,8717
void gfs_catch_floating_point_exceptions (void)gfs_catch_floating_point_exceptions324,8882
int gfs_restore_floating_point_exceptions (void)gfs_restore_floating_point_exceptions341,9315
void gfs_disable_floating_point_exceptions (void)gfs_disable_floating_point_exceptions360,9740
void gfs_enable_floating_point_exceptions (void)gfs_enable_floating_point_exceptions374,10046
void gfs_init (int * argc, char *** argv)gfs_init392,10493

tension.c,6108
static void gfs_source_tension_generic_destroy (GtsObject * o)gfs_source_tension_generic_destroy36,1076
static void gfs_source_tension_generic_read (GtsObject ** o, GtsFile * fp)gfs_source_tension_generic_read42,1308
static void gfs_source_tension_generic_write (GtsObject * o, FILE * fp)gfs_source_tension_generic_write67,2073
  gdouble amin, amax;amin76,2394
  gdouble amin, amax;amax76,2394
  guint depth;depth77,2416
  gdouble sigma;sigma78,2431
  GfsSourceTensionGeneric * t;t79,2448
  GfsFunction * alpha;alpha80,2479
  GfsVariable * c;c81,2502
} StabilityParams;StabilityParams82,2521
static void interface_level (FttCell * cell, StabilityParams * p)interface_level84,2541
static void min_max_alpha (FttCell * cell, StabilityParams * p)min_max_alpha96,2921
static gdouble gfs_source_tension_generic_stability (GfsSourceGeneric * s,gfs_source_tension_generic_stability106,3162
static void gfs_source_tension_generic_class_init (GfsSourceGenericClass * klass)gfs_source_tension_generic_class_init139,4282
static void gfs_source_tension_generic_init (GfsSourceTensionGeneric * t)gfs_source_tension_generic_init147,4662
GfsSourceGenericClass * gfs_source_tension_generic_class (void)gfs_source_tension_generic_class152,4800
static void gfs_source_tension_css_read (GtsObject ** o, GtsFile * fp)gfs_source_tension_css_read181,5601
static void foreach_cell_normal (FttCell * cell, GfsSourceTensionCSS * s)foreach_cell_normal198,6187
static void foreach_cell_tension_css (FttCell * cell, GfsSourceTensionCSS * s)foreach_cell_tension_css215,6733
static gboolean gfs_source_tension_css_event (GfsEvent * event, gfs_source_tension_css_event231,7284
static gdouble gfs_source_tension_css_value (GfsSourceGeneric * s, gfs_source_tension_css_value260,8207
static void gfs_source_tension_css_class_init (GfsSourceGenericClass * klass)gfs_source_tension_css_class_init267,8405
static void gfs_source_tension_css_init (GfsSourceGeneric * s)gfs_source_tension_css_init273,8617
GfsSourceGenericClass * gfs_source_tension_css_class (void)gfs_source_tension_css_class278,8737
static void gfs_source_tension_read (GtsObject ** o, GtsFile * fp)gfs_source_tension_read307,9518
static void gfs_source_tension_write (GtsObject * o, FILE * fp)gfs_source_tension_write330,10241
static gdouble gfs_source_tension_stability (GfsSourceGeneric * s,gfs_source_tension_stability336,10449
static void gfs_source_tension_class_init (GfsSourceGenericClass * klass)gfs_source_tension_class_init354,11127
GfsSourceGenericClass * gfs_source_tension_class (void)gfs_source_tension_class361,11410
static void variable_curvature_destroy (GtsObject * o)variable_curvature_destroy390,12112
static void curvature_coarse_fine (FttCell * parent, GfsVariable * v)curvature_coarse_fine398,12370
static void curvature_fine_coarse (FttCell * parent, GfsVariable * v)curvature_fine_coarse409,12631
static void variable_curvature_read (GtsObject ** o, GtsFile * fp)variable_curvature_read427,13058
static void variable_curvature_write (GtsObject * o, FILE * fp)variable_curvature_write484,14934
static void height_curvature (FttCell * cell, GfsVariable * v)height_curvature495,15239
static void fit_curvature (FttCell * cell, GfsVariable * v)fit_curvature517,15852
  GfsVariable * v, * f, * tmp;v535,16399
  GfsVariable * v, * f, * tmp;f535,16399
  GfsVariable * v, * f, * tmp;tmp535,16399
} DiffuseParms;DiffuseParms536,16430
#define FMIN FMIN538,16447
static void diffuse_kmax (FttCell * cell, DiffuseParms * p)diffuse_kmax540,16466
static void diffuse (FttCell * cell, DiffuseParms * p)diffuse567,17219
static void variable_curvature_diffuse (GfsVariable * v, GfsVariable * f, variable_curvature_diffuse589,17776
static void variable_curvature_from_fraction (GfsEvent * event, GfsSimulation * sim)variable_curvature_from_fraction610,18502
static void normal (FttCell * cell, gpointer * data)normal641,20128
static void distance_curvature (FttCell * cell, gpointer * data)distance_curvature655,20513
static void interface_curvature (FttCell * cell, gpointer * data)interface_curvature666,20815
static void variable_curvature_from_distance (GfsEvent * event, GfsSimulation * sim)variable_curvature_from_distance694,21620
  GfsVariableCurvature * k;k729,23029
  FttComponent c;c730,23057
  GfsVariable * max;max731,23075
} CurvatureData;CurvatureData732,23096
static gboolean is_interfacial (FttCell * cell, gpointer data)is_interfacial734,23114
static void set_undefined (FttCell * cell, CurvatureData * p)set_undefined740,23273
static void set_curvature (FttCell * cell, gdouble kappa, gdouble kmax, CurvatureData * p)set_curvature746,23428
static void propagate_curvature (FttCell * cell, gdouble kappa, gdouble kmax, CurvatureData * p)propagate_curvature757,23846
static void height_curvature_max (FttCell * cell, CurvatureData * p)height_curvature_max776,24476
static void remaining_curvatures (FttCell * cell, GfsVariable * v)remaining_curvatures786,24814
static gboolean variable_curvature_event (GfsEvent * event, GfsSimulation * sim)variable_curvature_event801,25303
static void variable_curvature_class_init (GtsObjectClass * klass)variable_curvature_class_init854,27971
static void variable_curvature_init (GfsVariable * v)variable_curvature_init862,28235
GfsVariableClass * gfs_variable_curvature_class (void)gfs_variable_curvature_class869,28396
static void variable_position_read (GtsObject ** o, GtsFile * fp)variable_position_read897,29109
static void variable_position_write (GtsObject * o, FILE * fp)variable_position_write933,30208
static void position (FttCell * cell, GfsVariable * v)position944,30544
static gboolean variable_position_event (GfsEvent * event, GfsSimulation * sim)variable_position_event955,30859
static void variable_position_class_init (GtsObjectClass * klass)variable_position_class_init977,31694
static void variable_position_init (GfsVariable * v)variable_position_init984,31907
GfsVariableClass * gfs_variable_position_class (void)gfs_variable_position_class989,31982

event.c,11482
gdouble gfs_event_next (GfsEvent * event, GfsSimulation * sim)gfs_event_next46,1299
static gboolean gfs_event_event (GfsEvent * event, GfsSimulation * sim)gfs_event_event73,2054
static void gfs_event_write (GtsObject * object, FILE * fp)gfs_event_write128,3353
static void event_init (GfsEvent * object)event_init155,4214
static void gfs_event_read (GtsObject ** o, GtsFile * fp)gfs_event_read171,4530
static void gfs_event_destroy (GtsObject * o)gfs_event_destroy308,8462
static void gfs_event_class_init (GfsEventClass * klass)gfs_event_class_init320,8764
GfsEventClass * gfs_event_class (void)gfs_event_class329,9027
GfsEvent * gfs_event_new (GfsEventClass * klass)gfs_event_new351,9538
void gfs_event_set (GfsEvent * e,gfs_event_set377,10064
void gfs_event_init (GfsEvent * event,gfs_event_init410,11028
void gfs_event_do (GfsEvent * event, GfsSimulation * sim)gfs_event_do443,11800
void gfs_event_half_do (GfsEvent * event, GfsSimulation * sim)gfs_event_half_do468,12423
void gfs_event_redo (GfsEvent * event, GfsSimulation * sim)gfs_event_redo484,12856
static void gfs_generic_init_init (GfsEvent * event)gfs_generic_init_init505,13335
GfsEventClass * gfs_generic_init_class (void)gfs_generic_init_class510,13414
  GfsVariable * v[FTT_DIMENSION];v539,14042
  GfsFunction * f[FTT_DIMENSION];f540,14076
  guint n;n541,14110
} VarFunc;VarFunc542,14121
static VarFunc * var_func_new (GfsVariable ** v, GfsFunction ** f, int n)var_func_new544,14133
static void var_func_destroy (VarFunc * v)var_func_destroy556,14368
static void gfs_init_read (GtsObject ** o, GtsFile * fp)gfs_init_read564,14516
static void gfs_init_write (GtsObject * o, FILE * fp)gfs_init_write647,16730
static void gfs_init_destroy (GtsObject * object)gfs_init_destroy684,17587
static void init_scalar (FttCell * cell, VarFunc * vf)init_scalar695,17841
static void init_vector (FttCell * cell, VarFunc * vf)init_vector700,17969
static gboolean gfs_init_event (GfsEvent * event, GfsSimulation * sim)gfs_init_event712,18329
static void gfs_init_class_init (GfsGenericInitClass * klass)gfs_init_class_init750,19725
GfsGenericInitClass * gfs_init_class (void)gfs_init_class758,20001
static void gfs_init_mask_read (GtsObject ** o, GtsFile * fp)gfs_init_mask_read786,20608
static void gfs_init_mask_write (GtsObject * o, FILE * fp)gfs_init_mask_write795,20887
static void gfs_init_mask_destroy (GtsObject * object)gfs_init_mask_destroy802,21082
#define MASKED MASKED809,21290
static void mask_cells (FttCell * cell, GfsInitMask * m)mask_cells811,21327
static void foreach_box (GfsBox * box, GfsInitMask * m)foreach_box832,21967
static gboolean gfs_init_mask_event (GfsEvent * event, GfsSimulation * sim)gfs_init_mask_event839,22152
static void gfs_init_mask_class_init (GfsGenericInitClass * klass)gfs_init_mask_class_init856,22770
static void gfs_init_mask (GfsInitMask * m)gfs_init_mask864,23071
GfsGenericInitClass * gfs_init_mask_class (void)gfs_init_mask_class869,23178
static void gfs_init_flow_constant_read (GtsObject ** o, GtsFile * fp)gfs_init_flow_constant_read894,23807
static void gfs_init_flow_constant_class_init (GfsEventClass * klass)gfs_init_flow_constant_class_init905,24180
GfsEventClass * gfs_init_flow_constant_class (void)gfs_init_flow_constant_class910,24319
static void gfs_init_vorticity_read (GtsObject ** o, GtsFile * fp)gfs_init_vorticity_read936,24945
static void gfs_init_vorticity_write (GtsObject * o, FILE * fp)gfs_init_vorticity_write952,25491
static void gfs_init_vorticity_destroy (GtsObject * object)gfs_init_vorticity_destroy964,25855
static void sum_volume (FttCell * cell, GtsRange * vol)sum_volume977,26247
static void add_ddiv (FttCell * cell, gpointer * data)add_ddiv987,26495
static void correct_div (GfsDomain * domain, GfsVariable * v)correct_div999,26813
static void stream_from_vorticity (GfsDomain * domain,stream_from_vorticity1018,27382
static void init_from_streamfunction (FttCell * cell, GfsInitVorticity * init)init_from_streamfunction1055,28872
static void compute_vorticity (FttCell * cell, GfsInitVorticity * init)compute_vorticity1071,29690
static gboolean gfs_init_vorticity_event (GfsEvent * event, gfs_init_vorticity_event1078,29886
static void gfs_init_vorticity_class_init (GtsObjectClass * klass)gfs_init_vorticity_class_init1125,31813
static void gfs_init_vorticity_init (GfsInitVorticity * init)gfs_init_vorticity_init1133,32077
GfsGenericInitClass * gfs_init_vorticity_class (void)gfs_init_vorticity_class1144,32364
static void gfs_event_sum_destroy (GtsObject * o)gfs_event_sum_destroy1172,33066
static void gfs_event_sum_write (GtsObject * o, FILE * fp)gfs_event_sum_write1181,33280
static void gfs_event_sum_read (GtsObject ** o, GtsFile * fp)gfs_event_sum_read1191,33532
static gboolean gfs_event_sum_event (GfsEvent * event, GfsSimulation * sim)gfs_event_sum_event1215,34203
static void gfs_event_sum_class_init (GfsEventClass * klass)gfs_event_sum_class_init1235,34835
static void sum (FttCell * cell, GfsEventSum * s)sum1243,35130
static void gfs_event_sum_init (GfsEventSum * object)gfs_event_sum_init1248,35253
GfsEventClass * gfs_event_sum_class (void)gfs_event_sum_class1255,35437
static void gfs_event_sum_direction_write (GtsObject * o, FILE * fp)gfs_event_sum_direction_write1283,36042
static void gfs_event_sum_direction_read (GtsObject ** o, GtsFile * fp)gfs_event_sum_direction_read1292,36314
static gboolean gfs_event_sum_direction_event (GfsEvent * event, GfsSimulation * sim)gfs_event_sum_direction_event1313,36894
static void gfs_event_sum_direction_class_init (GfsEventClass * klass)gfs_event_sum_direction_class_init1325,37299
GfsEventClass * gfs_event_sum_direction_class (void)gfs_event_sum_direction_class1332,37573
static void gfs_event_harmonic_destroy (GtsObject * o)gfs_event_harmonic_destroy1360,38269
static void gfs_event_harmonic_write (GtsObject * o, FILE * fp)gfs_event_harmonic_write1386,38771
static void gfs_event_harmonic_read (GtsObject ** o, GtsFile * fp)gfs_event_harmonic_read1405,39411
static void add_xsin_xcos (FttCell * cell, GfsEventHarmonic * h)add_xsin_xcos1543,43587
static gdouble de (GfsEventHarmonic * h, gdouble ** M)de1557,43923
static void update_A_B_Z (FttCell * cell, GfsEventHarmonic * h)update_A_B_Z1575,44402
static gboolean gfs_event_harmonic_event (GfsEvent * event, GfsSimulation * sim)gfs_event_harmonic_event1626,45598
static void gfs_event_harmonic_class_init (GtsObjectClass * klass)gfs_event_harmonic_class_init1678,47225
static void gfs_event_harmonic_init (GfsEventHarmonic * object)gfs_event_harmonic_init1686,47489
GfsEventClass * gfs_event_harmonic_class (void)gfs_event_harmonic_class1691,47622
static void gfs_event_stop_write (GtsObject * o, FILE * fp)gfs_event_stop_write1719,48298
static void gfs_event_stop_read (GtsObject ** o, GtsFile * fp)gfs_event_stop_read1734,48721
static void gfs_event_stop_destroy (GtsObject * o)gfs_event_stop_destroy1784,50288
static void diff (FttCell * cell, GfsEventStop * s)diff1792,50518
static void copy (FttCell * cell, GfsEventStop * s)copy1797,50630
static gboolean gfs_event_stop_event (GfsEvent * event, GfsSimulation * sim)gfs_event_stop_event1802,50741
static void gfs_event_stop_class_init (GfsEventClass * klass)gfs_event_stop_class_init1842,52034
static void gfs_event_stop_init (GfsEventStop * object)gfs_event_stop_init1850,52334
GfsEventClass * gfs_event_stop_class (void)gfs_event_stop_class1855,52417
static void gfs_event_script_destroy (GtsObject * o)gfs_event_script_destroy1883,53065
static void gfs_event_script_write (GtsObject * o, FILE * fp)gfs_event_script_write1892,53272
static void gfs_event_script_read (GtsObject ** o, GtsFile * fp)gfs_event_script_read1906,53631
FILE * gfs_popen (GfsSimulation * sim, const char * command, const char * type)gfs_popen1931,54361
static gboolean gfs_event_script_event (GfsEvent * event, GfsSimulation * sim)gfs_event_script_event1966,55394
static void gfs_event_script_class_init (GfsEventClass * klass)gfs_event_script_class_init1988,56030
GfsEventClass * gfs_event_script_class (void)gfs_event_script_class1996,56340
static void gfs_init_fraction_destroy (GtsObject * object)gfs_init_fraction_destroy2024,57000
static void gfs_init_fraction_read (GtsObject ** o, GtsFile * fp)gfs_init_fraction_read2034,57262
static void gfs_init_fraction_write (GtsObject * o, FILE * fp)gfs_init_fraction_write2061,58062
static gboolean gfs_init_fraction_event (GfsEvent * event, GfsSimulation * sim)gfs_init_fraction_event2071,58378
static void gfs_init_fraction_class_init (GfsInitFractionClass * klass)gfs_init_fraction_class_init2083,58752
static void gfs_init_fraction_init (GfsInitFraction * object)gfs_init_fraction_init2091,59074
GfsInitFractionClass * gfs_init_fraction_class (void)gfs_init_fraction_class2096,59241
static void gfs_remove_droplets_destroy (GtsObject * object)gfs_remove_droplets_destroy2124,59943
static void compute_v (FttCell * cell, GfsRemoveDroplets * d)compute_v2132,60210
static gboolean gfs_remove_droplets_event (GfsEvent * event, GfsSimulation * sim)gfs_remove_droplets_event2137,60338
static void gfs_remove_droplets_read (GtsObject ** o, GtsFile * fp)gfs_remove_droplets_read2160,61216
static void gfs_remove_droplets_write (GtsObject * o, FILE * fp)gfs_remove_droplets_write2197,62361
static void gfs_remove_droplets_class_init (GfsEventClass * klass)gfs_remove_droplets_class_init2211,62809
GfsEventClass * gfs_remove_droplets_class (void)gfs_remove_droplets_class2219,63134
static gboolean gfs_remove_ponds_event (GfsEvent * event, GfsSimulation * sim)gfs_remove_ponds_event2247,63794
static void gfs_remove_ponds_read (GtsObject ** o, GtsFile * fp)gfs_remove_ponds_read2258,64163
static void gfs_remove_ponds_write (GtsObject * o, FILE * fp)gfs_remove_ponds_write2274,64618
static void gfs_remove_ponds_class_init (GfsEventClass * klass)gfs_remove_ponds_class_init2281,64891
GfsEventClass * gfs_remove_ponds_class (void)gfs_remove_ponds_class2288,65137
static void filter (FttCell * cell, GfsEventFilter * f)filter2316,65786
static void filtered (FttCell * cell, GfsEventFilter * f)filtered2336,66508
static gboolean gfs_event_filter_event (GfsEvent * event, GfsSimulation * sim)gfs_event_filter_event2343,66743
static void gfs_event_filter_read (GtsObject ** o, GtsFile * fp)gfs_event_filter_read2361,67403
static void gfs_event_filter_write (GtsObject * o, FILE * fp)gfs_event_filter_write2392,68310
static void gfs_event_filter_class_init (GfsEventClass * klass)gfs_event_filter_class_init2400,68626
GfsEventClass * gfs_event_filter_class (void)gfs_event_filter_class2407,68872
static gboolean gfs_event_list_event (GfsEvent * event, GfsSimulation * sim)gfs_event_list_event2435,69494
static void copy_event (GfsEvent * event, GfsEvent * list)copy_event2446,69838
static void gfs_event_list_read (GtsObject ** o, GtsFile * fp)gfs_event_list_read2451,70002
static void gfs_event_list_write (GtsObject * o, FILE * fp)gfs_event_list_write2513,71818
static void gfs_event_list_destroy (GtsObject * o)gfs_event_list_destroy2530,72276
static void gfs_event_list_class_init (GfsEventClass * klass)gfs_event_list_class_init2539,72583
static void gfs_event_list_init (GfsEventList * l)gfs_event_list_init2547,72883
GfsEventClass * gfs_event_list_class (void)gfs_event_list_class2553,73050

output.c,15436
static void output_free (GfsOutput * output)output_free43,1231
static void gfs_output_destroy (GtsObject * object)gfs_output_destroy52,1423
static gboolean gfs_output_event (GfsEvent * event, GfsSimulation * sim)gfs_output_event64,1695
static void gfs_output_post_event (GfsEvent * event, GfsSimulation * sim)gfs_output_post_event126,3437
static void gfs_output_write (GtsObject * o, FILE * fp)gfs_output_write133,3610
static void gfs_output_read (GtsObject ** o, GtsFile * fp)gfs_output_read143,3850
static void gfs_output_class_init (GfsOutputClass * klass)gfs_output_class_init214,5769
static void gfs_output_init (GfsOutput * object)gfs_output_init224,6114
GfsOutputClass * gfs_output_class (void)gfs_output_class234,6326
void gfs_output_mute (GfsOutput * output)gfs_output_mute263,7040
static GHashTable * gfs_output_files = NULL;gfs_output_files273,7272
GfsOutputFile * gfs_output_file_new (FILE * fp)gfs_output_file_new281,7419
GfsOutputFile * gfs_output_file_open (const gchar * name, const gchar * mode)gfs_output_file_open302,7989
void gfs_output_file_close (GfsOutputFile * file)gfs_output_file_close346,9156
static gboolean time_event (GfsEvent * event, GfsSimulation * sim)time_event370,9611
static void gfs_output_time_class_init (GfsEventClass * klass)gfs_output_time_class_init394,10312
GfsOutputClass * gfs_output_time_class (void)gfs_output_time_class399,10409
static gboolean progress_event (GfsEvent * event, GfsSimulation * sim)progress_event427,11011
static void gfs_output_progress_class_init (GfsEventClass * klass)gfs_output_progress_class_init453,11890
GfsOutputClass * gfs_output_progress_class (void)gfs_output_progress_class458,11995
static gboolean projection_stats_event (GfsEvent * event, GfsSimulation * sim)projection_stats_event486,12629
static void gfs_output_projection_stats_class_init (GfsEventClass * klass)gfs_output_projection_stats_class_init502,13185
GfsOutputClass * gfs_output_projection_stats_class (void)gfs_output_projection_stats_class507,13306
static gboolean diffusion_stats_event (GfsEvent * event, GfsSimulation * sim)diffusion_stats_event535,13984
static void gfs_output_diffusion_stats_class_init (GfsEventClass * klass)gfs_output_diffusion_stats_class_init568,14825
GfsOutputClass * gfs_output_diffusion_stats_class (void)gfs_output_diffusion_stats_class573,14944
static gboolean gfs_output_solid_stats_event (GfsEvent * event, gfs_output_solid_stats_event601,15613
static void gfs_output_solid_stats_class_init (GfsOutputClass * klass)gfs_output_solid_stats_class_init627,16614
GfsOutputClass * gfs_output_solid_stats_class (void)gfs_output_solid_stats_class632,16755
static gboolean gfs_output_adapt_stats_event (GfsEvent * event, gfs_output_adapt_stats_event660,17438
static void gfs_output_adapt_stats_class_init (GfsOutputClass * klass)gfs_output_adapt_stats_class_init694,18656
GfsOutputClass * gfs_output_adapt_stats_class (void)gfs_output_adapt_stats_class699,18797
  GfsTimer * t;t728,19454
  gchar * name;name729,19470
} Timer;Timer730,19486
static int compare_timer (const void * a, const void * b)compare_timer732,19496
static void get_timer (gchar * name, GfsTimer * t, gpointer * data)get_timer739,19665
static void print_timing (GHashTable * timers, GfsDomain * domain, FILE * fp)print_timing748,19860
static gboolean timing_event (GfsEvent * event, GfsSimulation * sim)timing_event772,20661
static void gfs_output_timing_class_init (GfsEventClass * klass)gfs_output_timing_class_init810,21884
GfsOutputClass * gfs_output_timing_class (void)gfs_output_timing_class815,21985
static gboolean gfs_output_balance_event (GfsEvent * event, gfs_output_balance_event843,22634
static void gfs_output_balance_class_init (GfsOutputClass * klass)gfs_output_balance_class_init872,23682
GfsOutputClass * gfs_output_balance_class (void)gfs_output_balance_class877,23815
static void gfs_output_solid_force_destroy (GtsObject * object)gfs_output_solid_force_destroy905,24489
static void gfs_output_solid_force_read (GtsObject ** o, GtsFile * fp)gfs_output_solid_force_read913,24775
static void gfs_output_solid_force_write (GtsObject * o, FILE * fp)gfs_output_solid_force_write928,25217
static gboolean gfs_output_solid_force_event (GfsEvent * event, gfs_output_solid_force_event936,25490
static void gfs_output_solid_force_class_init (GfsOutputClass * klass)gfs_output_solid_force_class_init963,26495
GfsOutputClass * gfs_output_solid_force_class (void)gfs_output_solid_force_class971,26836
static gchar default_precision[] = "%g";default_precision999,27544
static void gfs_output_location_destroy (GtsObject * object)gfs_output_location_destroy1001,27586
static gboolean vector_read (GtsFile * fp, FttVector * p)vector_read1012,27914
static void gfs_output_location_read (GtsObject ** o, GtsFile * fp)gfs_output_location_read1037,28561
static void gfs_output_location_write (GtsObject * o, FILE * fp)gfs_output_location_write1125,30760
static gboolean gfs_output_location_event (GfsEvent * event, gfs_output_location_event1153,31606
static void gfs_output_location_class_init (GfsOutputClass * klass)gfs_output_location_class_init1214,33536
static void gfs_output_location_init (GfsOutputLocation * object)gfs_output_location_init1222,33862
GfsOutputClass * gfs_output_location_class (void)gfs_output_location_class1229,34066
static gboolean gfs_output_particle_event (GfsEvent * event, gfs_output_particle_event1257,34751
static void gfs_output_particle_class_init (GfsOutputClass * klass)gfs_output_particle_class_init1286,35646
GfsOutputClass * gfs_output_particle_class (void)gfs_output_particle_class1291,35781
static void output_simulation_destroy (GtsObject * object)output_simulation_destroy1319,36456
static void write_text (FttCell * cell, gpointer * data)write_text1330,36784
static gboolean output_simulation_event (GfsEvent * event, GfsSimulation * sim)output_simulation_event1354,37548
static void output_simulation_write (GtsObject * o, FILE * fp)output_simulation_write1452,40399
static void output_simulation_read (GtsObject ** o, GtsFile * fp)output_simulation_read1485,41409
static void gfs_output_simulation_class_init (GfsEventClass * klass)gfs_output_simulation_class_init1561,43483
static void gfs_output_simulation_init (GfsOutputSimulation * object)gfs_output_simulation_init1569,43784
GfsOutputClass * gfs_output_simulation_class (void)gfs_output_simulation_class1579,44015
static gboolean output_boundaries_event (GfsEvent * event, GfsSimulation * sim)output_boundaries_event1607,44687
static void gfs_output_boundaries_class_init (GfsEventClass * klass)gfs_output_boundaries_class_init1621,45110
GfsOutputClass * gfs_output_boundaries_class (void)gfs_output_boundaries_class1626,45226
static void gfs_output_scalar_destroy (GtsObject * o)gfs_output_scalar_destroy1654,45895
static void gfs_output_scalar_read (GtsObject ** o, GtsFile * fp)gfs_output_scalar_read1670,46361
static void gfs_output_scalar_write (GtsObject * o, FILE * fp)gfs_output_scalar_write1813,50425
static void update_v (FttCell * cell, GfsOutputScalar * output)update_v1841,51253
static gboolean cell_condition (FttCell * cell, gpointer condition)cell_condition1846,51392
static void output_scalar_traverse (GfsOutputScalar * output, output_scalar_traverse1851,51512
static gboolean gfs_output_scalar_event (GfsEvent * event,gfs_output_scalar_event1869,52062
static void gfs_output_scalar_post_event (GfsEvent * event,gfs_output_scalar_post_event1906,53398
static void gfs_output_scalar_class_init (GfsOutputClass * klass)gfs_output_scalar_class_init1919,53798
static void gfs_output_scalar_init (GfsOutputScalar * object)gfs_output_scalar_init1928,54184
GfsOutputClass * gfs_output_scalar_class (void)gfs_output_scalar_class1938,54452
static gboolean gfs_output_scalar_norm_event (GfsEvent * event, gfs_output_scalar_norm_event1966,55131
static void gfs_output_scalar_norm_class_init (GfsOutputClass * klass)gfs_output_scalar_norm_class_init1988,55898
GfsOutputClass * gfs_output_scalar_norm_class (void)gfs_output_scalar_norm_class1993,56039
static gboolean gfs_output_scalar_stats_event (GfsEvent * event, gfs_output_scalar_stats_event2021,56745
static void gfs_output_scalar_stats_class_init (GfsOutputClass * klass)gfs_output_scalar_stats_class_init2050,57736
GfsOutputClass * gfs_output_scalar_stats_class (void)gfs_output_scalar_stats_class2055,57879
  GfsVariable * v;v2084,58595
  GfsFunction * w;w2085,58614
  gdouble sum;sum2086,58633
} SumData;SumData2087,58648
static void add (FttCell * cell, SumData * s)add2089,58660
static gboolean gfs_output_scalar_sum_event (GfsEvent * event, gfs_output_scalar_sum_event2095,58846
static void gfs_output_scalar_sum_class_init (GfsOutputClass * klass)gfs_output_scalar_sum_class_init2125,59853
GfsOutputClass * gfs_output_scalar_sum_class (void)gfs_output_scalar_sum_class2130,59992
static void gfs_output_scalar_maxima_destroy (GtsObject * o)gfs_output_scalar_maxima_destroy2158,60645
static void gfs_output_scalar_maxima_read (GtsObject ** o, GtsFile * fp)gfs_output_scalar_maxima_read2168,60886
static void gfs_output_scalar_maxima_write (GtsObject * o, FILE * fp)gfs_output_scalar_maxima_write2189,61405
static void maxima (FttCell * cell, GfsOutputScalarMaxima * m)maxima2195,61625
static gboolean gfs_output_scalar_maxima_event (GfsEvent * event, gfs_output_scalar_maxima_event2214,62045
static void gfs_output_scalar_maxima_class_init (GfsOutputClass * klass)gfs_output_scalar_maxima_class_init2242,62919
GfsOutputClass * gfs_output_scalar_maxima_class (void)gfs_output_scalar_maxima_class2250,63270
static void gfs_output_scalar_histogram_destroy (GtsObject * o)gfs_output_scalar_histogram_destroy2278,63972
static void gfs_output_scalar_histogram_read (GtsObject ** o, GtsFile * fp)gfs_output_scalar_histogram_read2294,64414
static void gfs_output_scalar_histogram_write (GtsObject * o, FILE * fp)gfs_output_scalar_histogram_write2377,66720
static void update_histogram (FttCell * cell, GfsOutputScalar * h)update_histogram2395,67203
static gboolean gfs_output_scalar_histogram_event (GfsEvent * event,gfs_output_scalar_histogram_event2417,67736
static void gfs_output_scalar_histogram_class_init (GfsOutputClass * klass)gfs_output_scalar_histogram_class_init2465,69306
static void gfs_output_scalar_histogram_init (GfsOutputScalarHistogram * object)gfs_output_scalar_histogram_init2473,69672
GfsOutputClass * gfs_output_scalar_histogram_class (void)gfs_output_scalar_histogram_class2483,69948
static void gfs_output_droplet_sums_destroy (GtsObject * object)gfs_output_droplet_sums_destroy2511,70706
static void gfs_output_droplet_sums_read (GtsObject ** o, GtsFile * fp)gfs_output_droplet_sums_read2521,71033
static void gfs_output_droplet_sums_write (GtsObject * o, FILE * fp)gfs_output_droplet_sums_write2542,71705
  double v, f;v2554,72030
  double v, f;f2554,72030
} VolumePair;VolumePair2555,72045
  GfsVariable * s, * c, * tag;s2558,72077
  GfsVariable * s, * c, * tag;c2558,72077
  GfsVariable * s, * c, * tag;tag2558,72077
  VolumePair * v;v2559,72108
  guint n;n2560,72126
  GfsFunction * fc;fc2561,72137
} DropSumsPar;DropSumsPar2562,72157
static void droplet_sums (FttCell * cell, DropSumsPar * p)droplet_sums2564,72173
static void compute_c (FttCell * cell, DropSumsPar * p)compute_c2573,72407
static int volume_sort (const void * p1, const void * p2)volume_sort2578,72529
static gboolean gfs_output_droplet_sums_event (GfsEvent * event, GfsSimulation * sim)gfs_output_droplet_sums_event2585,72699
static void gfs_output_droplet_sums_class_init (GfsOutputClass * klass)gfs_output_droplet_sums_class_init2638,74594
static void gfs_output_droplet_sums_init (GfsOutputDropletSums * d)gfs_output_droplet_sums_init2646,74940
GfsOutputClass * gfs_output_droplet_sums_class (void)gfs_output_droplet_sums_class2651,75068
static void output_error_norm_destroy (GtsObject * o)output_error_norm_destroy2679,75806
static void output_error_norm_read (GtsObject ** o, GtsFile * fp)output_error_norm_read2687,76082
static void output_error_norm_write (GtsObject * o, FILE * fp)output_error_norm_write2794,79008
static void reference_solution (FttCell * cell, GfsOutputScalar * o)reference_solution2812,79576
static void substract (FttCell * cell, GfsOutputScalar * o)substract2818,79763
static void compute_error (FttCell * cell, GfsOutputScalar * o)compute_error2824,79956
static void remove_bias (FttCell * cell, gpointer * data)remove_bias2830,80162
static gboolean gfs_output_error_norm_event (GfsEvent * event, gfs_output_error_norm_event2837,80319
static void gfs_output_error_norm_class_init (GfsOutputClass * klass)gfs_output_error_norm_class_init2921,83430
static void output_error_norm_init (GfsOutputErrorNorm * e)output_error_norm_init2929,83754
GfsOutputClass * gfs_output_error_norm_class (void)gfs_output_error_norm_class2935,83929
static void compute_correlation (FttCell * cell, gpointer * data)compute_correlation2963,84603
static gboolean gfs_output_correlation_event (GfsEvent * event, gfs_output_correlation_event2978,85004
static void gfs_output_correlation_class_init (GfsOutputClass * klass)gfs_output_correlation_class_init3034,86894
GfsOutputClass * gfs_output_correlation_class (void)gfs_output_correlation_class3039,87035
static gboolean gfs_output_squares_event (GfsEvent * event, GfsSimulation * sim)gfs_output_squares_event3067,87698
static void gfs_output_squares_class_init (GfsOutputClass * klass)gfs_output_squares_class_init3083,88212
GfsOutputClass * gfs_output_squares_class (void)gfs_output_squares_class3088,88345
static void gfs_output_streamline_read (GtsObject ** o, GtsFile * fp)gfs_output_streamline_read3116,88980
static void gfs_output_streamline_write (GtsObject * o, FILE * fp)gfs_output_streamline_write3148,89882
static gboolean gfs_output_streamline_event (GfsEvent * event, gfs_output_streamline_event3158,90236
static void gfs_output_streamline_class_init (GfsOutputClass * klass)gfs_output_streamline_class_init3180,90926
GfsOutputClass * gfs_output_streamline_class (void)gfs_output_streamline_class3187,91193
static void gfs_output_ppm_read (GtsObject ** o, GtsFile * fp)gfs_output_ppm_read3215,91862
static gboolean gfs_output_ppm_event (GfsEvent * event, GfsSimulation * sim)gfs_output_ppm_event3232,92352
static void gfs_output_ppm_class_init (GfsOutputClass * klass)gfs_output_ppm_class_init3254,93048
GfsOutputClass * gfs_output_ppm_class (void)gfs_output_ppm_class3260,93229
static gboolean gfs_output_grd_event (GfsEvent * event, GfsSimulation * sim)gfs_output_grd_event3288,93863
static void gfs_output_grd_class_init (GfsOutputClass * klass)gfs_output_grd_class_init3305,94363
GfsOutputClass * gfs_output_grd_class (void)gfs_output_grd_class3310,94488
static void output_object_read (GtsObject ** o, GtsFile * fp)output_object_read3338,95139
static void output_object_write (GtsObject * o, FILE * fp)output_object_write3356,95699
static gboolean output_object_event (GfsEvent * event, GfsSimulation * sim)output_object_event3365,95961
static void gfs_output_object_class_init (GfsOutputClass * klass)gfs_output_object_class_init3379,96320
GfsOutputClass * gfs_output_object_class (void)gfs_output_object_class3386,96558

isocube.h,602
static guint edge1[12][2] = {edge122,916
static FttVector vertex[8] = {vertex27,1050
static guint face[6][4][2] = {face31,1177
static guint face_v[6][4] = {face_v39,1460
static FttVector edge[12][2] = {edge47,1634
static guint connectv[12][2][4] = {connectv52,1966
static FttVector cvertex[8] = {cvertex66,2487
# define NCORNERS NCORNERS72,2649
static FttDirection corner[4][2] = {corner73,2669
# define NCORNERS NCORNERS77,2817
static guint connect[12][2][4] = {connect81,3032
static FttDirection corner[8][3] = {corner95,3768
#define SLIGHTLY_LARGER SLIGHTLY_LARGER107,4108

fluid.h,3479
#define __FLUID_H____FLUID_H__21,853
typedef struct _GfsVariable               GfsVariable;GfsVariable31,968
typedef struct _GfsDerivedVariable        GfsDerivedVariable;GfsDerivedVariable32,1023
typedef struct _GfsDomain                 GfsDomain;GfsDomain33,1085
typedef struct _GfsStateVector     GfsStateVector;GfsStateVector35,1139
typedef struct _GfsSolidVector     GfsSolidVector;GfsSolidVector36,1190
typedef struct _GfsFaceStateVector GfsFaceStateVector;GfsFaceStateVector37,1241
struct _GfsFaceStateVector {_GfsFaceStateVector39,1297
  gdouble un;un40,1326
  gdouble v;v41,1340
struct _GfsStateVector {_GfsStateVector44,1357
  GfsFaceStateVector f[FTT_NEIGHBORS];f46,1415
  GfsSolidVector * solid;solid49,1480
  gdouble place_holder;place_holder51,1507
struct _GfsSolidVector {_GfsSolidVector54,1535
  gdouble s[FTT_NEIGHBORS];s55,1560
  gdouble a, fv;a56,1588
  gdouble a, fv;fv56,1588
  FttCell * merged;merged57,1605
  FttVector cm, ca, v;cm58,1625
  FttVector cm, ca, v;ca58,1625
  FttVector cm, ca, v;v58,1625
  GFS_FLAG_USED =              1 <<  FTT_FLAG_USER,GFS_FLAG_USED62,1667
  GFS_FLAG_BOUNDARY          = 1 << (FTT_FLAG_USER + 1),GFS_FLAG_BOUNDARY63,1719
  GFS_FLAG_DIRICHLET         = 1 << (FTT_FLAG_USER + 2),GFS_FLAG_DIRICHLET64,1776
  GFS_FLAG_GRADIENT_BOUNDARY = 1 << (FTT_FLAG_USER + 3),GFS_FLAG_GRADIENT_BOUNDARY65,1833
  GFS_FLAG_PERMANENT         = 1 << (FTT_FLAG_USER + 4),GFS_FLAG_PERMANENT66,1890
  GFS_FLAG_THIN              = 1 << (FTT_FLAG_USER + 5),GFS_FLAG_THIN67,1947
  GFS_FLAG_USER =                    FTT_FLAG_USER + 6 /* user flags start here */GFS_FLAG_USER68,2004
} GfsFlags;GfsFlags69,2087
#define GFS_STATE(GFS_STATE71,2100
#define GFS_VALUEI(GFS_VALUEI72,2172
#define GFS_FACE_NORMAL_VELOCITY(GFS_FACE_NORMAL_VELOCITY74,2252
#define GFS_FACE_NORMAL_VELOCITY_LEFT(GFS_FACE_NORMAL_VELOCITY_LEFT76,2332
#define GFS_FACE_NORMAL_VELOCITY_RIGHT(GFS_FACE_NORMAL_VELOCITY_RIGHT78,2417
#define GFS_FACE_FRACTION(GFS_FACE_FRACTION81,2533
#define GFS_FACE_FRACTION_LEFT(GFS_FACE_FRACTION_LEFT83,2672
#define GFS_FACE_FRACTION_RIGHT(GFS_FACE_FRACTION_RIGHT84,2729
#define GFS_IS_FLUID(GFS_IS_FLUID87,2894
#define GFS_IS_MIXED(GFS_IS_MIXED89,3012
#define GFS_CELL_IS_BOUNDARY(GFS_CELL_IS_BOUNDARY91,3130
#define GFS_CELL_IS_PERMANENT(GFS_CELL_IS_PERMANENT92,3208
#define GFS_CELL_IS_GRADIENT_BOUNDARY(GFS_CELL_IS_GRADIENT_BOUNDARY93,3288
typedef gdouble    (* GfsCenterGradient)            (FttCell * cell,GfsCenterGradient116,4438
typedef struct _GfsGradient GfsGradient;GfsGradient147,5632
struct _GfsGradient {_GfsGradient149,5674
  gdouble a, b;a150,5696
  gdouble a, b;b150,5696
typedef struct _GfsNorm GfsNorm;GfsNorm214,8180
struct _GfsNorm {_GfsNorm216,8214
  gdouble bias, first, second, infty, w;bias217,8232
  gdouble bias, first, second, infty, w;first217,8232
  gdouble bias, first, second, infty, w;second217,8232
  gdouble bias, first, second, infty, w;infty217,8232
  gdouble bias, first, second, infty, w;w217,8232
  FttCell * c[7];c265,10101
  gdouble w[7];w266,10119
  guint n;  n271,10203
} GfsInterpolator;GfsInterpolator272,10216
typedef struct _GfsLinearProblem GfsLinearProblem;GfsLinearProblem286,10622
typedef struct _GfsStencil GfsStencil;GfsStencil287,10673
struct _GfsStencil {_GfsStencil289,10713
  GArray * coeff; /* doubles */coeff290,10734
  GArray * id;    /* ints */id291,10766

init.h,112
#define __INIT_H____INIT_H__21,852
#define gfs_restore_fpe_for_function(gfs_restore_fpe_for_function37,1283

tension.h,2021
#define __TENSION_H____TENSION_H__21,855
typedef struct _GfsSourceTensionGeneric         GfsSourceTensionGeneric;GfsSourceTensionGeneric31,996
struct _GfsSourceTensionGeneric {_GfsSourceTensionGeneric33,1070
  GfsSourceVelocity parent;parent35,1122
  GfsVariable * c;c38,1170
  GfsFunction * sigma;sigma39,1189
#define GFS_SOURCE_TENSION_GENERIC(GFS_SOURCE_TENSION_GENERIC42,1216
#define GFS_IS_SOURCE_TENSION_GENERIC(GFS_IS_SOURCE_TENSION_GENERIC45,1381
typedef struct _GfsSourceTensionCSS         GfsSourceTensionCSS;GfsSourceTensionCSS52,1612
struct _GfsSourceTensionCSS {_GfsSourceTensionCSS54,1678
  GfsSourceTensionGeneric parent;parent56,1726
  GfsVariable * g[3];g57,1760
  GfsVariable * t[FTT_DIMENSION];t60,1802
#define GFS_SOURCE_TENSION_CSS(GFS_SOURCE_TENSION_CSS63,1840
#define GFS_IS_SOURCE_TENSION_CSS(GFS_IS_SOURCE_TENSION_CSS66,1993
typedef struct _GfsSourceTension         GfsSourceTension;GfsSourceTension73,2209
struct _GfsSourceTension {_GfsSourceTension75,2269
  GfsSourceTensionGeneric parent;parent77,2314
  GfsVariable * k;k80,2368
#define GFS_SOURCE_TENSION(GFS_SOURCE_TENSION83,2391
#define GFS_IS_SOURCE_TENSION(GFS_IS_SOURCE_TENSION86,2533
typedef struct _GfsVariableCurvature                GfsVariableCurvature;GfsVariableCurvature96,2885
struct _GfsVariableCurvature {_GfsVariableCurvature98,2960
  GfsVariable parent;parent100,3009
  GfsVariable * f, * kmax;f103,3049
  GfsVariable * f, * kmax;kmax103,3049
#define GFS_VARIABLE_CURVATURE(GFS_VARIABLE_CURVATURE106,3080
#define GFS_IS_VARIABLE_CURVATURE(GFS_IS_VARIABLE_CURVATURE109,3238
typedef struct _GfsVariablePosition                GfsVariablePosition;GfsVariablePosition116,3456
struct _GfsVariablePosition {_GfsVariablePosition118,3529
  GfsVariableCurvature parent;parent120,3577
  FttComponent c;c123,3626
  gdouble ref;ref124,3644
#define GFS_VARIABLE_POSITION(GFS_VARIABLE_POSITION127,3663
#define GFS_IS_VARIABLE_POSITION(GFS_IS_VARIABLE_POSITION130,3818

event.h,7722
#define __EVENT_H____EVENT_H__21,853
typedef struct _GfsEvent                GfsEvent;GfsEvent29,950
typedef struct _GfsEventClass           GfsEventClass;GfsEventClass30,1000
struct _GfsEvent {_GfsEvent32,1056
  GtsSListContainee parent;parent33,1075
  gdouble t, start, end, step;t35,1104
  gdouble t, start, end, step;start35,1104
  gdouble t, start, end, step;end35,1104
  gdouble t, start, end, step;step35,1104
  guint i, istart, iend, istep;i36,1135
  guint i, istart, iend, istep;istart36,1135
  guint i, istart, iend, istep;iend36,1135
  guint i, istart, iend, istep;istep36,1135
  guint n;n38,1170
  gboolean end_event, realised, redo;end_event39,1181
  gboolean end_event, realised, redo;realised39,1181
  gboolean end_event, realised, redo;redo39,1181
  gchar * name;name40,1219
typedef struct _GfsSimulation           GfsSimulation;GfsSimulation43,1239
struct _GfsEventClass {_GfsEventClass45,1295
  GtsSListContaineeClass parent_class;parent_class46,1319
  gboolean (* event)      (GfsEvent * event, GfsSimulation * sim);event48,1359
  void     (* post_event) (GfsEvent * event, GfsSimulation * sim);post_event49,1426
  void     (* event_half) (GfsEvent * event, GfsSimulation * sim);event_half50,1493
#define GFS_EVENT(GFS_EVENT55,1589
#define GFS_EVENT_CLASS(GFS_EVENT_CLASS58,1709
#define GFS_IS_EVENT(GFS_IS_EVENT61,1827
#define         gfs_event_is_repetitive(gfs_event_is_repetitive83,2691
typedef struct _GfsEvent      GfsGenericInit;GfsGenericInit87,2816
typedef struct _GfsEventClass GfsGenericInitClass;GfsGenericInitClass88,2862
#define GFS_IS_GENERIC_INIT(GFS_IS_GENERIC_INIT90,2914
typedef struct _GfsInit         GfsInit;GfsInit97,3103
struct _GfsInit {_GfsInit99,3145
  GfsGenericInit parent;parent101,3181
  GSList * f;f102,3206
#define GFS_INIT(GFS_INIT105,3224
#define GFS_IS_INIT(GFS_IS_INIT108,3337
typedef struct _GfsInitMask         GfsInitMask;GfsInitMask115,3505
struct _GfsInitMask {_GfsInitMask117,3555
  GfsGenericInit parent;parent119,3595
  GSList * masked_boxes;masked_boxes120,3620
  GfsFunction * mask;mask123,3663
#define GFS_INIT_MASK(GFS_INIT_MASK126,3689
#define GFS_IS_INIT_MASK(GFS_IS_INIT_MASK129,3816
typedef struct _GfsInitVorticity         GfsInitVorticity;GfsInitVorticity140,4094
struct _GfsInitVorticity {_GfsInitVorticity142,4154
  GfsGenericInit parent;parent144,4199
  GfsVariable * vort, ** u;vort145,4224
  GfsVariable * vort, ** u;u145,4224
  GfsVariable * stream;stream147,4263
  GfsVariable * stream[3];stream149,4293
  GfsFunction * f;f153,4345
  GfsFunction * fv[3];fv155,4376
#define GFS_INIT_VORTICITY(GFS_INIT_VORTICITY159,4410
#define GFS_IS_INIT_VORTICITY(GFS_IS_INIT_VORTICITY162,4552
typedef struct _GfsEventSum         GfsEventSum;GfsEventSum169,4750
struct _GfsEventSum {_GfsEventSum171,4800
  GfsEvent parent;parent172,4822
  GfsFunction * v;v174,4842
  GfsVariable * sv;sv175,4861
  FttCellTraverseFunc sum;sum176,4881
  gdouble last, dt;last177,4908
  gdouble last, dt;dt177,4908
#define GFS_EVENT_SUM(GFS_EVENT_SUM180,4932
#define GFS_IS_EVENT_SUM(GFS_IS_EVENT_SUM183,5059
typedef struct _GfsEventSumDirection         GfsEventSumDirection;GfsEventSumDirection190,5245
struct _GfsEventSumDirection {_GfsEventSumDirection192,5313
  GfsEventSum parent;parent193,5344
  FttDirection d;d195,5367
#define GFS_EVENT_SUM_DIRECTION(GFS_EVENT_SUM_DIRECTION198,5389
#define GFS_IS_EVENT_SUM_DIRECTION(GFS_IS_EVENT_SUM_DIRECTION201,5545
typedef struct _GfsEventHarmonic         GfsEventHarmonic;GfsEventHarmonic208,5757
struct _GfsEventHarmonic {_GfsEventHarmonic210,5817
  GfsEvent parent;parent211,5844
  GArray * omega;omega213,5864
  GfsVariable * v, * z, * e, ** A, ** B;v214,5882
  GfsVariable * v, * z, * e, ** A, ** B;z214,5882
  GfsVariable * v, * z, * e, ** A, ** B;e214,5882
  GfsVariable * v, * z, * e, ** A, ** B;A214,5882
  GfsVariable * v, * z, * e, ** A, ** B;B214,5882
  gdouble * vsin, * vcos, ** M, ** iM, ** Mn, * x, * a;vsin215,5923
  gdouble * vsin, * vcos, ** M, ** iM, ** Mn, * x, * a;vcos215,5923
  gdouble * vsin, * vcos, ** M, ** iM, ** Mn, * x, * a;M215,5923
  gdouble * vsin, * vcos, ** M, ** iM, ** Mn, * x, * a;iM215,5923
  gdouble * vsin, * vcos, ** M, ** iM, ** Mn, * x, * a;Mn215,5923
  gdouble * vsin, * vcos, ** M, ** iM, ** Mn, * x, * a;x215,5923
  gdouble * vsin, * vcos, ** M, ** iM, ** Mn, * x, * a;a215,5923
  gchar * Aname, * Bname;Aname216,5979
  gchar * Aname, * Bname;Bname216,5979
  gboolean invertible;invertible217,6005
#define GFS_EVENT_HARMONIC(GFS_EVENT_HARMONIC220,6032
#define GFS_IS_EVENT_HARMONIC(GFS_IS_EVENT_HARMONIC223,6174
typedef struct _GfsEventStop         GfsEventStop;GfsEventStop230,6367
struct _GfsEventStop {_GfsEventStop232,6419
  GfsEvent parent;parent233,6442
  GfsVariable * v, * oldv, * diff;v235,6462
  GfsVariable * v, * oldv, * diff;oldv235,6462
  GfsVariable * v, * oldv, * diff;diff235,6462
  gdouble last, max;last236,6497
  gdouble last, max;max236,6497
  gboolean relative;relative237,6518
#define GFS_EVENT_STOP(GFS_EVENT_STOP240,6543
#define GFS_IS_EVENT_STOP(GFS_IS_EVENT_STOP243,6673
typedef struct _GfsEventScript         GfsEventScript;GfsEventScript254,6948
struct _GfsEventScript {_GfsEventScript256,7004
  GfsEvent parent;parent257,7029
  gchar * script;script259,7049
#define GFS_EVENT_SCRIPT(GFS_EVENT_SCRIPT262,7071
#define GFS_IS_EVENT_SCRIPT(GFS_IS_EVENT_SCRIPT265,7207
#define GFS_EVENT_SCRIPT_STOP GFS_EVENT_SCRIPT_STOP267,7316
typedef struct _GfsInitFraction         GfsInitFraction;GfsInitFraction273,7441
struct _GfsInitFraction {_GfsInitFraction275,7499
  GfsGenericInit parent;parent277,7543
  GfsVariable * c;c279,7569
  GfsGenericSurface * surface;surface280,7588
typedef struct _GfsInitFractionClass    GfsInitFractionClass;GfsInitFractionClass283,7623
struct _GfsInitFractionClass {_GfsInitFractionClass285,7686
  GfsGenericInitClass parent_class;parent_class287,7735
#define GFS_INIT_FRACTION(GFS_INIT_FRACTION292,7793
#define GFS_INIT_FRACTION_CLASS(GFS_INIT_FRACTION_CLASS295,7932
#define GFS_IS_INIT_FRACTION(GFS_IS_INIT_FRACTION298,8069
typedef struct _GfsRemoveDroplets         GfsRemoveDroplets;GfsRemoveDroplets305,8271
struct _GfsRemoveDroplets {_GfsRemoveDroplets307,8333
  GfsEvent parent;parent309,8379
  GfsVariable * v;v310,8398
  GfsFunction * fc;fc313,8435
  GfsVariable * c;c314,8455
  gint min;min315,8474
  gdouble val;val316,8486
#define GFS_REMOVE_DROPLETS(GFS_REMOVE_DROPLETS319,8505
#define GFS_IS_REMOVE_DROPLETS(GFS_IS_REMOVE_DROPLETS322,8650
typedef struct _GfsRemovePonds         GfsRemovePonds;GfsRemovePonds329,8848
struct _GfsRemovePonds {_GfsRemovePonds331,8904
  GfsGenericInit parent;parent333,8947
  gint min;min336,8990
#define GFS_REMOVE_PONDS(GFS_REMOVE_PONDS339,9006
#define GFS_IS_REMOVE_PONDS(GFS_IS_REMOVE_PONDS342,9142
typedef struct _GfsEventFilter         GfsEventFilter;GfsEventFilter349,9331
struct _GfsEventFilter {_GfsEventFilter351,9387
  GfsEvent parent;parent353,9430
  GfsVariable * tmp;tmp354,9449
  GfsVariable * v;v357,9488
  gdouble scale;scale358,9507
#define GFS_EVENT_FILTER(GFS_EVENT_FILTER361,9528
#define GFS_IS_EVENT_FILTER(GFS_IS_EVENT_FILTER364,9664
typedef struct _GfsEventList         GfsEventList;GfsEventList371,9851
struct _GfsEventList {_GfsEventList373,9903
  GfsEvent parent;parent375,9944
  GtsObjectClass * klass;klass378,9981
  GtsSListContainer * list;list379,10007
#define GFS_EVENT_LIST(GFS_EVENT_LIST382,10039
#define GFS_IS_EVENT_LIST(GFS_IS_EVENT_LIST385,10169

output.h,6230
#define __OUTPUT_H____OUTPUT_H__21,854
typedef struct _GfsOutput         GfsOutput;GfsOutput31,979
typedef struct _GfsOutputClass    GfsOutputClass;GfsOutputClass32,1024
typedef struct _GfsOutputFile     GfsOutputFile;GfsOutputFile33,1074
struct _GfsOutput {_GfsOutput35,1124
  GfsEvent parent;parent36,1144
  GfsOutputFile * file;file38,1164
  gchar * format;format39,1188
  GSList * formats;formats40,1206
  gboolean dynamic, parallel, first_call;dynamic41,1226
  gboolean dynamic, parallel, first_call;parallel41,1226
  gboolean dynamic, parallel, first_call;first_call41,1226
struct _GfsOutputClass {_GfsOutputClass44,1272
  GfsEventClass parent_class;parent_class45,1297
#define GFS_OUTPUT(GFS_OUTPUT48,1331
#define GFS_OUTPUT_CLASS(GFS_OUTPUT_CLASS51,1454
#define GFS_IS_OUTPUT(GFS_IS_OUTPUT54,1575
struct _GfsOutputFile {_GfsOutputFile60,1781
  guint refcount;refcount61,1805
  gchar * name;name62,1823
  FILE * fp;fp63,1839
  gboolean is_pipe;is_pipe64,1852
typedef struct _GfsOutputSolidForce         GfsOutputSolidForce;GfsOutputSolidForce106,2828
struct _GfsOutputSolidForce {_GfsOutputSolidForce108,2894
  GfsOutput parent;parent110,2942
  GfsFunction * weight;weight113,2980
#define GFS_OUTPUT_SOLID_FORCE(GFS_OUTPUT_SOLID_FORCE116,3008
typedef struct _GfsOutputLocation         GfsOutputLocation;GfsOutputLocation124,3250
struct _GfsOutputLocation {_GfsOutputLocation126,3312
  GfsOutput parent;parent128,3358
  GArray * p;p131,3396
  gchar * precision, * label;precision132,3410
  gchar * precision, * label;label132,3410
  gboolean interpolate;interpolate133,3440
#define GFS_OUTPUT_LOCATION(GFS_OUTPUT_LOCATION136,3468
#define GFS_IS_OUTPUT_LOCATION(GFS_IS_OUTPUT_LOCATION139,3613
typedef struct _GfsOutputSimulation         GfsOutputSimulation;GfsOutputSimulation146,3817
typedef enum   { GFS, GFS147,3882
		 GFS_TEXT, GFS_TEXT148,3905
		 GFS_VTK, GFS_VTK149,3919
		 GFS_TECPLOT }              GfsOutputSimulationFormat;GFS_TECPLOT150,3932
		 GFS_TECPLOT }              GfsOutputSimulationFormat;GfsOutputSimulationFormat150,3932
struct _GfsOutputSimulation {_GfsOutputSimulation152,3990
  GfsOutput parent;parent153,4020
  gint max_depth;max_depth155,4041
  GSList * var;var156,4059
  gboolean binary, solid;binary157,4075
  gboolean binary, solid;solid157,4075
  gchar * precision;precision158,4101
  GfsOutputSimulationFormat format;format159,4122
#define GFS_OUTPUT_SIMULATION(GFS_OUTPUT_SIMULATION162,4162
#define GFS_OUTPUT_SIMULATION_CLASS(GFS_OUTPUT_SIMULATION_CLASS165,4305
#define GFS_IS_OUTPUT_SIMULATION(GFS_IS_OUTPUT_SIMULATION168,4450
typedef struct _GfsOutputScalar         GfsOutputScalar;GfsOutputScalar179,4754
struct _GfsOutputScalar {_GfsOutputScalar181,4812
  GfsOutput parent;parent183,4856
  gboolean autoscale;autoscale184,4876
  GfsFunction * f;f185,4898
  GfsVariable * v;v188,4937
  gchar * name;name189,4956
  gdouble min, max;min190,4972
  gdouble min, max;max190,4972
  gint maxlevel;maxlevel191,4992
  GfsFunction * condition, * w;condition192,5009
  GfsFunction * condition, * w;w192,5009
  gchar * format;format193,5041
#define GFS_OUTPUT_SCALAR(GFS_OUTPUT_SCALAR196,5063
#define GFS_IS_OUTPUT_SCALAR(GFS_IS_OUTPUT_SCALAR199,5202
typedef struct _GfsOutputScalarMaxima         GfsOutputScalarMaxima;GfsOutputScalarMaxima218,5675
struct _GfsOutputScalarMaxima {_GfsOutputScalarMaxima220,5745
  GfsOutputScalar parent;parent222,5795
  guint N;N225,5841
  gdouble * m[4];m226,5852
#define GFS_OUTPUT_SCALAR_MAXIMA(GFS_OUTPUT_SCALAR_MAXIMA229,5874
#define GFS_IS_OUTPUT_SCALAR_MAXIMA(GFS_IS_OUTPUT_SCALAR_MAXIMA232,6033
typedef struct _GfsOutputScalarHistogram         GfsOutputScalarHistogram;GfsOutputScalarHistogram239,6257
struct _GfsOutputScalarHistogram {_GfsOutputScalarHistogram241,6333
  GfsOutputScalar parent;parent243,6386
  gdouble * x, * y, * w, W;x246,6432
  gdouble * x, * y, * w, W;y246,6432
  gdouble * x, * y, * w, W;w246,6432
  gdouble * x, * y, * w, W;W246,6432
  GfsFunction * wf, * yf;wf247,6460
  GfsFunction * wf, * yf;yf247,6460
  gdouble last, dt;last248,6486
  gdouble last, dt;dt248,6486
  guint n;n249,6506
#define GFS_OUTPUT_SCALAR_HISTOGRAM(GFS_OUTPUT_SCALAR_HISTOGRAM252,6521
#define GFS_IS_OUTPUT_SCALAR_HISTOGRAM(GFS_IS_OUTPUT_SCALAR_HISTOGRAM255,6689
typedef struct _GfsOutputDropletSums         GfsOutputDropletSums;GfsOutputDropletSums262,6918
struct _GfsOutputDropletSums {_GfsOutputDropletSums264,6986
  GfsOutputScalar parent;parent266,7035
  GfsFunction * c;c269,7079
  GfsVariable * tag;tag270,7098
#define GFS_OUTPUT_DROPLET_SUMS(GFS_OUTPUT_DROPLET_SUMS273,7123
#define GFS_IS_OUTPUT_DROPLET_SUMS(GFS_IS_OUTPUT_DROPLET_SUMS276,7279
typedef struct _GfsOutputErrorNorm        GfsOutputErrorNorm;GfsOutputErrorNorm283,7494
struct _GfsOutputErrorNorm {_GfsOutputErrorNorm285,7557
  GfsOutputScalar parent;parent287,7604
  GfsVariable * v;v288,7630
  GfsFunction * s;s291,7669
  gboolean unbiased, relative;unbiased292,7688
  gboolean unbiased, relative;relative292,7688
  GfsFunction * w;w293,7719
#define GFS_OUTPUT_ERROR_NORM(GFS_OUTPUT_ERROR_NORM296,7742
#define GFS_IS_OUTPUT_ERROR_NORM(GFS_IS_OUTPUT_ERROR_NORM299,7892
#define GFS_IS_OUTPUT_SQUARES(GFS_IS_OUTPUT_SQUARES310,8191
typedef struct _GfsOutputStreamline         GfsOutputStreamline;GfsOutputStreamline317,8392
struct _GfsOutputStreamline {_GfsOutputStreamline319,8458
  GfsOutputScalar parent;parent321,8506
  FttVector p;p324,8550
#define GFS_OUTPUT_STREAMLINE(GFS_OUTPUT_STREAMLINE327,8569
#define GFS_IS_OUTPUT_STREAMLINE(GFS_IS_OUTPUT_STREAMLINE330,8713
#define GFS_IS_OUTPUT_PARTICLE(GFS_IS_OUTPUT_PARTICLE337,8922
#define GFS_IS_OUTPUT_PPM(GFS_IS_OUTPUT_PPM344,9119
#define GFS_IS_OUTPUT_GRD(GFS_IS_OUTPUT_GRD351,9301
typedef struct _GfsOutputObject         GfsOutputObject;GfsOutputObject358,9486
struct _GfsOutputObject {_GfsOutputObject360,9544
  GfsOutput parent;parent362,9588
  GtsObject * object;object365,9626
#define GFS_OUTPUT_OBJECT(GFS_OUTPUT_OBJECT368,9652
#define GFS_IS_OUTPUT_OBJECT(GFS_IS_OUTPUT_OBJECT371,9791

myc2d.h,89
#define NOT_ZERO NOT_ZERO1,0
static void mycs(double c[3][3],double mxy[2])mycs6,197

myc.h,94
#define NOT_ZERO NOT_ZERO1,0
static void mycs(double c[3][3][3],double mxyz[3])mycs17,496

source.c,12251
gdouble gfs_variable_mac_source (GfsVariable * v, FttCell * cell)gfs_variable_mac_source38,1162
  GfsVariable * v, * sv;v62,1617
  GfsVariable * v, * sv;sv62,1617
  gdouble dt;dt63,1642
} SourcePar;SourcePar64,1656
static void add_sources (FttCell * cell, SourcePar * p)add_sources66,1670
void gfs_domain_variable_centered_sources (GfsDomain * domain, gfs_domain_variable_centered_sources90,2190
GfsVariable * gfs_domain_variable_fluxes (GfsDomain * domain,gfs_domain_variable_fluxes118,2835
static void source_generic_init (GfsSourceGeneric * s)source_generic_init149,3561
GfsSourceGenericClass * gfs_source_generic_class (void)gfs_source_generic_class154,3649
GfsSourceGeneric * gfs_source_find (GfsVariable * v, GfsSourceGenericClass * klass)gfs_source_find183,4381
static void source_scalar_write (GtsObject * o, FILE * fp)source_scalar_write209,4943
static void source_scalar_read (GtsObject ** o, GtsFile * fp)source_scalar_read225,5385
static void source_scalar_class_init (GfsSourceGenericClass * klass)source_scalar_class_init270,6783
GfsSourceGenericClass * gfs_source_scalar_class (void)gfs_source_scalar_class276,6970
static void source_velocity_read (GtsObject ** o, GtsFile * fp)source_velocity_read304,7642
static void source_velocity_class_init (GfsSourceGenericClass * klass)source_velocity_class_init330,8472
GfsSourceGenericClass * gfs_source_velocity_class (void)gfs_source_velocity_class335,8606
static void source_destroy (GtsObject * o)source_destroy363,9261
static gdouble source_face_value (GfsSourceGeneric * s, source_face_value377,9624
static gdouble source_vector_face_value (GfsSourceGeneric * s, source_vector_face_value384,9804
static gdouble source_value (GfsSourceGeneric * s, source_value397,10192
static gdouble source_vector_value (GfsSourceGeneric * s, source_vector_value404,10362
static void source_read (GtsObject ** o, GtsFile * fp)source_read411,10555
static void source_write (GtsObject * o, FILE * fp)source_write451,11866
static void source_class_init (GfsSourceGenericClass * klass)source_class_init471,12432
static void source_init (GfsSourceGeneric * s)source_init478,12651
GfsSourceGenericClass * gfs_source_class (void)gfs_source_class483,12754
static void source_control_destroy (GtsObject * o)source_control_destroy511,13404
static void source_control_read (GtsObject ** o, GtsFile * fp)source_control_read519,13656
static void source_control_write (GtsObject * o, FILE * fp)source_control_write530,14120
  GfsVariable * v;v537,14347
  gdouble s, sv;s538,14366
  gdouble s, sv;sv538,14366
} Sum;Sum539,14383
static void sum (FttCell * cell, Sum * s)sum541,14391
static gboolean source_control_event (GfsEvent * event, GfsSimulation * sim)source_control_event548,14546
static void source_control_class_init (GfsSourceGenericClass * klass)source_control_class_init564,15205
static gdouble source_control_value (GfsSourceGeneric * s, source_control_value572,15513
static void source_control_init (GfsSourceGeneric * s)source_control_init579,15666
GfsSourceGenericClass * gfs_source_control_class (void)gfs_source_control_class584,15785
static void source_control_field_destroy (GtsObject * o)source_control_field_destroy612,16516
static gdouble source_control_field_face_value (GfsSourceGeneric * s, source_control_field_face_value620,16776
static void source_control_field_read (GtsObject ** o, GtsFile * fp)source_control_field_read627,16988
static void source_control_field_write (GtsObject * o, FILE * fp)source_control_field_write661,17980
static void source_control_field_root (FttCell * root, GfsSourceControlField * f)source_control_field_root667,18238
  FttCell * root;root677,18630
  gdouble * corners;corners678,18648
  GfsVariable * v;v679,18669
} ExtraData;ExtraData680,18688
static void extrapolate (FttCell * cell, ExtraData * p)extrapolate682,18702
static void extrapolate_field (FttCell * root, GfsSourceControlField * f)extrapolate_field689,18893
static gboolean source_control_field_event (GfsEvent * event, GfsSimulation * sim)source_control_field_event699,19269
static void source_control_field_class_init (GfsSourceGenericClass * klass)source_control_field_class_init719,20171
static gdouble source_control_field_value (GfsSourceGeneric * s, source_control_field_value727,20509
static void source_control_field_init (GfsSourceGeneric * s)source_control_field_init734,20690
GfsSourceGenericClass * gfs_source_control_field_class (void)gfs_source_control_field_class741,20871
static void source_flux_destroy (GtsObject * o)source_flux_destroy769,21612
static void source_flux_read (GtsObject ** o, GtsFile * fp)source_flux_read779,21958
static void source_flux_write (GtsObject * o, FILE * fp)source_flux_write795,22577
static void add (FttCell * cell, GfsSourceFlux * s)add802,22836
static gboolean source_flux_event (GfsEvent * event, GfsSimulation * sim)source_flux_event808,23011
static void source_flux_class_init (GfsSourceGenericClass * klass)source_flux_class_init824,23583
static gdouble source_flux_value (GfsSourceGeneric * s, source_flux_value832,23876
static void source_flux_init (GfsSourceGeneric * s)source_flux_init839,24074
GfsSourceGenericClass * gfs_source_flux_class (void)gfs_source_flux_class844,24187
static void diffusion_destroy (GtsObject * o)diffusion_destroy872,24836
static void diffusion_read (GtsObject ** o, GtsFile * fp)diffusion_read883,25154
static void diffusion_write (GtsObject * o, FILE * fp)diffusion_write899,25520
static void update_mu (FttCell * cell, GfsDiffusion * d)update_mu906,25711
static gboolean diffusion_event (GfsEvent * event, GfsSimulation * sim)diffusion_event911,25836
static gdouble diffusion_face (GfsDiffusion * d, FttCellFace * face)diffusion_face933,26711
static gdouble diffusion_cell (GfsDiffusion * d, FttCell * cell)diffusion_cell941,27023
static gdouble diffusion_concentration_face (GfsDiffusion * d, FttCellFace * face)diffusion_concentration_face948,27235
static gdouble diffusion_concentration_cell (GfsDiffusion * d, FttCell * cell)diffusion_concentration_cell953,27423
static void diffusion_class_init (GfsDiffusionClass * klass)diffusion_class_init958,27569
static void diffusion_init (GfsDiffusion * d)diffusion_init966,27848
GfsDiffusionClass * gfs_diffusion_class (void)gfs_diffusion_class976,28095
gdouble gfs_diffusion_face (GfsDiffusion * d, FttCellFace * f)gfs_diffusion_face997,28616
gdouble gfs_diffusion_cell (GfsDiffusion * d, FttCell * cell)gfs_diffusion_cell1002,28713
static void source_diffusion_destroy (GtsObject * o)source_diffusion_destroy1014,28911
static GfsSourceDiffusion * previous_diffusion_source (GfsVariable * v,previous_diffusion_source1021,29118
static void source_diffusion_read (GtsObject ** o, GtsFile * fp)source_diffusion_read1036,29476
static void source_diffusion_write (GtsObject * o, FILE * fp)source_diffusion_write1082,31103
static gboolean source_diffusion_event (GfsEvent * event, GfsSimulation * sim)source_diffusion_event1093,31454
static gdouble source_diffusion_value (GfsSourceGeneric * s, source_diffusion_value1105,31835
static void source_diffusion_class_init (GfsSourceGenericClass * klass)source_diffusion_class_init1146,32937
static void source_diffusion_init (GfsSourceDiffusion * d)source_diffusion_init1155,33256
GfsSourceGenericClass * gfs_source_diffusion_class (void)gfs_source_diffusion_class1161,33467
gdouble gfs_source_diffusion_face (GfsSourceDiffusion * d, FttCellFace * f)gfs_source_diffusion_face1182,34055
gdouble gfs_source_diffusion_cell (GfsSourceDiffusion * d, FttCell * cell)gfs_source_diffusion_cell1190,34256
  GfsSourceGeneric * s;s1206,34614
  GfsVariable * v, * sv, * tv;v1207,34638
  GfsVariable * v, * sv, * tv;sv1207,34638
  GfsVariable * v, * sv, * tv;tv1207,34638
  gdouble dt;dt1208,34669
} FluxPar;FluxPar1209,34683
static void add_diffusion_explicit_flux (FttCell * cell, FluxPar * p)add_diffusion_explicit_flux1211,34695
static void source_diffusion_explicit_flux (GfsSourceGeneric * s, source_diffusion_explicit_flux1245,35634
static void gfs_source_diffusion_explicit_read (GtsObject ** o, GtsFile * fp)gfs_source_diffusion_explicit_read1257,36109
static void gfs_source_diffusion_explicit_write (GtsObject * o, FILE * fp)gfs_source_diffusion_explicit_write1266,36420
  GfsFunction * alpha;alpha1272,36611
  GfsSourceGeneric * s;s1273,36634
  gdouble dtmax;dtmax1274,36658
} StabilityParams;StabilityParams1275,36675
static void cell_diffusion_stability (FttCell * cell,cell_diffusion_stability1277,36695
static gdouble source_diffusion_stability (GfsSourceGeneric * s,source_diffusion_stability1307,37377
static void gfs_source_diffusion_explicit_class_init (GfsSourceGenericClass * klass)gfs_source_diffusion_explicit_class_init1323,37867
static void gfs_source_diffusion_explicit_init (GfsSourceGeneric * s)gfs_source_diffusion_explicit_init1330,38150
GfsSourceGenericClass * gfs_source_diffusion_explicit_class (void)gfs_source_diffusion_explicit_class1336,38312
static void compute_transverse (FttCell * cell, FluxPar * p)compute_transverse1364,39090
static void source_viscosity_read (GtsObject ** o, GtsFile * fp)source_viscosity_read1373,39381
static void source_viscosity_write (GtsObject * o, FILE * fp)source_viscosity_write1402,40318
static gdouble source_viscosity_non_diffusion_value (GfsSourceGeneric * s,source_viscosity_non_diffusion_value1412,40716
static gdouble source_viscosity_value (GfsSourceGeneric * s,source_viscosity_value1440,41580
static void source_viscosity_class_init (GfsSourceGenericClass * klass)source_viscosity_class_init1448,41804
static void source_viscosity_init (GfsSourceGeneric * s)source_viscosity_init1454,41999
GfsSourceGenericClass * gfs_source_viscosity_class (void)gfs_source_viscosity_class1461,42180
static gdouble source_viscosity_stability (GfsSourceGeneric * s,source_viscosity_stability1489,42866
static void source_viscosity_explicit_class_init (GfsSourceGenericClass * klass)source_viscosity_explicit_class_init1504,43324
static void add_viscosity_explicit_flux (FttCell * cell, FluxPar * p)add_viscosity_explicit_flux1514,43699
static void add_axisymmetric_term (FttCell * cell, FluxPar * p)add_axisymmetric_term1565,44986
static void source_viscosity_explicit_flux (GfsSourceGeneric * s, source_viscosity_explicit_flux1577,45448
static void source_viscosity_explicit_init (GfsSourceGeneric * s)source_viscosity_explicit_init1600,46273
GfsSourceGenericClass * gfs_source_viscosity_explicit_class (void)gfs_source_viscosity_explicit_class1607,46439
static void source_coriolis_destroy (GtsObject * o)source_coriolis_destroy1635,47247
static void gfs_source_coriolis_read (GtsObject ** o, GtsFile * fp)gfs_source_coriolis_read1652,47682
static void gfs_source_coriolis_write (GtsObject * o, FILE * fp)gfs_source_coriolis_write1718,49482
static void coriolis_drag_metric_coefficients (GfsSourceCoriolis * sc,coriolis_drag_metric_coefficients1730,49873
static gdouble gfs_source_coriolis_mac_value (GfsSourceGeneric * s,gfs_source_coriolis_mac_value1750,50537
static void save_coriolis (FttCell * cell, GfsSourceCoriolis * s)save_coriolis1782,51764
static gboolean gfs_source_coriolis_event (GfsEvent * event, GfsSimulation * sim)gfs_source_coriolis_event1806,52896
static gdouble gfs_source_coriolis_centered_value (GfsSourceGeneric * s,gfs_source_coriolis_centered_value1828,53739
static void gfs_source_coriolis_class_init (GfsSourceGenericClass * klass)gfs_source_coriolis_class_init1835,53937
static void gfs_source_coriolis_init (GfsSourceGeneric * s)gfs_source_coriolis_init1844,54267
GfsSourceGenericClass * gfs_source_coriolis_class (void)gfs_source_coriolis_class1853,54594
GfsSourceCoriolis * gfs_has_source_coriolis (GfsDomain * domain)gfs_has_source_coriolis1880,55327
static void implicit_coriolis_2D (FttCell * cell, GfsSourceCoriolis * s)implicit_coriolis_2D1901,55763
static void implicit_coriolis_3D (FttCell * cell, GfsSourceCoriolis * s)implicit_coriolis_3D1924,56516
void gfs_source_coriolis_implicit (GfsDomain * domain,gfs_source_coriolis_implicit1959,57629

utils.c,8895
typedef gint (*GTmpFileCallback) (gchar *, gint, gint);GTmpFileCallback44,1398
static gint get_tmp_file (gchar            *tmpl,get_tmp_file46,1455
static gint wrap_mkdir (gchar *tmpl,wrap_mkdir111,3139
gchar * g_mkdtemp (gchar * tmpl)g_mkdtemp118,3257
static gint wrap_mkfifo (gchar *tmpl,wrap_mkfifo127,3419
gchar * gfs_mkftemp (gchar * tmpl)gfs_mkftemp145,3850
gchar * gfs_template (void)gfs_template158,4066
void gfs_object_clone (GtsObject * object, GtsObject * clone)gfs_object_clone172,4418
gboolean gfs_char_in_string (char c, const char * s)gfs_char_in_string198,5121
gchar * gfs_file_statement (GtsFile * fp)gfs_file_statement219,5595
typedef gdouble (* GfsFunctionFunc) (const FttCell * cell,GfsFunctionFunc247,6272
typedef gdouble (* GfsFunctionDerivedFunc) (const FttCell * cell,GfsFunctionDerivedFunc252,6463
struct _GfsGlobal {_GfsGlobal262,6677
  GtsObject parent;parent264,6715
  gchar * s;s267,6753
  guint line;line268,6766
  gboolean appended;appended269,6780
static void global_destroy (GtsObject * object)global_destroy272,6805
static void global_write (GtsObject * object, FILE * fp)global_write278,6952
static void global_read (GtsObject ** object, GtsFile * fp)global_read285,7123
static void gfs_global_class_init (GtsObjectClass * klass)gfs_global_class_init310,7835
GtsObjectClass * gfs_global_class (void)gfs_global_class317,7999
static void gfs_global_append (GfsGlobal * g, GString * s)gfs_global_append338,8496
typedef struct _GfsModule GfsModule;GfsModule348,8734
struct _GfsModule {_GfsModule350,8772
  gchar * key;key351,8792
  guint id;id352,8807
  GModule * module;module353,8819
  GSList * l; /* list of GfsFunctions */l354,8839
struct _GfsFunction {_GfsFunction359,8911
  GtsObject parent;parent360,8933
  GString * expr;expr361,8953
  gboolean isexpr;isexpr362,8971
  GfsModule * module;module363,8990
  GfsFunctionFunc f;f364,9012
  gchar * sname;sname365,9033
  GtsSurface * s;s366,9050
  GfsCartesianGrid * g;g367,9068
  guint index[4];index368,9092
  GfsVariable * v;v369,9110
  GfsDerivedVariable * dv;dv370,9129
  gdouble val;val371,9156
  gboolean spatial, constant, nomap;spatial372,9171
  gboolean spatial, constant, nomap;constant372,9171
  gboolean spatial, constant, nomap;nomap372,9171
  gdouble units;units373,9208
  GfsVariable ** var;var374,9225
  GfsDerivedVariable ** dvar;dvar375,9247
static gchar * function_key (const GfsFunction * f)function_key382,9336
static gchar * find_identifier (const gchar * s, const gchar * i)find_identifier400,9784
static GString * pending_functions = NULL;pending_functions416,10219
static guint n_pending_functions = 0;n_pending_functions417,10262
static void append_pending_function (const GfsFunction * f, guint line, guint id)append_pending_function420,10357
static GHashTable * get_function_cache (void)get_function_cache552,14647
static void link_module (GfsFunction * f)link_module560,14856
static void gfs_module_ref (GfsModule * m, GfsFunction * f)gfs_module_ref611,16359
static void gfs_module_unref (GfsModule * m, GfsFunction * f)gfs_module_unref619,16515
static gboolean lookup_function (GfsFunction * f)lookup_function626,16719
static void gfs_module_new (GfsFunction * f, guint line)gfs_module_new639,17030
static double current_time (void)current_time651,17377
static GModule * compile (GtsFile * fp, const gchar * dirname, const gchar * finname)compile658,17493
static void update_module (gchar * key, GfsModule * m, GModule * module)update_module721,19562
void gfs_pending_functions_compilation (GtsFile * fp)gfs_pending_functions_compilation737,19923
static GtsSurface * read_surface (gchar * name, GtsFile * fp)read_surface771,21004
#define INDEX_T INDEX_T794,21614
static gboolean fit_index_dimension (GfsCartesianGrid * grid, guint * val, GtsFile * fp)fit_index_dimension796,21633
static gboolean cgd_is_spatial (GfsFunction * f)cgd_is_spatial820,22253
static gdouble interpolated_cgd (const GfsFunction * f, const FttVector * r)interpolated_cgd829,22416
GString * gfs_function_expression (GtsFile * fp, gboolean * is_expression)gfs_function_expression868,23413
static void function_read (GtsObject ** o, GtsFile * fp)function_read985,26188
static void function_write (GtsObject * o, FILE * fp)function_write1051,28160
static void function_destroy (GtsObject * object)function_destroy1068,28615
static void gfs_function_class_init (GfsFunctionClass * klass)gfs_function_class_init1090,29109
GfsFunctionClass * gfs_function_class (void)gfs_function_class1097,29335
GfsFunction * gfs_function_new (GfsFunctionClass * klass, gfs_function_new1125,29989
GfsFunction * gfs_function_new_from_variable (GfsFunctionClass * klass, gfs_function_new_from_variable1136,30203
void gfs_function_set_units (GfsFunction * f, gfs_function_set_units1156,30595
static gdouble interpolated_value (GfsFunction * f, FttVector * p)interpolated_value1163,30722
gchar * gfs_function_description (GfsFunction * f,gfs_function_description1184,31224
static gdouble adimensional_value (GfsFunction * f, gdouble v)adimensional_value1215,31777
gdouble gfs_function_value (GfsFunction * f, FttCell * cell)gfs_function_value1231,32147
gdouble gfs_function_face_value (GfsFunction * f, FttCellFace * fa)gfs_function_face_value1268,33147
void gfs_function_set_constant_value (GfsFunction * f, gdouble val)gfs_function_set_constant_value1306,34208
gdouble gfs_function_get_constant_value (GfsFunction * f)gfs_function_get_constant_value1322,34560
gboolean gfs_function_is_constant (const GfsFunction * f)gfs_function_is_constant1339,34937
GfsVariable * gfs_function_get_variable (GfsFunction * f)gfs_function_get_variable1353,35229
void gfs_function_read (GfsFunction * f, gpointer domain, GtsFile * fp)gfs_function_read1368,35486
void gfs_function_write (GfsFunction * f, FILE * fp)gfs_function_write1387,35899
static void gfs_function_spatial_init (GfsFunction * f)gfs_function_spatial_init1402,36184
GfsFunctionClass * gfs_function_spatial_class (void)gfs_function_spatial_class1407,36266
gdouble gfs_function_spatial_value (GfsFunction * f, const FttVector * p)gfs_function_spatial_value1435,36939
GfsFunction * gfs_function_spatial_new (GfsFunctionClass * klass, gfs_function_spatial_new1455,37532
static void gfs_function_map_init (GfsFunction * f)gfs_function_map_init1475,37964
GfsFunctionClass * gfs_function_map_class (void)gfs_function_map_class1480,38040
static void gfs_function_constant_init (GfsFunction * f)gfs_function_constant_init1508,38674
GfsFunctionClass * gfs_function_constant_class (void)gfs_function_constant_class1513,38758
gdouble gfs_read_constant (GtsFile * fp, gpointer domain)gfs_read_constant1544,39490
GtsObjectClass * gfs_object_class_from_name (const gchar * name)gfs_object_class_from_name1572,40309
static void eigsrt (gdouble d[FTT_DIMENSION], gdouble v[FTT_DIMENSION][FTT_DIMENSION])eigsrt1589,40792
#define ROTATE(ROTATE1612,41221
void gfs_eigenvalues (gdouble a[FTT_DIMENSION][FTT_DIMENSION],gfs_eigenvalues1623,41495
gdouble gfs_matrix_inverse (gdouble ** m, guint n, gdouble pivmin)gfs_matrix_inverse1716,43947
#define SWAP(SWAP1729,44349
gpointer gfs_matrix_new (guint n, guint p, guint size)gfs_matrix_new1793,45755
void gfs_matrix_free (gpointer m)gfs_matrix_free1816,46221
GfsClock * gfs_clock_new (void)gfs_clock_new1829,46397
void gfs_clock_start (GfsClock * t)gfs_clock_start1844,46604
void gfs_clock_stop (GfsClock * t)gfs_clock_stop1863,46919
gdouble gfs_clock_elapsed (GfsClock * t)gfs_clock_elapsed1882,47278
void gfs_clock_destroy (GfsClock * t)gfs_clock_destroy1903,47792
FILE * gfs_union_open (FILE * fp, int rank, GfsUnionFile * file)gfs_union_open1923,48245
void gfs_union_close (FILE * fp, int rank, GfsUnionFile * file)gfs_union_close1952,49072
static GfsFormat * format_new (const gchar * s, format_new1991,50220
static void format_destroy (GfsFormat * f)format_destroy2003,50431
GSList * gfs_format_new (const gchar * format,gfs_format_new2021,50844
void gfs_format_destroy (GSList * f)gfs_format_destroy2094,52558
gchar * gfs_format_string (GSList * format, gfs_format_string2112,53060
gdouble gfs_format_time_value (GSList * format, const gchar * string)gfs_format_time_value2163,54165
void gfs_cell_message (const FttCell * cell, gfs_cell_message2220,55468
static gboolean GfsDebug = FALSE;GfsDebug2238,55920
void gfs_debug (const gchar * format,gfs_debug2248,56119
void gfs_debug_enabled (gboolean enabled)gfs_debug_enabled2265,56494
gboolean gfs_read_vector (GtsFile * fp, gchar * component[FTT_DIMENSION])gfs_read_vector2281,56904
gboolean gfs_read_variable_vector (GtsFile * fp, gfs_read_variable_vector2350,58760
gboolean gfs_read_function_vector (GtsFile * fp, gfs_read_function_vector2392,60060

graphic.c,9174
  GPtrArray * colors;colors46,1232
  gboolean reversed;reversed47,1254
} Colormap;Colormap48,1275
static GtsColor * color_new (gdouble r, gdouble g, gdouble b)color_new50,1288
static void color_destroy (GtsColor * color)color_destroy57,1446
static Colormap * colormap_jet (void)colormap_jet64,1551
static void colormap_destroy (Colormap * colormap)colormap_destroy93,2210
static GtsColor colormap_color (Colormap * cmap, gdouble val)colormap_color105,2478
typedef struct _VertexCellFace         VertexCellFace;VertexCellFace138,3280
struct _VertexCellFace {_VertexCellFace140,3336
  GtsVertex parent;parent142,3379
  guint index;index145,3417
  FttCell * cell;cell146,3432
  FttCellFace face;face147,3450
#define VERTEX_CELL_FACE(VERTEX_CELL_FACE150,3474
static GtsVertexClass * vertex_cell_face_class (void)vertex_cell_face_class156,3641
static void triangulate (FttCell * cell, gpointer * data)triangulate177,4156
static void triangulate_face (FttCell * cell, gpointer * data)triangulate_face202,4803
static void add_long_segment (GtsSegment * s, GSList ** list)add_long_segment232,5661
void gfs_write_gts (GfsDomain * domain, gfs_write_gts247,6207
static void extent (FttCell * cell, gpointer * data)extent354,9474
static void iso_func (gdouble ** a, GtsCartesianGrid g, guint k,iso_func369,9867
GtsSurface * gfs_isosurface (GfsDomain * domain, gfs_isosurface389,10411
static void write_gnuplot (FttCell * cell, gpointer * data)write_gnuplot434,11623
void gfs_write_gnuplot (GfsDomain * domain, gfs_write_gnuplot455,12199
  guchar r, g, b;r475,12621
  guchar r, g, b;g475,12621
  guchar r, g, b;b475,12621
} Color;Color476,12639
  FttVector min;min479,12666
  guint width, height, size;width480,12683
  guint width, height, size;height480,12683
  guint width, height, size;size480,12683
  guchar * buf, *** data;buf481,12712
  guchar * buf, *** data;data481,12712
} Image;Image482,12738
static Image * image_new (FttVector min, FttVector max, guint size)image_new484,12748
static void image_write (Image * im, FILE * fp)image_write505,13320
static void image_destroy (Image * im)image_destroy520,13710
static void image_draw_square (Image * im,image_draw_square531,13883
static void write_image_square (FttCell * cell, gpointer * data)write_image_square553,14439
static void max_extent (FttCell * cell, FttVector extent[2])max_extent580,15219
static gboolean cell_condition (FttCell * cell, gpointer condition)cell_condition595,15710
void gfs_write_ppm (GfsDomain * domain, gfs_write_ppm600,15830
#define NODATA NODATA702,18888
  FttVector min;min705,18927
  gdouble cellsize;cellsize706,18944
  guint width, height;width707,18964
  guint width, height;height707,18964
  gfloat * buf, ** data;buf708,18987
  gfloat * buf, ** data;data708,18987
} Grid;Grid709,19012
static Grid * grid_new (FttVector min, FttVector max, FttVector step) grid_new711,19021
static void grid_write (Grid * im, FILE * fp)grid_write729,19569
static void grid_destroy (Grid * im)grid_destroy747,19979
static void max_physical_extent (FttCell * cell, gpointer * data)max_physical_extent754,20077
void gfs_write_grd (GfsSimulation * sim, gfs_write_grd785,21066
static gint gfs_combine_close (FILE ** f, Image ** im, gint n, gint ret)gfs_combine_close864,23741
static gint get_newline (FILE * fp)get_newline879,23985
gint gfs_combine_ppm (gchar ** fname, guint nname, FILE * fp)gfs_combine_ppm889,24119
static void write_square (FttCell * cell, gpointer * data)write_square975,26445
void gfs_write_squares (GfsDomain * domain, gfs_write_squares1033,27896
static void write_mac (FttCellFace * face, gpointer * data)write_mac1065,28691
void gfs_write_mac_velocity (GfsDomain * domain,gfs_write_mac_velocity1106,29764
void gfs_draw_cells (FttCell * cell, gfs_draw_cells1130,30403
void gfs_draw_levels (FttCell * cell, FILE * fp)gfs_draw_levels1144,30739
static void draw_box_boundaries (GfsBox * box, FILE * fp)draw_box_boundaries1159,31081
void gfs_draw_boundary_conditions (GfsDomain * domain, FILE * fp)gfs_draw_boundary_conditions1208,32457
static void draw_boundary_face (FttCell * cell, FILE * fp)draw_boundary_face1223,32844
void gfs_draw_solid_boundaries (GfsDomain * domain, FILE * fp)gfs_draw_solid_boundaries1243,33287
static void count_face (FttCell * cell, guint * count)count_face1258,33718
static void draw_face (FttCell * cell, FILE * fp)draw_face1272,34031
void gfs_draw_refined_boundaries (GfsDomain * domain, FILE * fp)gfs_draw_refined_boundaries1294,34546
static gpointer color_data[5];color_data1318,35255
static GtsColor variable_color (GtsObject * o)variable_color1320,35287
void gfs_draw_surface (GfsDomain * domain,gfs_draw_surface1348,35884
typedef struct _GtsColoredVertex         GtsColoredVertex;GtsColoredVertex1382,36809
struct _GtsColoredVertex {_GtsColoredVertex1384,36869
  GtsVertex parent;parent1386,36914
  GtsColor c;c1389,36952
#define GTS_COLORED_VERTEX(GTS_COLORED_VERTEX1392,36970
#define GTS_IS_COLORED_VERTEX(GTS_IS_COLORED_VERTEX1395,37112
static void gts_colored_vertex_read (GtsObject ** o, GtsFile * fp)gts_colored_vertex_read1402,37310
static void gts_colored_vertex_write (GtsObject * o, FILE * fp)gts_colored_vertex_write1432,38212
static GtsColor gts_colored_vertex_color (GtsObject * o)gts_colored_vertex_color1443,38579
static void gts_colored_vertex_class_init (GtsVertexClass * klass)gts_colored_vertex_class_init1448,38677
static void gts_colored_vertex_init (GtsColoredVertex * object)gts_colored_vertex_init1455,38933
GtsVertexClass * gts_colored_vertex_class (void)gts_colored_vertex_class1460,39050
typedef struct _GfsVertex         GfsVertex;GfsVertex1483,39637
struct _GfsVertex {_GfsVertex1485,39683
  GtsColoredVertex parent;parent1487,39721
  gdouble v;v1490,39766
#define GFS_VERTEX(GFS_VERTEX1493,39783
#define GFS_IS_VERTEX(GFS_IS_VERTEX1496,39902
static void gfs_vertex_read (GtsObject ** o, GtsFile * fp)gfs_vertex_read1503,40068
static void gfs_vertex_write (GtsObject * o, FILE * fp)gfs_vertex_write1518,40533
static void gfs_vertex_class_init (GtsPointClass * klass)gfs_vertex_class_init1526,40802
GtsPointClass * gfs_vertex_class (void)gfs_vertex_class1532,40971
typedef struct _GfsTwistedVertex         GfsTwistedVertex;GfsTwistedVertex1556,41514
struct _GfsTwistedVertex {_GfsTwistedVertex1558,41574
  GfsVertex parent;parent1560,41619
  gdouble theta;theta1563,41657
#define GFS_TWISTED_VERTEX(GFS_TWISTED_VERTEX1566,41678
#define GFS_IS_TWISTED_VERTEX(GFS_IS_TWISTED_VERTEX1569,41820
static void gfs_twisted_vertex_read (GtsObject ** o, GtsFile * fp)gfs_twisted_vertex_read1576,42017
static void gfs_twisted_vertex_write (GtsObject * o, FILE * fp)gfs_twisted_vertex_write1591,42506
static void gfs_twisted_vertex_class_init (GtsPointClass * klass)gfs_twisted_vertex_class_init1599,42795
GtsPointClass * gfs_twisted_vertex_class (void)gfs_twisted_vertex_class1605,42988
static void matrix_transpose (GtsMatrix * m)matrix_transpose1627,43537
static void base (GtsMatrix * b, GtsPoint * p1, GtsPoint * p2)base1640,43736
static void edge_list (GtsMatrix * b, GtsPoint * o,edge_list1661,44202
static void add_face (GtsSurface * s, GtsEdge ** e1, GtsEdge ** e2,add_face1715,45758
static GList * next_far_enough (GList * p, gdouble size)next_far_enough1739,46559
void gfs_extrude_profile (GtsSurface * s,gfs_extrude_profile1757,46860
static gdouble triangle_area (FttVector p1, FttVector p2, FttVector p3)triangle_area1814,48118
static gdouble circumcircle_radius (FttVector p1, FttVector p2, FttVector p3)circumcircle_radius1824,48414
static GSList * circle_profile (GtsPointClass * klass, circle_profile1839,48803
static GSList * ribbon_profile (GtsPointClass * klass, ribbon_profile1853,49104
static void vorticity_vector (FttCell * cell, gpointer * data)vorticity_vector1864,49384
static gdouble interpolated_velocity (FttCell * cell, FttVector p, GfsVariable ** U,interpolated_velocity1879,49958
static GList * grow_curve (GfsDomain * domain,grow_curve1894,50429
GList * gfs_streamline_new (GfsDomain * domain,gfs_streamline_new2032,54135
void gfs_streamline_write (GList * stream, FILE * fp)gfs_streamline_write2058,54819
GList * gfs_streamline_read (GtsFile * fp)gfs_streamline_read2070,55114
void gfs_streamline_draw (GList * stream, FILE * fp)gfs_streamline_draw2107,55950
void gfs_streamline_destroy (GList * stream)gfs_streamline_destroy2123,56310
void gfs_draw_stream_cylinder (GfsDomain * domain,gfs_draw_stream_cylinder2129,56445
void gfs_draw_stream_ribbon (GfsDomain * domain,gfs_draw_stream_ribbon2159,57363
void gfs_draw_streamline (GfsDomain * domain,gfs_draw_streamline2189,58273
static gdouble point_orientation (FttVector p[3], FttVector * c)point_orientation2206,58639
gboolean gfs_plane_cuts_cell (FttVector plane[3], FttCell * cell)gfs_plane_cuts_cell2234,59272
static void cube_plane_intersection (FttCell * cell,cube_plane_intersection2257,59949
guint gfs_cut_cube_vertices (FttCell * cell, gint maxlevel,gfs_cut_cube_vertices2322,62026

source.h,5847
#define __SOURCE_H____SOURCE_H__21,859
typedef struct _GfsSourceGeneric         GfsSourceGeneric;GfsSourceGeneric41,1324
struct _GfsSourceGeneric {_GfsSourceGeneric43,1384
  GfsEvent parent;parent45,1429
  GfsVariable * v;v48,1466
  gdouble (* mac_value)      (GfsSourceGeneric *, FttCell *, GfsVariable *);mac_value49,1485
  gdouble (* centered_value) (GfsSourceGeneric *, FttCell *, GfsVariable *);centered_value50,1562
  gdouble (* face_value)     (GfsSourceGeneric *, FttCellFace *, GfsVariable *);face_value51,1639
  void    (* flux)           (GfsSourceGeneric *, GfsDomain *, flux52,1720
typedef struct _GfsSourceGenericClass    GfsSourceGenericClass;GfsSourceGenericClass57,1847
struct _GfsSourceGenericClass {_GfsSourceGenericClass59,1912
  GfsEventClass parent_class;parent_class61,1962
  gdouble (* stability)      (GfsSourceGeneric *, GfsSimulation *);stability64,2010
#define GFS_SOURCE_GENERIC(GFS_SOURCE_GENERIC67,2082
#define GFS_SOURCE_GENERIC_CLASS(GFS_SOURCE_GENERIC_CLASS70,2224
#define GFS_IS_SOURCE_GENERIC(GFS_IS_SOURCE_GENERIC73,2364
typedef struct _GfsSourceScalar         GfsSourceScalar;GfsSourceScalar82,2677
struct _GfsSourceScalar {_GfsSourceScalar84,2735
  GfsSourceGeneric parent;parent86,2779
  GfsVariable * v;v89,2824
  GfsVariable * vector[FTT_DIMENSION];vector90,2843
#define GFS_SOURCE_SCALAR(GFS_SOURCE_SCALAR93,2886
#define GFS_IS_SOURCE_SCALAR(GFS_IS_SOURCE_SCALAR96,3025
typedef struct _GfsSourceVelocity         GfsSourceVelocity;GfsSourceVelocity103,3228
struct _GfsSourceVelocity {_GfsSourceVelocity105,3290
  GfsSourceGeneric parent;parent107,3336
  GfsVariable ** v;v110,3381
#define GFS_SOURCE_VELOCITY(GFS_SOURCE_VELOCITY113,3405
#define GFS_IS_SOURCE_VELOCITY(GFS_IS_SOURCE_VELOCITY116,3550
typedef struct _GfsSource         GfsSource;GfsSource123,3751
struct _GfsSource {_GfsSource125,3797
  GfsSourceScalar parent;parent127,3835
  GfsFunction * intensity;intensity130,3879
  GfsFunction * intensity_v[FTT_DIMENSION];intensity_v131,3906
#define GFS_SOURCE(GFS_SOURCE134,3954
#define GFS_IS_SOURCE(GFS_IS_SOURCE137,4073
typedef struct _GfsSourceControl         GfsSourceControl;GfsSourceControl144,4254
struct _GfsSourceControl {_GfsSourceControl146,4314
  GfsSourceScalar parent;parent148,4359
  gdouble s;s149,4385
  GfsFunction * intensity;intensity152,4416
#define GFS_SOURCE_CONTROL(GFS_SOURCE_CONTROL155,4447
#define GFS_IS_SOURCE_CONTROL(GFS_IS_SOURCE_CONTROL158,4589
typedef struct _GfsSourceControlField         GfsSourceControlField;GfsSourceControlField165,4799
struct _GfsSourceControlField {_GfsSourceControlField167,4869
  GfsSourceControl parent;parent169,4919
  GfsVariable * s;s170,4946
  gdouble tau;tau173,4983
  gint level;level174,4998
#define GFS_SOURCE_CONTROL_FIELD(GFS_SOURCE_CONTROL_FIELD177,5016
#define GFS_IS_SOURCE_CONTROL_FIELD(GFS_IS_SOURCE_CONTROL_FIELD180,5175
typedef struct _GfsSourceFlux         GfsSourceFlux;GfsSourceFlux187,5395
struct _GfsSourceFlux {_GfsSourceFlux189,5449
  GfsSourceScalar parent;parent191,5491
  gdouble s;s192,5517
  GfsFunction * intensity, * fraction;intensity195,5548
  GfsFunction * intensity, * fraction;fraction195,5548
#define GFS_SOURCE_FLUX(GFS_SOURCE_FLUX198,5591
#define GFS_IS_SOURCE_FLUX(GFS_IS_SOURCE_FLUX201,5724
struct _GfsDiffusion {_GfsDiffusion208,5916
  GfsEvent parent;parent210,5957
  GfsFunction * val;val213,5994
  GfsVariable * mu;mu214,6015
  GfsVariable * phase;phase215,6035
  GfsMultilevelParams par;par216,6058
  gdouble (* face)  (GfsDiffusion *, FttCellFace *);face217,6085
  gdouble (* cell)  (GfsDiffusion *, FttCell *);cell218,6138
typedef struct _GfsDiffusionClass    GfsDiffusionClass;GfsDiffusionClass221,6191
struct _GfsDiffusionClass {_GfsDiffusionClass223,6248
  GfsEventClass parent_class;parent_class225,6294
#define GFS_DIFFUSION(GFS_DIFFUSION230,6346
#define GFS_DIFFUSION_CLASS(GFS_DIFFUSION_CLASS233,6474
#define GFS_IS_DIFFUSION(GFS_IS_DIFFUSION236,6600
struct _GfsSourceDiffusion {_GfsSourceDiffusion247,6959
  GfsSourceScalar parent;parent249,7006
  GfsDiffusion * D;D252,7050
  GfsVariable * phi;phi253,7070
#define GFS_SOURCE_DIFFUSION(GFS_SOURCE_DIFFUSION256,7095
#define GFS_IS_SOURCE_DIFFUSION(GFS_IS_SOURCE_DIFFUSION259,7243
typedef struct _GfsSourceDiffusionExplicit         GfsSourceDiffusionExplicit;GfsSourceDiffusionExplicit270,7686
struct _GfsSourceDiffusionExplicit {_GfsSourceDiffusionExplicit272,7766
  GfsSourceDiffusion parent;parent274,7821
#define GFS_SOURCE_DIFFUSION_EXPLICIT(GFS_SOURCE_DIFFUSION_EXPLICIT279,7872
#define GFS_IS_SOURCE_DIFFUSION_EXPLICIT(GFS_IS_SOURCE_DIFFUSION_EXPLICIT282,8046
typedef struct _GfsSourceViscosity         GfsSourceViscosity;GfsSourceViscosity289,8286
struct _GfsSourceViscosity {_GfsSourceViscosity291,8350
  GfsSourceDiffusion parent;parent293,8397
  GfsVariable ** v;v296,8444
#define GFS_SOURCE_VISCOSITY(GFS_SOURCE_VISCOSITY299,8468
#define GFS_IS_SOURCE_VISCOSITY(GFS_IS_SOURCE_VISCOSITY302,8616
#define GFS_IS_SOURCE_VISCOSITY_EXPLICIT(GFS_IS_SOURCE_VISCOSITY_EXPLICIT309,8833
typedef struct _GfsSourceCoriolis         GfsSourceCoriolis;GfsSourceCoriolis316,9069
struct _GfsSourceCoriolis {_GfsSourceCoriolis318,9131
  GfsSourceVelocity parent;parent320,9177
  GfsVariable * u[FTT_DIMENSION];u321,9205
  GfsFunction * omegaz; /* Coriolis coefficient */omegaz324,9257
  GfsFunction *   drag; /* Linear drag coefficient */drag325,9308
  gdouble         beta; /* "implicitness coefficient" 0.5 CN, 1 backward Euler */beta326,9362
  double          d[3]; /* Direction of Coriolis rotation vector */d327,9444
#define GFS_SOURCE_CORIOLIS(GFS_SOURCE_CORIOLIS330,9516
#define GFS_IS_SOURCE_CORIOLIS(GFS_IS_SOURCE_CORIOLIS333,9661

utils.h,2255
#define __UTILS_H____UTILS_H__21,858
# define gfs_all_reduce(gfs_all_reduce36,1079
# define gfs_error(gfs_error44,1364
#    define gfs_all_reduce(gfs_all_reduce63,2464
#    define gfs_error(gfs_error64,2512
#  define M_PI M_PI76,2789
#define GFS_DOUBLE_TO_POINTER(GFS_DOUBLE_TO_POINTER79,2835
#define GFS_NODATA GFS_NODATA80,2895
#define GFS_HAS_DATA(GFS_HAS_DATA81,2944
typedef struct _GfsGlobal         GfsGlobal;GfsGlobal94,3288
#define GFS_GLOBAL(GFS_GLOBAL96,3334
#define GFS_IS_GLOBAL(GFS_IS_GLOBAL99,3453
typedef struct _GfsFunction         GfsFunction;GfsFunction106,3624
typedef struct _GfsFunctionClass    GfsFunctionClass;GfsFunctionClass108,3674
struct _GfsFunctionClass {_GfsFunctionClass110,3729
  GtsObjectClass parent_class;parent_class111,3756
#define GFS_FUNCTION(GFS_FUNCTION114,3791
#define GFS_FUNCTION_CLASS(GFS_FUNCTION_CLASS117,3916
#define GFS_IS_FUNCTION(GFS_IS_FUNCTION120,4039
#define GFS_IS_FUNCTION_SPATIAL(GFS_IS_FUNCTION_SPATIAL152,5452
typedef gdouble (* GfsFunctionSpatialFunc)    (double x, double y, double z, double t);GfsFunctionSpatialFunc155,5574
#define GFS_IS_FUNCTION_MAP(GFS_IS_FUNCTION_MAP164,5950
#define GFS_IS_FUNCTION_CONSTANT(GFS_IS_FUNCTION_CONSTANT171,6150
  gboolean started;started192,6939
  glong start, stop;start193,6959
  glong start, stop;stop193,6959
} GfsClock;GfsClock194,6980
  FILE * fp;fp203,7303
  char * buf;buf204,7316
  size_t len;len205,7330
} GfsUnionFile;GfsUnionFile206,7344
typedef struct _GfsFormat GfsFormat;GfsFormat217,7606
  GFS_ITER_FORMAT,GFS_ITER_FORMAT220,7659
  GFS_TIME_FORMAT,GFS_TIME_FORMAT221,7678
  GFS_PID_FORMAT,GFS_PID_FORMAT222,7697
  GFS_NONE_FORMATGFS_NONE_FORMAT223,7715
} GfsFormatType;GfsFormatType224,7733
struct _GfsFormat {_GfsFormat226,7751
  gchar * s;s227,7771
  GfsFormatType t;t228,7784
#undef g_assertg_assert262,9093
#undef g_assert_not_reachedg_assert_not_reached263,9109
#define g_assert(g_assert267,9163
#define g_assert_not_reached(g_assert_not_reached268,9222
#define g_assert(g_assert274,9337
#define g_assert_not_reached(g_assert_not_reached285,9828
#define g_assert(g_assert296,10237
#define g_assert_not_reached(g_assert_not_reached305,10506

graphic.h,43
#define __GRAPHIC_H____GRAPHIC_H__21,855

mpi_boundary.h,506
#define __MPI_BOUNDARY_H____MPI_BOUNDARY_H__21,860
typedef struct _GfsBoundaryMpi         GfsBoundaryMpi;GfsBoundaryMpi29,969
struct _GfsBoundaryMpi {_GfsBoundaryMpi37,1117
  GfsBoundaryPeriodic parent;parent39,1160
  gint process, id;process40,1190
  gint process, id;id40,1190
  MPI_Comm comm;comm43,1227
  MPI_Request request[2];request44,1244
  guint nrequest;nrequest45,1270
#define GFS_BOUNDARY_MPI(GFS_BOUNDARY_MPI51,1342
#define GFS_IS_BOUNDARY_MPI(GFS_IS_BOUNDARY_MPI54,1482

surface.c,2717
GfsGenericSurfaceClass * gfs_generic_surface_class (void)gfs_generic_surface_class32,1051
GfsGenericSurface * gfs_cell_is_cut (FttCell * cell, GfsGenericSurface * s, gfs_cell_is_cut63,1945
static void cell_traverse_cut (FttCell * cell,cell_traverse_cut74,2347
void gfs_cell_traverse_cut (FttCell * root,gfs_cell_traverse_cut127,4151
void gfs_cell_traverse_cut_2D (FttCell * root,gfs_cell_traverse_cut_2D156,5047
void gfs_generic_surface_read (GfsGenericSurface * s, gpointer sim, GtsFile * fp)gfs_generic_surface_read178,5580
void gfs_generic_surface_write (GfsGenericSurface * s, gpointer sim, FILE * fp)gfs_generic_surface_write197,5991
guint gfs_surface_segment_intersection (GfsGenericSurface * s,gfs_surface_segment_intersection216,6468
void gfs_surface_segment_normal (GfsGenericSurface * s,gfs_surface_segment_normal237,7101
gint gfs_surface_point_is_inside (GfsGenericSurface * s,gfs_surface_point_is_inside260,7734
void gfs_surface_transformation (GtsSurface * surface, gfs_surface_transformation288,8476
static void point_map (GtsPoint * p, GfsSimulation * sim)point_map333,9642
static void surface_read (GtsObject ** o, GtsFile * fp)surface_read338,9754
static void surface_write (GtsObject * o, FILE * fp)surface_write462,13605
static void surface_destroy (GtsObject * object)surface_destroy511,15230
static void face_overlaps_box (GtsTriangle * t, gpointer * data)face_overlaps_box527,15621
#define SIGN(SIGN542,15998
static GfsGenericSurface * cell_is_cut (FttCell * cell, GfsGenericSurface * s1, cell_is_cut544,16050
static gdouble segment_triangle_intersection (GtsPoint * E, GtsPoint * D,segment_triangle_intersection593,17389
static void triangle_face_intersection (GtsTriangle * t, GfsSegment * I)triangle_face_intersection639,18672
static GtsPoint segment_intersection (GfsSegment * I)segment_intersection650,18912
static guint surface_segment_intersection (GfsGenericSurface * s1,surface_segment_intersection663,19285
static void surface_normal (GtsTriangle * t, GtsVector n)surface_normal722,20679
static void surface_segment_normal (GfsGenericSurface * s1,surface_segment_normal731,20853
static void add_tetrahedron_volume (GtsTriangle * t, gpointer * data)add_tetrahedron_volume755,21472
static gint point_is_inside_surface (GfsGenericSurface * s1, FttVector * p)point_is_inside_surface764,21762
static void gfs_surface_class_init (GtsObjectClass * klass)gfs_surface_class_init786,22311
static void gfs_surface_init (GfsSurface * s)gfs_surface_init798,22787
GfsGenericSurfaceClass * gfs_surface_class (void)gfs_surface_class807,23028
gdouble gfs_surface_implicit_value (GfsSurface * s, GtsPoint p)gfs_surface_implicit_value835,23734

balance.c,1749
static void find_neighbors (GfsBox * box, GArray * pe)find_neighbors34,1043
static GArray * neighboring_processors (GfsDomain * domain)neighboring_processors50,1495
static void count (FttCell * cell, int * n)count58,1739
#define NITERMAX NITERMAX63,1798
#define TOL TOL64,1819
  guint * pid;     /* pid of neighbors */pid67,1855
  gdouble * flow;  /* flow to neighbors */flow68,1897
  guint n;         /* number of neighbors */n69,1940
} BalancingFlow;BalancingFlow70,1985
static BalancingFlow * balancing_flow_new (GfsDomain * domain, int average)balancing_flow_new77,2176
static void balancing_flow_destroy (BalancingFlow * b)balancing_flow_destroy139,4294
static void reset_box_size (GfsBox * box)reset_box_size146,4407
  GfsBox * box;box152,4488
  gint dest, flow, min, neighboring;dest153,4504
  gint dest, flow, min, neighboring;flow153,4504
  gint dest, flow, min, neighboring;min153,4504
  gint dest, flow, min, neighboring;neighboring153,4504
} BoxData;BoxData154,4541
static void select_neighbouring_box (GfsBox * box, BoxData * b)select_neighbouring_box156,4553
static void get_pid (GfsBox * box, GArray * pid)get_pid182,5333
static void update_box_pid (GfsBox * box, GArray * pid)update_box_pid188,5507
static void gfs_event_balance_write (GtsObject * o, FILE * fp)gfs_event_balance_write201,5893
static void gfs_event_balance_read (GtsObject ** o, GtsFile * fp)gfs_event_balance_read212,6205
static gboolean gfs_event_balance_event (GfsEvent * event, GfsSimulation * sim)gfs_event_balance_event226,6639
static void gfs_event_balance_class_init (GfsEventClass * klass)gfs_event_balance_class_init318,10072
GfsEventClass * gfs_event_balance_class (void)gfs_event_balance_class325,10322

surface.h,1880
#define __SURFACE_H____SURFACE_H__21,855
typedef GtsObject GfsGenericSurface;GfsGenericSurface32,1004
  GtsPoint * E, * D;E35,1059
  GtsPoint * E, * D;D35,1059
  gdouble x;x36,1080
  guint n;n37,1093
  gint inside;inside38,1104
} GfsSegment;GfsSegment39,1119
typedef struct _GfsGenericSurfaceClass    GfsGenericSurfaceClass;GfsGenericSurfaceClass41,1134
struct _GfsGenericSurfaceClass {_GfsGenericSurfaceClass43,1201
  GtsObjectClass parent_class;parent_class45,1252
  GfsGenericSurface * (* cell_is_cut)          (FttCell * cell,cell_is_cut48,1301
  guint               (* segment_intersection) (GfsGenericSurface * s,segment_intersection52,1440
  void                (* segment_normal)       (GfsGenericSurface * s,segment_normal55,1556
  gint                (* point_is_inside)      (GfsGenericSurface * s,point_is_inside59,1691
#define GFS_GENERIC_SURFACE(GFS_GENERIC_SURFACE63,1788
#define GFS_GENERIC_SURFACE_CLASS(GFS_GENERIC_SURFACE_CLASS66,1925
#define GFS_IS_GENERIC_SURFACE(GFS_IS_GENERIC_SURFACE69,2068
typedef void       (* FttCellTraverseCutFunc) (FttCell * cell,FttCellTraverseCutFunc86,2769
typedef struct _GfsSurface         GfsSurface;GfsSurface110,3562
struct _GfsSurface {_GfsSurface112,3610
  GtsObject parent;parent114,3649
  GtsVector rotate, scale, translate;rotate115,3669
  GtsVector rotate, scale, translate;scale115,3669
  GtsVector rotate, scale, translate;translate115,3669
  gboolean flip;flip116,3707
  GfsFunction * f;f117,3724
  GtsMatrix * m;m118,3743
  GNode * bbtree;bbtree119,3760
  GtsSurface * s;s122,3796
  gboolean twod;twod123,3814
  GtsFaceClass * face_class;face_class125,3832
  GtsEdgeClass * edge_class;edge_class126,3861
  GtsVertexClass * vertex_class;vertex_class127,3890
#define GFS_SURFACE(GFS_SURFACE130,3927
#define GFS_IS_SURFACE(GFS_IS_SURFACE133,4049

simulation.h,2819
#define __SIMULATION_H____SIMULATION_H__21,858
  typedef struct _GfsSimulation         GfsSimulation;GfsSimulation31,1005
typedef struct _GfsSimulationClass    GfsSimulationClass;GfsSimulationClass33,1067
typedef struct _GfsTime               GfsTime;GfsTime34,1125
typedef struct _GfsPhysicalParams     GfsPhysicalParams;GfsPhysicalParams35,1172
typedef struct _GfsAdaptStats         GfsAdaptStats;GfsAdaptStats36,1229
struct _GfsTime {_GfsTime38,1283
  gdouble t, start, end;t39,1301
  gdouble t, start, end;start39,1301
  gdouble t, start, end;end39,1301
  guint i, istart, iend;i40,1326
  guint i, istart, iend;istart40,1326
  guint i, istart, iend;iend40,1326
  gdouble dtmax;dtmax41,1351
struct _GfsPhysicalParams {_GfsPhysicalParams44,1372
  gdouble L, g;L45,1400
  gdouble L, g;g45,1400
  GfsFunction * alpha;alpha46,1416
struct _GfsAdaptStats {_GfsAdaptStats49,1443
  guint removed, created;removed50,1467
  guint removed, created;created50,1467
  GtsRange cmax;cmax51,1493
  GtsRange ncells;ncells52,1510
  gint depth_increase;depth_increase53,1529
struct _GfsSimulation {_GfsSimulation56,1556
  GfsDomain parent;parent57,1580
  GfsTime time;time59,1601
  GfsPhysicalParams physical_params;physical_params60,1617
  GfsMultilevelParams projection_params;projection_params62,1655
  GfsMultilevelParams approx_projection_params;approx_projection_params63,1696
  GfsAdvectionParams advection_params;advection_params65,1745
  GtsSListContainer * refines;refines67,1785
  GtsSListContainer * adapts;adapts69,1817
  GfsAdaptStats adapts_stats;adapts_stats70,1847
  GtsSListContainer * events, * maps;events72,1878
  GtsSListContainer * events, * maps;maps72,1878
  GSList * modules, * globals, * preloaded_modules;modules73,1916
  GSList * modules, * globals, * preloaded_modules;globals73,1916
  GSList * modules, * globals, * preloaded_modules;preloaded_modules73,1916
  GtsSListContainer * solids;solids75,1969
  guint thin;thin76,1999
  gboolean output_solid;output_solid77,2013
  gdouble tnext;tnext79,2039
  GfsVariable * u0[FTT_DIMENSION];u081,2057
struct _GfsSimulationClass {_GfsSimulationClass84,2096
  GfsDomainClass parent_class;parent_class85,2125
  void    (* run) (GfsSimulation *);run87,2157
  gdouble (* cfl) (GfsSimulation *);cfl88,2194
#define GFS_SIMULATION(GFS_SIMULATION91,2235
#define GFS_SIMULATION_CLASS(GFS_SIMULATION_CLASS94,2370
#define GFS_IS_SIMULATION(GFS_IS_SIMULATION97,2503
#define              gfs_object_simulation(gfs_object_simulation143,4809
#define              gfs_object_simulation_set(gfs_object_simulation_set144,4900
#define GFS_IS_POISSON(GFS_IS_POISSON152,5099
#define GFS_IS_AXI(GFS_IS_AXI158,5269
#define GFS_IS_ADVECTION_AXI(GFS_IS_ADVECTION_AXI164,5444

mpi_boundary.c,889
static void boundary_mpi_write (GtsObject * o, FILE * fp)boundary_mpi_write33,1044
static void boundary_mpi_read (GtsObject ** o, GtsFile * fp)boundary_mpi_read43,1439
static guint tag_shift = 32767/FTT_NEIGHBORS;tag_shift78,2470
#define TAG(TAG80,2517
#define MATCHING_TAG(MATCHING_TAG81,2597
FILE * mpi_debug = NULL;mpi_debug86,2764
static void send (GfsBoundary * bb)send89,2797
static void receive (GfsBoundary * bb,receive132,4040
static void synchronize (GfsBoundary * bb)synchronize219,6475
static void gfs_boundary_mpi_class_init (GfsBoundaryClass * klass)gfs_boundary_mpi_class_init250,7268
static void gfs_boundary_mpi_init (GfsBoundaryMpi * boundary)gfs_boundary_mpi_init261,7585
GfsBoundaryClass * gfs_boundary_mpi_class (void)gfs_boundary_mpi_class291,8357
GfsBoundaryMpi * gfs_boundary_mpi_new (GfsBoundaryClass * klass,gfs_boundary_mpi_new312,8922

unstructured.h,53
#define __UNSTRUCTURED_H____UNSTRUCTURED_H__22,868

ftt.c,6539
#define  FTT_CELL_IS_DESTROYED(FTT_CELL_IS_DESTROYED26,909
gchar * ftt_direction_name[FTT_NEIGHBORS] = {ftt_direction_name28,985
gint ftt_opposite_direction[FTT_NEIGHBORS] =ftt_opposite_direction35,1124
typedef struct _FttOct      FttOct;FttOct42,1264
typedef struct _FttRootCell FttRootCell;FttRootCell43,1300
static void oct_new (FttCell * parent,oct_new45,1342
FttCell * ftt_cell_new (FttCellInitFunc init,ftt_cell_new92,2451
gboolean ftt_cell_check (const FttCell * cell)ftt_cell_check110,2748
void ftt_cell_refine_single (FttCell * cell,ftt_cell_refine_single146,3836
void ftt_cell_refine (FttCell * root,ftt_cell_refine169,4535
void ftt_cell_draw (const FttCell * cell, FILE * fp)ftt_cell_draw201,5325
void ftt_face_draw (const FttCellFace * face, FILE * fp)ftt_face_draw245,6292
static gdouble coords[FTT_CELLS][3] =coords301,7888
void ftt_cell_relative_pos (const FttCell * cell,ftt_cell_relative_pos327,8435
void ftt_cell_pos (const FttCell * cell, ftt_cell_pos349,8887
void ftt_corner_relative_pos (const FttCell * cell,ftt_corner_relative_pos379,9653
void ftt_corner_pos (const FttCell * cell,ftt_corner_pos413,10624
void ftt_face_pos (const FttCellFace * face, FttVector * pos)ftt_face_pos438,11162
static void update_children_pos (FttCell * parent)update_children_pos458,11721
void ftt_cell_set_pos (FttCell * root,ftt_cell_set_pos479,12267
static void update_children_level (FttCell * parent)update_children_level490,12525
void ftt_cell_set_level (FttCell * root, guint level)ftt_cell_set_level511,13064
static void update_neighbor (FttCell * cell,update_neighbor520,13276
void ftt_cell_set_neighbor (FttCell * root,ftt_cell_set_neighbor568,14688
static void update_neighbor_match (FttCell * cell,update_neighbor_match596,15525
void ftt_cell_set_neighbor_match (FttCell * root,ftt_cell_set_neighbor_match663,17596
static void cell_traverse_pre_order_all (FttCell * cell,cell_traverse_pre_order_all689,18308
static void cell_traverse_post_order_all (FttCell * cell,cell_traverse_post_order_all717,18988
static void cell_traverse_leafs (FttCell * cell,cell_traverse_leafs740,19502
static void cell_traverse_pre_order_nonleafs (FttCell * cell,cell_traverse_pre_order_nonleafs763,20024
static void cell_traverse_post_order_nonleafs (FttCell * cell,cell_traverse_post_order_nonleafs791,20769
static void cell_traverse_level (FttCell * cell,cell_traverse_level814,21310
static void cell_traverse_level_leafs (FttCell * cell,cell_traverse_level_leafs834,21776
static void cell_traverse_level_non_leafs (FttCell * cell,cell_traverse_level_non_leafs854,22299
void ftt_cell_traverse (FttCell * root,ftt_cell_traverse889,23422
void ftt_cell_traverse_condition (FttCell * root,ftt_cell_traverse_condition948,25417
void ftt_cell_bbox (const FttCell * cell, GtsBBox * bb)ftt_cell_bbox995,26824
static gboolean cell_is_in_box (FttCell * cell, gpointer data)cell_is_in_box1014,27230
void ftt_cell_traverse_box (FttCell * root,ftt_cell_traverse_box1040,28110
static void cell_traverse_boundary_pre_order_all (FttCell * cell,cell_traverse_boundary_pre_order_all1055,28521
static void cell_traverse_boundary_post_order_all (FttCell * cell,cell_traverse_boundary_post_order_all1083,29255
static void cell_traverse_boundary_leafs (FttCell * cell,cell_traverse_boundary_leafs1106,29825
static void cell_traverse_boundary_pre_order_nonleafs (FttCell * cell,cell_traverse_boundary_pre_order_nonleafs1129,30374
static void cell_traverse_boundary_post_order_nonleafs (FttCell * cell,cell_traverse_boundary_post_order_nonleafs1157,31176
static void cell_traverse_boundary_level (FttCell * cell,cell_traverse_boundary_level1179,31748
static void cell_traverse_boundary_level_leafs (FttCell * cell,cell_traverse_boundary_level_leafs1199,32266
static void cell_traverse_boundary_level_non_leafs (FttCell * cell,cell_traverse_boundary_level_non_leafs1219,32818
void ftt_cell_traverse_boundary (FttCell * root,ftt_cell_traverse_boundary1256,34086
static void oct_destroy (FttOct * oct,oct_destroy1299,35499
void ftt_cell_destroy (FttCell * cell,ftt_cell_destroy1324,36138
void ftt_cell_destroy_root (FttCell * root,ftt_cell_destroy_root1392,38075
void ftt_cell_flatten (FttCell * root,ftt_cell_flatten1476,40743
FttCell * ftt_cell_locate (FttCell * root, ftt_cell_locate1535,42509
static void bubble_sort (FttCellChildren * child, gdouble * d)bubble_sort1576,43633
gdouble ftt_cell_point_distance2_min (FttCell * cell, GtsPoint * p)ftt_cell_point_distance2_min1599,44125
void ftt_cell_point_distance2_internal (FttCell * root,ftt_cell_point_distance2_internal1623,44818
gdouble ftt_cell_point_distance2 (FttCell * root,ftt_cell_point_distance21667,46065
guint ftt_cell_depth (const FttCell * root)ftt_cell_depth1694,46777
void ftt_cell_write (const FttCell * root,ftt_cell_write1728,47653
void ftt_cell_write_binary (const FttCell * root,ftt_cell_write_binary1771,48806
#define FTT_CELL_IS_FLAGGED_LEAF(FTT_CELL_IS_FLAGGED_LEAF1800,49493
static gboolean cell_read (FttCell * cell, cell_read1807,49685
static gboolean oct_read (FttCell * parent,oct_read1842,50646
static void set_neighbors (FttCell * cell)set_neighbors1868,51183
FttCell * ftt_cell_read (GtsFile * fp,ftt_cell_read1887,51777
static gboolean cell_read_binary (FttCell * cell, cell_read_binary1913,52373
static gboolean oct_read_binary (FttCell * parent,oct_read_binary1945,53257
FttCell * ftt_cell_read_binary (GtsFile * fp,ftt_cell_read_binary1985,54302
gboolean ftt_refine_corner (const FttCell * cell)ftt_refine_corner2013,54985
static void copy_cell (const FttCell * from,copy_cell2077,56523
FttCell * ftt_cell_copy (const FttCell * root,ftt_cell_copy2111,57375
void ftt_face_traverse (FttCell * root,ftt_face_traverse2152,58776
static void traverse_face_boundary (FttCell * cell, gpointer * datum) traverse_face_boundary2217,60532
void ftt_face_traverse_boundary (FttCell * root,ftt_face_traverse_boundary2247,61587
gboolean ftt_cell_coarsen (FttCell * root,ftt_cell_coarsen2282,62583
FttDirection ftt_direction_from_name (const gchar * name)ftt_direction_from_name2352,64501
static void cell_traverse_add (FttCell * cell, GPtrArray * a)cell_traverse_add2363,64731
FttCellTraverse * ftt_cell_traverse_new (FttCell * root,ftt_cell_traverse_new2380,65256
void ftt_cell_traverse_rewind (FttCellTraverse * t)ftt_cell_traverse_rewind2406,65892
void ftt_cell_traverse_destroy (FttCellTraverse * t)ftt_cell_traverse_destroy2419,66119

balance.h,347
#define __BALANCE_H____BALANCE_H__21,860
typedef struct _GfsEventBalance         GfsEventBalance;GfsEventBalance31,992
struct _GfsEventBalance {_GfsEventBalance33,1050
  GfsEvent parent;parent34,1076
  gdouble max;max36,1096
#define GFS_EVENT_BALANCE(GFS_EVENT_BALANCE39,1115
#define GFS_IS_EVENT_BALANCE(GFS_IS_EVENT_BALANCE42,1254

solid.c,4564
void gfs_cell_fluid (FttCell * cell)gfs_cell_fluid36,1104
  GtsPoint p[4];p57,1517
  GfsSegment s[4];s58,1534
} CellFace;CellFace59,1553
static void face_fractions (CellFace * f, GfsSolidVector * solid, FttVector * h)face_fractions61,1566
static void face_new (CellFace * f, FttCell * cell, GfsGenericSurface * s, FttVector * h)face_new166,4358
static gboolean solid_face_is_thin (CellFace * f)solid_face_is_thin184,4948
gboolean gfs_set_2D_solid_fractions_from_surface (FttCell * cell,gfs_set_2D_solid_fractions_from_surface213,5552
  gboolean destroy_solid;destroy_solid265,6646
  FttCellCleanupFunc cleanup;cleanup266,6672
  gpointer data;data267,6702
  GfsVariable * status;status268,6719
  guint thin;thin269,6743
  GSList * solid_boxes;solid_boxes270,6757
} InitSolidParams;InitSolidParams271,6781
static gboolean thin_cell_is_solid (FttCell * cell)thin_cell_is_solid273,6801
static void deal_with_thin_cell (FttCell * cell, InitSolidParams * p)deal_with_thin_cell283,7011
static void set_solid_fractions_from_surface (FttCell * cell,set_solid_fractions_from_surface301,7475
gboolean gfs_solid_is_thin (FttCell * cell, GfsGenericSurface * s)gfs_solid_is_thin324,8167
  GtsPoint p[8];p341,8513
  GfsSegment s[12];s342,8530
} CellCube;CellCube343,8550
static void rotate (CellFace * f, FttVector * h, FttComponent c)rotate345,8563
static void cell_size (FttCell * cell, FttVector * h)cell_size368,8972
static guint topology (CellCube * cube)topology385,9524
static void cube_new (CellCube * cube, FttCell * cell, GfsGenericSurface * s, FttVector * o, FttVector * h)cube_new410,9992
static void set_solid_fractions_from_surface (FttCell * cell, set_solid_fractions_from_surface429,10565
gboolean gfs_solid_is_thin (FttCell * cell, GfsGenericSurface * s)gfs_solid_is_thin602,15094
static gdouble solid_sa (GfsSolidVector * s)solid_sa628,15637
void gfs_cell_init_solid_fractions_from_children (FttCell * cell)gfs_cell_init_solid_fractions_from_children650,16113
static void push_leaf (GtsFifo * fifo, FttCell * cell, FttDirection d, gdouble a,push_leaf727,18000
static void paint_leaf (GtsFifo * fifo, gdouble a, GfsVariable * status)paint_leaf751,18723
static void paint_mixed_leaf (FttCell * cell, GfsVariable * status)paint_mixed_leaf766,19082
static void solid_fractions_from_children (FttCell * cell, InitSolidParams * p)solid_fractions_from_children802,20167
static void foreach_box (GfsBox * box, InitSolidParams * p)foreach_box836,21323
static void match_fractions (FttCell * cell, GfsVariable * status)match_fractions843,21576
guint gfs_init_solid_fractions_leaves (GfsDomain * domain,gfs_init_solid_fractions_leaves887,22985
void gfs_init_solid_fractions_from_children (GfsDomain * domain,gfs_init_solid_fractions_from_children929,24445
guint gfs_domain_init_solid_fractions (GfsDomain * domain,gfs_domain_init_solid_fractions970,25694
static gboolean check_area_fractions (const FttCell * root)check_area_fractions990,26292
static void check_solid_fractions (FttCell * cell, gboolean * ret)check_solid_fractions1115,29929
gboolean gfs_cell_check_solid_fractions (FttCell * root)gfs_cell_check_solid_fractions1160,31192
static void save_solid (FttCell * cell, GfsVariable * c)save_solid1171,31499
static void restore_solid (FttCell * cell, gpointer * data)restore_solid1177,31668
static void set_status (FttCell * cell, gpointer * data)set_status1195,32184
static void check_status (GfsBox * box, gpointer * data)check_status1202,32342
void gfs_domain_init_fraction (GfsDomain * domain,gfs_domain_init_fraction1226,33104
void gfs_cell_cm (const FttCell * cell, FttVector * cm)gfs_cell_cm1264,34187
void gfs_solid_normal (const FttCell * cell, FttVector * n)gfs_solid_normal1284,34690
void gfs_face_ca (const FttCellFace * face, FttVector * ca)gfs_face_ca1312,35220
static void outer_fractions_coarse_fine (FttCell * parent, FttDirection d)outer_fractions_coarse_fine1360,36493
void gfs_solid_coarse_fine (FttCell * parent, GfsDomain * domain)gfs_solid_coarse_fine1415,38061
static void gfs_solid_read (GtsObject ** o, GtsFile * fp)gfs_solid_read1523,41163
static void gfs_solid_write (GtsObject * o, FILE * fp)gfs_solid_write1532,41421
static void gfs_solid_destroy (GtsObject * object)gfs_solid_destroy1541,41698
static void gfs_solid_class_init (GtsObjectClass * klass)gfs_solid_class_init1548,41891
static void gfs_solid_init (GfsSolid * object)gfs_solid_init1555,42058
GfsEventClass * gfs_solid_class (void)gfs_solid_class1561,42246

advection.h,1536
#define __ADVECTION_H____ADVECTION_H__21,857
#define GFS_SMALL GFS_SMALL30,982
  GFS_GODUNOV,GFS_GODUNOV33,1020
  GFS_NONEGFS_NONE34,1035
} GfsAdvectionScheme;GfsAdvectionScheme35,1046
  GFS_CENTERED_UPWINDING,GFS_CENTERED_UPWINDING38,1084
  GFS_FACE_UPWINDING,GFS_FACE_UPWINDING39,1110
  GFS_NO_UPWINDING,GFS_NO_UPWINDING40,1132
} GfsUpwinding;GfsUpwinding41,1152
typedef struct _GfsAdvectionParams GfsAdvectionParams;GfsAdvectionParams43,1169
void      (* GfsFaceAdvectionFluxFunc)       (const FttCellFace * face,GfsFaceAdvectionFluxFunc45,1232
typedef void (* GfsMergedTraverseFunc)       (GSList * merged,GfsMergedTraverseFunc47,1348
struct _GfsAdvectionParams {_GfsAdvectionParams50,1439
  gdouble cfl, dt;cfl51,1468
  gdouble cfl, dt;dt51,1468
  GfsVariable * v, * fv, ** u, ** g;v52,1487
  GfsVariable * v, * fv, ** u, ** g;fv52,1487
  GfsVariable * v, * fv, ** u, ** g;u52,1487
  GfsVariable * v, * fv, ** u, ** g;g52,1487
  GfsCenterGradient gradient;gradient53,1524
  gboolean use_centered_velocity;use_centered_velocity54,1554
  GfsUpwinding upwinding;upwinding55,1588
  GfsFaceAdvectionFluxFunc flux;flux56,1614
  GfsAdvectionScheme scheme;scheme57,1647
  gboolean average, gc;average58,1676
  gboolean average, gc;gc58,1676
  GfsMergedTraverseFunc update;update59,1700
  guint moving_order;moving_order60,1732
  GfsFunction * sink[FTT_DIMENSION];sink61,1754
  gboolean linear;linear62,1791
  void (* diffusion_solve) (GfsDomain * domain,diffusion_solve63,1810

vof.c,12439
#define THRESHOLD(THRESHOLD30,1008
gdouble gfs_line_area (const FttVector * m, gdouble alpha)gfs_line_area40,1247
gdouble gfs_line_alpha (const FttVector * m, gdouble c)gfs_line_alpha93,2126
#define EPS EPS121,2661
void gfs_line_center (const FttVector * m, gdouble alpha, gdouble a, FttVector * p)gfs_line_center133,2936
gdouble gfs_line_area_center (const FttVector * m, gdouble alpha, FttVector * p)gfs_line_area_center210,4242
gdouble gfs_plane_volume (const FttVector * m, gdouble alpha)gfs_plane_volume288,5524
gdouble gfs_plane_alpha (const FttVector * m, gdouble c)gfs_plane_alpha344,6986
void gfs_plane_center (const FttVector * m, gdouble alpha, gdouble a, FttVector * p)gfs_plane_center427,8889
gdouble gfs_plane_area_center (const FttVector * m, gdouble alpha, FttVector * p)gfs_plane_area_center547,11265
void gfs_youngs_gradient (FttCell * cell, GfsVariable * v, FttVector * g)gfs_youngs_gradient672,13764
gdouble gfs_vof_plane_interpolate (FttCell * cell,gfs_vof_plane_interpolate717,15296
gdouble gfs_vof_interpolate (FttCell * cell,gfs_vof_interpolate764,16550
# define F(F792,17193
# define F(F794,17225
static void stencil (FttCell * cell, GfsVariable * v, gdouble F(3,3,3))stencil797,17262
static void youngs_normal (FttCell * cell, GfsVariable * v, FttVector * n)youngs_normal850,18794
static void myc_normal (FttCell * cell, GfsVariable * v, FttVector * n)myc_normal892,20164
static void vof_plane (FttCell * cell, GfsVariable * v)vof_plane903,20338
static void no_coarse_fine (FttCell * cell,  GfsVariable * v) {}no_coarse_fine936,21190
static void allocate_normal_alpha (GfsVariableTracerVOF * t)allocate_normal_alpha938,21256
static void variable_tracer_vof_update (GfsVariable * v, GfsDomain * domain)variable_tracer_vof_update962,22202
static gboolean variable_tracer_vof_event (GfsEvent * event, variable_tracer_vof_event987,23088
static void variable_tracer_vof_destroy (GtsObject * o)variable_tracer_vof_destroy999,23472
static void variable_tracer_vof_read (GtsObject ** o, GtsFile * fp)variable_tracer_vof_read1014,23913
static void variable_tracer_vof_class_init (GtsObjectClass * klass)variable_tracer_vof_class_init1029,24356
static void vof_coarse_fine (FttCell * parent, GfsVariable * v)vof_coarse_fine1037,24659
static void vof_fine_coarse (FttCell * parent, GfsVariable * v)vof_fine_coarse1097,26359
static void variable_tracer_vof_init (GfsVariable * v)variable_tracer_vof_init1163,28104
GfsVariableTracerVOFClass * gfs_variable_tracer_vof_class (void)gfs_variable_tracer_vof_class1175,28539
  GfsAdvectionParams * par, vpar;par1196,29131
  GfsAdvectionParams * par, vpar;vpar1196,29131
  GfsVariable * u, * du[FTT_DIMENSION - 1], * vof;u1197,29165
  GfsVariable * u, * du[FTT_DIMENSION - 1], * vof;du1197,29165
  GfsVariable * u, * du[FTT_DIMENSION - 1], * vof;vof1197,29165
  FttComponent c;c1198,29216
  GfsDomain * domain;domain1199,29234
  GfsFunction * sink;sink1200,29256
  guint depth, too_coarse;depth1201,29278
  guint depth, too_coarse;too_coarse1201,29278
} VofParms;VofParms1202,29305
static gdouble plane_volume_shifted (FttVector m, gdouble alpha, FttVector p[2])plane_volume_shifted1204,29318
static gdouble fine_fraction (FttCellFace * face, GfsVariable * v, gdouble un, FttVector q[2])fine_fraction1215,29589
static gdouble coarse_fraction (FttCellFace * face, GfsVariable * v, gdouble un, FttVector q[2])coarse_fraction1239,30245
#define TOO_COARSE(TOO_COARSE1270,31218
static void face_too_coarse (FttCellFace * face, VofParms * p)face_too_coarse1274,31403
static void vof_cell_fine_init (FttCell * parent, VofParms * p)vof_cell_fine_init1293,31939
static void vof_cell_fine_init_with_streamfunction (FttCell * parent, VofParms * p)vof_cell_fine_init_with_streamfunction1405,35656
static void refine_too_coarse (FttCell * cell, VofParms * p)refine_too_coarse1418,36000
static void fix_too_coarse (GfsDomain * domain, VofParms * p)fix_too_coarse1432,36462
static void concentration_face_values (FttCell * cell, VofParms * p)concentration_face_values1465,37641
static void vof_flux (FttCellFace * face, VofParms * p)vof_flux1481,38316
static void initialize_dV (FttCell * cell, GfsVariable * dV)initialize_dV1584,41585
static void reset_fluxes (FttCellFace * face, VofParms * p)reset_fluxes1589,41680
static void grad_u (FttCell * cell, VofParms * p)grad_u1595,41913
static void f_times_dV (FttCell * cell, VofParms * p)f_times_dV1604,42203
static void concentration_times_dV (FttCell * cell, VofParms * p)concentration_times_dV1609,42324
static void f_over_dV (FttCell * cell, VofParms * p)f_over_dV1614,42482
static void concentration_over_dV (FttCell * cell, VofParms * p)concentration_over_dV1621,42732
static void per_vof_volume (FttCell * cell, GfsVariable * v)per_vof_volume1630,43004
static void per_cell_volume (FttCell * cell, GfsVariable * v)per_cell_volume1637,43254
static void add_sink_velocity (FttCell * cell, VofParms * p)add_sink_velocity1643,43447
static void remove_sink_velocity (FttCell * cell, VofParms * p)remove_sink_velocity1648,43577
void gfs_tracer_vof_advection (GfsDomain * domain,gfs_tracer_vof_advection1661,43900
static gdouble face_value (FttCell * cell, FttDirection d, GfsVariable * v)face_value1771,48356
gdouble gfs_vof_face_value (const FttCellFace * face, GfsVariableTracerVOF * t)gfs_vof_face_value1803,49110
guint gfs_vof_facet (FttCell * cell,gfs_vof_facet1865,51000
gdouble gfs_vof_facet_distance2 (FttCell * cell,gfs_vof_facet_distance21946,53005
gdouble gfs_vof_center (FttCell * cell, GfsVariableTracerVOF * t, FttVector * p)gfs_vof_center2013,55069
static gdouble fraction (FttVector * p,fraction2034,55716
#define NMAX NMAX2045,56021
#define ADD_H(ADD_H2047,56038
#define SIGN(SIGN2048,56072
static gdouble local_height (FttVector * p,local_height2050,56111
static gboolean curvature_along_direction (FttCell * cell, curvature_along_direction2100,57519
#define PARABOLA_FIT_CENTER_WEIGHT PARABOLA_FIT_CENTER_WEIGHT2213,60477
#define PARABOLA_SIMPLER PARABOLA_SIMPLER2214,60515
  GtsVector o;o2217,60560
  GtsVector m;m2219,60621
  GtsMatrix * M;M2220,60636
  GtsVector rhs, a;rhs2221,60653
  GtsVector rhs, a;a2221,60653
  GtsMatrix * M;M2224,60751
  GtsVector rhs, a;rhs2225,60768
  GtsVector rhs, a;a2225,60768
  gdouble ** M, rhs[6], a[6];M2227,60861
  gdouble ** M, rhs[6], a[6];rhs2227,60861
  gdouble ** M, rhs[6], a[6];a2227,60861
  GtsVector t[3];t2229,60899
} ParabolaFit;ParabolaFit2231,60933
static void parabola_fit_init (ParabolaFit * p, FttVector * o, FttVector * m)parabola_fit_init2233,60949
static void parabola_fit_add (ParabolaFit * p, GtsVector m, gdouble w)parabola_fit_add2277,62351
static void parabola_fit_solve (ParabolaFit * p)parabola_fit_solve2319,63840
static gdouble parabola_fit_curvature (ParabolaFit * p, gdouble kappamax,parabola_fit_curvature2370,65511
static void parabola_fit_axi_curvature (const ParabolaFit * p, gdouble r, gdouble h,parabola_fit_axi_curvature2409,66417
static void parabola_fit_destroy (ParabolaFit * p)parabola_fit_destroy2420,66790
static void add_vof_center (FttCell * cell, FttVector * p, guint level,add_vof_center2429,66947
static void fit_from_fractions (FttCell * cell, GfsVariable * v, ParabolaFit * fit)fit_from_fractions2447,67562
gdouble gfs_fit_curvature (FttCell * cell, GfsVariableTracerVOF * t, gdouble * kmax)gfs_fit_curvature2486,68774
# define NI NI2523,69816
# define NI NI2525,69836
static void orientation (FttVector * m, FttComponent * c)orientation2528,69858
static guint independent_positions (GtsVector * interface, guint n)independent_positions2542,70214
gdouble gfs_height_curvature (FttCell * cell, GfsVariableTracerVOF * t, gdouble * kmax)gfs_height_curvature2580,71266
static gdouble neighboring_column (FttCell * cell, neighboring_column2646,73291
static void curvature_from_h (FttCell * cell, GfsDomain * domain,curvature_from_h2682,74326
gboolean gfs_curvature_along_direction (FttCell * cell, gfs_curvature_along_direction2727,75616
static gboolean curvature_along_direction_new (FttCell * cell, curvature_along_direction_new2764,76706
gdouble gfs_height_curvature_new (FttCell * cell, GfsVariableTracerVOFHeight * t, gfs_height_curvature_new2834,79114
gdouble gfs_vof_correctness (FttCell * cell, GfsVariableTracerVOF * t)gfs_vof_correctness2906,81262
static void variable_vof_concentration_read (GtsObject ** o, GtsFile * fp)variable_vof_concentration_read2940,82693
static void variable_vof_concentration_write (GtsObject * o, FILE * fp)variable_vof_concentration_write2966,83612
static void variable_vof_concentration_class_init (GtsObjectClass * klass)variable_vof_concentration_class_init2972,83869
static void variable_vof_concentration_init (GfsVariable * v)variable_vof_concentration_init2978,84049
GfsVariableClass * gfs_variable_vof_concentration_class (void)gfs_variable_vof_concentration_class2985,84283
  GfsVariable * f; /* volume fraction */f3010,84980
  GfsVariable * hb, * ht; /* heights in either orientation */hb3011,85021
  GfsVariable * hb, * ht; /* heights in either orientation */ht3011,85021
  GfsBc * angle; /* contact angle BC */angle3012,85083
  FttComponent c; /* x, y or z */c3013,85123
  FttDirection d;d3014,85157
} HFState;HFState3015,85175
static gboolean is_interfacial (FttCell * cell, gpointer data)is_interfacial3017,85187
static void undefined_height (FttCell * cell, HFState * hf)undefined_height3023,85326
#define HMAX HMAX3029,85473
#define SIGN(SIGN3030,85488
#define BOUNDARY_HIT BOUNDARY_HIT3031,85526
static gint children_half_height (FttCell * cell, FttDirection d, GfsVariable * fv,children_half_height3033,85558
static gint half_height (FttCell * cell, GfsVariable * fv, FttDirection d,half_height3066,86292
#define DMAX DMAX3094,87043
static void height_propagation (FttCell * cell, HFState * hf, GfsVariable * h, gdouble orientation)height_propagation3096,87060
static void height (FttCell * cell, HFState * hf)height3114,87694
static GfsVariable * boundary_hit (FttCell * cell, HFState * hf)boundary_hit3182,89615
static void height_propagation_from_boundary (FttCell * cell, HFState * hf, GfsVariable * h)height_propagation_from_boundary3191,89900
static void height_periodic_bc (FttCell * cell, HFState * hf)height_periodic_bc3213,90705
#define SLOPE_MAX SLOPE_MAX3250,92046
#define THETA_MIN THETA_MIN3251,92077
static gdouble contact_angle_bc (FttCell * cell, HFState * hf)contact_angle_bc3253,92117
static void height_contact_normal_bc (FttCell * cell, HFState * hf)height_contact_normal_bc3264,92416
static void contact_angle_height (FttCell * cell, GfsVariable * h, HFState * hf)contact_angle_height3322,94790
static void height_contact_tangential_bc (FttCell * cell, HFState * hf)height_contact_tangential_bc3357,96260
static void box_periodic_bc (GfsBox * box, HFState * hf)box_periodic_bc3365,96469
static void box_contact_bc (GfsBox * box, HFState * hf)box_contact_bc3373,96785
static void remaining_boundary_height_undefined (FttCell * cell, HFState * hf)remaining_boundary_height_undefined3390,97473
static gboolean height_normal (FttCell * cell, GfsVariable * v, FttVector * m)height_normal3397,97649
static void vof_height_plane (FttCell * cell, GfsVariable * v)vof_height_plane3435,98802
static void variable_tracer_vof_height_update (GfsVariable * v, GfsDomain * domain)variable_tracer_vof_height_update3469,99696
static void variable_tracer_vof_height_destroy (GtsObject * o)variable_tracer_vof_height_destroy3521,101824
static void undefined_coarse_fine (FttCell * parent, GfsVariable * v)undefined_coarse_fine3536,102301
static void variable_tracer_vof_height_read (GtsObject ** o, GtsFile * fp)variable_tracer_vof_height_read3546,102548
static void variable_tracer_vof_height_class_init (GtsObjectClass * klass)variable_tracer_vof_height_class_init3577,103836
GfsVariableTracerVOFClass * gfs_variable_tracer_vof_height_class (void)gfs_variable_tracer_vof_height_class3584,104105
GfsVariable * gfs_closest_height (FttCell * cell, gfs_closest_height3615,105043
static gdouble interface_fractions (FttVector m, gdouble alpha, FttDirection d)interface_fractions3643,105753
gdouble gfs_vof_face_fraction (const FttCellFace * face,gfs_vof_face_fraction3667,106368

adaptive.c,8090
void gfs_cell_coarse_init (FttCell * cell, GfsDomain * domain)gfs_cell_coarse_init43,1222
  GfsSimulation * sim;sim66,1651
  guint nc;nc67,1674
  GtsEHeap * hcoarse, * hfine;hcoarse68,1686
  GtsEHeap * hcoarse, * hfine;hfine68,1686
  gdouble clim;clim69,1717
  GfsVariable * hcoarsev, * hfinev, * costv, * c;hcoarsev70,1733
  GfsVariable * hcoarsev, * hfinev, * costv, * c;hfinev70,1733
  GfsVariable * hcoarsev, * hfinev, * costv, * c;costv70,1733
  GfsVariable * hcoarsev, * hfinev, * costv, * c;c70,1733
} AdaptParams;AdaptParams71,1783
static void gfs_adapt_destroy (GtsObject * o)gfs_adapt_destroy73,1799
static void none (FttCell * cell, GfsVariable * v) {}none81,2045
static void gfs_adapt_read (GtsObject ** o, GtsFile * fp)gfs_adapt_read83,2100
static void gfs_adapt_write (GtsObject * o, FILE * fp)gfs_adapt_write228,6181
static gboolean gfs_adapt_event (GfsEvent * event, GfsSimulation * sim)gfs_adapt_event255,7013
static void save_cost (FttCell * cell, GfsAdapt * a)save_cost270,7420
static void gfs_adapt_post_event (GfsEvent * event, GfsSimulation * sim)gfs_adapt_post_event275,7528
static void gfs_adapt_class_init (GfsEventClass * klass)gfs_adapt_class_init283,7798
static void gfs_adapt_init (GfsAdapt * object)gfs_adapt_init292,8099
GfsEventClass * gfs_adapt_class (void)gfs_adapt_class305,8452
static gboolean gfs_adapt_vorticity_event (GfsEvent * event, gfs_adapt_vorticity_event331,9045
static void gfs_adapt_vorticity_class_init (GfsEventClass * klass)gfs_adapt_vorticity_class_init345,9496
static gdouble cost_vorticity (FttCell * cell, GfsAdaptVorticity * a)cost_vorticity350,9630
static void gfs_adapt_vorticity_init (GfsAdaptVorticity * object)gfs_adapt_vorticity_init357,9814
GfsEventClass * gfs_adapt_vorticity_class (void)gfs_adapt_vorticity_class362,9943
static void gfs_adapt_streamline_curvature_init (GfsAdapt * object)gfs_adapt_streamline_curvature_init390,10603
GfsEventClass * gfs_adapt_streamline_curvature_class (void)gfs_adapt_streamline_curvature_class395,10732
static void gfs_adapt_function_destroy (GtsObject * o)gfs_adapt_function_destroy423,11463
static void gfs_adapt_function_read (GtsObject ** o, GtsFile * fp)gfs_adapt_function_read430,11668
static void gfs_adapt_function_write (GtsObject * o, FILE * fp)gfs_adapt_function_write439,11946
static void gfs_adapt_function_class_init (GtsObjectClass * klass)gfs_adapt_function_class_init445,12152
static gdouble function_cost (FttCell * cell, GfsAdaptFunction * a)function_cost452,12357
static void gfs_adapt_function_init (GfsAdaptFunction * object)gfs_adapt_function_init457,12472
GfsEventClass * gfs_adapt_function_class (void)gfs_adapt_function_class463,12658
static void gfs_adapt_gradient_destroy (GtsObject * o)gfs_adapt_gradient_destroy491,13361
static void gfs_adapt_gradient_read (GtsObject ** o, GtsFile * fp)gfs_adapt_gradient_read499,13659
static void update_f (FttCell * cell, GfsAdaptFunction * a)update_f511,14065
static gboolean gfs_adapt_gradient_event (GfsEvent * event, gfs_adapt_gradient_event516,14211
static void gfs_adapt_gradient_class_init (GfsEventClass * klass)gfs_adapt_gradient_class_init538,15117
static gdouble gradient_cost (FttCell * cell, GfsAdaptGradient * a)gradient_cost545,15357
static void gfs_adapt_gradient_init (GfsAdaptGradient * object)gfs_adapt_gradient_init560,15724
GfsEventClass * gfs_adapt_gradient_class (void)gfs_adapt_gradient_class566,15897
static void gfs_adapt_error_destroy (GtsObject * o)gfs_adapt_error_destroy594,16591
static void gfs_adapt_error_read (GtsObject ** o, GtsFile * fp)gfs_adapt_error_read602,16839
static void compute_gradient (FttCell * cell, GfsAdaptError * a)compute_gradient614,17261
static void add_hessian_norm (FttCell * cell, GfsAdaptError * a)add_hessian_norm620,17449
static void scale (FttCell * cell, GfsAdaptError * a)scale634,17869
static gboolean gfs_adapt_error_event (GfsEvent * event, gfs_adapt_error_event639,18023
static void gfs_adapt_error_class_init (GfsEventClass * klass)gfs_adapt_error_class_init670,19324
static gdouble cost_error (FttCell * cell, GfsAdaptError * a)cost_error677,19570
static void gfs_adapt_error_init (GfsAdapt * object)gfs_adapt_error_init682,19670
GfsEventClass * gfs_adapt_error_class (void)gfs_adapt_error_class688,19794
static void gfs_adapt_thickness_destroy (GtsObject * o)gfs_adapt_thickness_destroy716,20499
static void gfs_adapt_thickness_read (GtsObject ** o, GtsFile * fp)gfs_adapt_thickness_read724,20743
static void gfs_adapt_thickness_write (GtsObject * o, FILE * fp)gfs_adapt_thickness_write753,21613
static void update_thickness (FttCell * cell, GfsAdapt * a)update_thickness759,21825
static gboolean gfs_adapt_thickness_event (GfsEvent * event, gfs_adapt_thickness_event781,22639
static void gfs_adapt_thickness_class_init (GfsEventClass * klass)gfs_adapt_thickness_class_init793,23034
static gdouble thickness_cost (FttCell * cell, GfsAdaptThickness * a)thickness_cost801,23341
static void gfs_adapt_thickness_init (GfsAdaptThickness * object)gfs_adapt_thickness_init806,23496
GfsEventClass * gfs_adapt_thickness_class (void)gfs_adapt_thickness_class814,23684
static void refine_cell_corner (FttCell * cell, GfsDomain * domain)refine_cell_corner836,24241
void gfs_domain_reshape (GfsDomain * domain, guint depth)gfs_domain_reshape850,24684
#define CELL_COST(CELL_COST876,25279
#define CELL_HCOARSE(CELL_HCOARSE877,25332
#define CELL_HFINE(CELL_HFINE878,25409
static FttCell * remove_top_coarse (GtsEHeap * h, gdouble * cost, GfsVariable * hcoarse)remove_top_coarse880,25483
static FttCell * remove_top_fine (GtsEHeap * h, gdouble * cost, GfsVariable * hfine)remove_top_fine894,25837
static gdouble refine_cost (FttCell * cell, GfsSimulation * sim)refine_cost908,26209
static void compute_cost (FttCell * cell, AdaptParams * p)compute_cost924,26493
static void store_cost (FttCell * cell, AdaptParams * p)store_cost955,27382
static guint minlevel (FttCell * cell, GfsSimulation * sim)minlevel960,27489
static guint maxlevel (FttCell * cell, GfsSimulation * sim)maxlevel976,27810
static void fill_heaps (FttCell * cell, AdaptParams * p)fill_heaps992,28134
static gboolean fine_cell_coarsenable (FttCell * cell, AdaptParams * p)fine_cell_coarsenable1006,28719
static void fine_cell_cleanup (FttCell * cell, AdaptParams * p)fine_cell_cleanup1021,29094
static void cell_fine_init (FttCell * cell, AdaptParams * p)cell_fine_init1035,29429
static gboolean adapt_global (GfsSimulation * simulation,adapt_global1050,29826
  GfsSimulation * sim;sim1144,33117
  guint depth, nc;depth1145,33140
  guint depth, nc;nc1145,33140
  GfsVariable * r, * c;r1146,33159
  GfsVariable * r, * c;c1146,33159
  GfsAdaptStats * s;s1147,33183
  gboolean changed;changed1148,33204
} AdaptLocalParams;AdaptLocalParams1149,33224
#define REFINABLE(REFINABLE1151,33245
#define COARSENABLE(COARSENABLE1152,33299
static gboolean coarsen_cell (FttCell * cell, AdaptLocalParams * p)coarsen_cell1154,33356
static void cell_cleanup (FttCell * cell, AdaptLocalParams * p)cell_cleanup1163,33580
static void coarsen_box (GfsBox * box, AdaptLocalParams * p)coarsen_box1173,33794
static void local_cell_fine_init (FttCell * parent,  AdaptLocalParams * p)local_cell_fine_init1180,33980
static void refine_cell (FttCell * cell, AdaptLocalParams * p)refine_cell1190,34262
static void refine_cell_mark (FttCell * cell, AdaptLocalParams * p)refine_cell_mark1203,34643
static void check_periodic (FttCellFace * f, AdaptLocalParams * p)check_periodic1235,35612
static void enforce_periodic (GfsBox * box, AdaptLocalParams * p)enforce_periodic1242,35808
static gboolean adapt_local (GfsSimulation * sim, guint * depth, GfsAdaptStats * s)adapt_local1254,36199
gboolean gfs_simulation_adapt (GfsSimulation * simulation)gfs_simulation_adapt1297,37680
void gfs_adapt_stats_init (GfsAdaptStats * s)gfs_adapt_stats_init1362,39379
void gfs_adapt_stats_update (GfsAdaptStats * s)gfs_adapt_stats_update1379,39664

simulation.c,10168
static void module_close (GModule *module)module_close44,1286
static void simulation_destroy (GtsObject * object)simulation_destroy50,1435
static void simulation_write (GtsObject * object, FILE * fp)simulation_write76,2450
static gboolean strmatch (const gchar * s, const gchar * s1)strmatch171,4895
static GModule * load_module (GtsFile * fp, GfsSimulation * sim)load_module183,5112
static void simulation_read (GtsObject ** object, GtsFile * fp)simulation_read237,6500
void gfs_advance_tracers (GfsSimulation * sim, gdouble dt)gfs_advance_tracers404,11832
static void simulation_run (GfsSimulation * sim)simulation_run431,12684
static gdouble simulation_cfl (GfsSimulation * sim)simulation_cfl553,16943
static void gfs_simulation_class_init (GfsSimulationClass * klass)gfs_simulation_class_init575,17694
static gdouble cell_x (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_x587,18023
static gdouble cell_y (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_y601,18313
static gdouble cell_z (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_z615,18603
static gdouble cell_ax (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_ax629,18893
static gdouble cell_ay (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_ay641,19183
static gdouble cell_az (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_az653,19473
static gdouble cell_cx (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_cx665,19763
static gdouble cell_cy (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_cy679,20056
static gdouble cell_cz (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_cz693,20349
static gdouble cell_rx (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_rx707,20642
static gdouble cell_ry (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_ry720,20895
static gdouble cell_rz (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_rz733,21148
static gdouble cell_dV (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_dV746,21401
static gdouble cell_dL (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_dL758,21647
static gdouble cell_t (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_t765,21823
static gdouble cell_dt (FttCell * cell, FttCellFace * face, GfsSimulation * sim)cell_dt770,21930
static gdouble cell_vorticity (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_vorticity775,22051
static gdouble cell_divergence (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_divergence780,22204
static gdouble cell_velocity_norm (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_velocity_norm785,22359
static gdouble cell_velocity_norm2 (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_velocity_norm2791,22578
static gdouble cell_level (FttCell * cell)cell_level797,22801
static gdouble cell_fraction (FttCell * cell)cell_fraction802,22881
static gdouble cell_solid_area (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_solid_area808,23039
static gdouble cell_solid_sr (FttCell * cell)cell_solid_sr816,23305
static gdouble cell_solid_sl (FttCell * cell)cell_solid_sl821,23431
static gdouble cell_solid_st (FttCell * cell)cell_solid_st826,23556
static gdouble cell_solid_sb (FttCell * cell)cell_solid_sb831,23680
static gdouble cell_solid_sf (FttCell * cell)cell_solid_sf837,23819
static gdouble cell_solid_sk (FttCell * cell)cell_solid_sk842,23945
static gdouble cell_velocity_lambda2 (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_velocity_lambda2848,24086
static gdouble cell_streamline_curvature (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_streamline_curvature853,24251
static gdouble cell_2nd_principal_invariant (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_2nd_principal_invariant859,24486
static gdouble cell_pid (FttCell * cell)cell_pid864,24688
static gdouble cell_id (FttCell * cell)cell_id871,24858
static gdouble cell_orthogonality (FttCell * cell, FttCellFace * face, GfsDomain * domain)cell_orthogonality878,25026
static void simulation_init (GfsSimulation * object)simulation_init904,25874
GfsSimulationClass * gfs_simulation_class (void)gfs_simulation_class1011,30779
GfsSimulation * gfs_simulation_new (GfsSimulationClass * klass)gfs_simulation_new1032,31323
static void init_non_variable (GfsEvent * event, GfsSimulation * sim)init_non_variable1043,31594
static void redo_non_variable (GfsEvent * event, GfsSimulation * sim)redo_non_variable1049,31734
void gfs_simulation_init (GfsSimulation * sim)gfs_simulation_init1062,32055
static void refine_cell_corner (FttCell * cell, GfsDomain * domain)refine_cell_corner1099,33314
static void check_face (FttCellFace * f, guint * nf)check_face1105,33524
static void check_solid_fractions (GfsBox * box, guint * nf)check_solid_fractions1113,33710
guint gfs_check_solid_fractions (GfsDomain * domain)gfs_check_solid_fractions1132,34201
static void is_diffusion (GfsSource * s, gboolean * diffusion)is_diffusion1141,34421
static void set_permanent (FttCell * cell)set_permanent1146,34543
GSList * gfs_simulation_get_solids (GfsSimulation * sim)gfs_simulation_get_solids1158,34784
static gboolean coarsen_cell (void)coarsen_cell1170,35043
static void refine_leaf_boxes (GfsBox * box, GfsDomain * domain)refine_leaf_boxes1175,35099
void gfs_simulation_refine (GfsSimulation * sim)gfs_simulation_refine1197,35924
GfsSimulation * gfs_simulation_read (GtsFile * fp)gfs_simulation_read1270,38016
static void write_preloaded_modules (GfsSimulation * sim, FILE * fp)write_preloaded_modules1311,39088
void gfs_simulation_write (GfsSimulation * sim,gfs_simulation_write1337,39886
static void count_edges (GtsGEdge * e, guint * nedge)count_edges1358,40432
static void write_node (GtsObject * node, gpointer * data)write_node1363,40505
static void write_edge (GtsGEdge * edge, FILE * fp)write_edge1374,40755
void gfs_simulation_union_write (GfsSimulation * sim,gfs_simulation_union_write1396,41441
static gdouble min_cfl (GfsSimulation * sim)min_cfl1463,43533
void gfs_simulation_set_timestep (GfsSimulation * sim)gfs_simulation_set_timestep1495,44466
void gfs_time_write (GfsTime * t, FILE * fp)gfs_time_write1568,46544
void gfs_time_init (GfsTime * t)gfs_time_init1593,47173
void gfs_time_read (GfsTime * t, GtsFile * fp)gfs_time_read1613,47494
void gfs_physical_params_write (GfsPhysicalParams * p, FILE * fp)gfs_physical_params_write1653,48401
void gfs_physical_params_init (GfsPhysicalParams * p)gfs_physical_params_init1672,48838
void gfs_physical_params_read (GfsPhysicalParams * p, GfsDomain * domain, GtsFile * fp)gfs_physical_params_read1688,49159
static void error_handler (const gchar *log_domain,error_handler1764,50876
void gfs_simulation_run (GfsSimulation * sim)gfs_simulation_run1796,51686
void gfs_simulation_map (GfsSimulation * sim, FttVector * p)gfs_simulation_map1819,52361
void gfs_simulation_map_inverse (GfsSimulation * sim, FttVector * p)gfs_simulation_map_inverse1842,52890
void gfs_simulation_map_vector (GfsSimulation * sim, const FttVector * p, FttVector * v)gfs_simulation_map_vector1869,53572
void gfs_simulation_map_inverse_vector (GfsSimulation * sim, const FttVector * p, FttVector * v)gfs_simulation_map_inverse_vector1891,54116
void gfs_simulation_map_inverse_cell (GfsSimulation * sim, FttVector p[4])gfs_simulation_map_inverse_cell1916,54869
gdouble gfs_dimensional_value (GfsVariable * v, gdouble val)gfs_dimensional_value1942,55566
gboolean gfs_variable_is_dimensional (GfsVariable * v)gfs_variable_is_dimensional1959,55969
static void event_do_adapt (GfsEvent * event, GfsSimulation * sim)event_do_adapt1975,56281
static void event_do_not_adapt (GfsEvent * event, GfsSimulation * sim)event_do_not_adapt1981,56412
static void advection_run (GfsSimulation * sim)advection_run1987,56548
static void gfs_advection_class_init (GfsSimulationClass * klass)gfs_advection_class_init2044,58524
GfsSimulationClass * gfs_advection_class (void)gfs_advection_class2049,58625
  GfsVariable * divu, * div;divu2077,59261
  GfsVariable * divu, * div;div2077,59261
  gdouble ddiv;ddiv2078,59290
  GtsRange vol;vol2079,59306
} DivData;DivData2080,59322
static void rescale_div (FttCell * cell, DivData * p)rescale_div2082,59334
static void add_ddiv (FttCell * cell, DivData * p)add_ddiv2090,59599
static void correct_div (GfsDomain * domain, GfsVariable * divu, GfsVariable * div,correct_div2096,59791
static void has_dirichlet (FttCell * cell, GfsVariable * p)has_dirichlet2114,60389
  GfsVariable * lhs;lhs2121,60545
  gboolean dirichlet;dirichlet2122,60566
} CompatPar;CompatPar2123,60588
static void check_box_dirichlet (GfsBox * box, CompatPar * p)check_box_dirichlet2125,60602
static void poisson_run (GfsSimulation * sim)poisson_run2139,60967
static void poisson_class_init (GfsSimulationClass * klass)poisson_class_init2213,63704
static void poisson_init (GfsDomain * domain)poisson_init2218,63797
GfsSimulationClass * gfs_poisson_class (void)gfs_poisson_class2224,63976
static void axi_read (GtsObject ** object, GtsFile * fp)axi_read2251,64594
static gdouble axi_face_metric (const GfsDomain * domain, const FttCellFace * face)axi_face_metric2269,65144
static gdouble axi_cell_metric (const GfsDomain * domain, const FttCell * cell)axi_cell_metric2276,65289
static void axi_solid_metric (const GfsDomain * domain, const FttCell * cell, FttVector * m)axi_solid_metric2283,65429
static gdouble axi_scale_metric (const GfsDomain * domain, const FttCell * cell, FttComponent c)axi_scale_metric2289,65608
static gdouble axi_viscous_metric_implicit (const GfsDomain * domain, axi_viscous_metric_implicit2298,65793
static void axi_class_init (GfsSimulationClass * klass)axi_class_init2308,66007
static void axi_init (GfsDomain * domain)axi_init2313,66113
GfsSimulationClass * gfs_axi_class (void)gfs_axi_class2322,66395
GfsSimulationClass * gfs_advection_axi_class (void)gfs_advection_axi_class2349,66998

unstructured.c,2379
#define NV NV31,1036
static void reset_pointers (FttCell * cell, GfsVariable ** v)reset_pointers33,1072
  FttCell * cell;cell41,1253
  guint i, index;i42,1271
  guint i, index;index42,1271
} Vertex;Vertex43,1289
static FttDirection d[NV][FTT_DIMENSION] = {d46,1327
static void vertex_pos (Vertex * v, FttVector * p, GfsSimulation * sim)vertex_pos57,1769
static float vertex_value (Vertex * vertex, GfsVariable * v, gint max_depth)vertex_value63,1925
  GfsVariable ** v;v70,2136
  GfsDomain * domain;domain71,2156
  GSList * vertices;vertices72,2178
  gint max_depth;max_depth73,2199
  guint size, index;size74,2217
  guint size, index;index74,2217
} AllocParams;AllocParams75,2238
static void allocate_vertices (FttCell * cell, AllocParams * par)allocate_vertices77,2254
static GSList * allocate_domain_vertices (GfsDomain * domain, allocate_domain_vertices133,3810
static void print_pos (Vertex * v)print_pos155,4470
static void draw_vertices (FttCell * cell, GfsVariable ** v)draw_vertices164,4647
  FILE * fp;fp179,5053
  GfsVariable ** v;v180,5066
} WriteParams;WriteParams181,5086
static void write_element (FttCell * cell, WriteParams * par)write_element183,5102
static void cell_count (FttCell * cell, guint * count)cell_count194,5379
static guint local_domain_size (GfsDomain * domain, gint max_depth)local_domain_size199,5454
void gfs_domain_write_vtk (GfsDomain * domain, gint max_depth, GSList * variables, gfs_domain_write_vtk218,6047
static void write_tecplot_element (FttCell * cell, WriteParams * par)write_tecplot_element308,8555
void gfs_domain_write_tecplot (GfsDomain * domain, gint max_depth, GSList * variables, gfs_domain_write_tecplot337,9331
  FttCell * cell;             /* cell */cell413,11488
  guint nnodes;               /* number of nodes (3 or 4) */nnodes414,11529
  FttVector node[4];          /* node coordinates */node415,11590
} WallFace;WallFace416,11643
  GfsDomain * domain;domain419,11673
  GSList * wallfaces;wallfaces420,11695
  guint nnodes_total;nnodes_total421,11717
} AllocateFacesParams;AllocateFacesParams422,11739
static void allocate_wallfaces (FttCell * cell, AllocateFacesParams * par)allocate_wallfaces424,11763
void gfs_domain_write_tecplot_surface (GfsDomain * domain, gint max_depth, GSList * variables, gfs_domain_write_tecplot_surface555,16520

ftt.h,6918
#define __FTT_H____FTT_H__21,851
#define FTT_MAINTAINER FTT_MAINTAINER32,1003
# define FTT_CELLS FTT_CELLS35,1060
# define FTT_CELLS FTT_CELLS37,1105
typedef struct _FttCell          FttCell;FttCell40,1151
typedef struct _FttCellFace      FttCellFace;FttCellFace41,1193
typedef struct _FttCellNeighbors FttCellNeighbors;FttCellNeighbors42,1239
typedef struct _FttCellChildren  FttCellChildren;FttCellChildren43,1290
typedef struct _FttVector        FttVector;FttVector45,1341
struct _FttVector {_FttVector47,1386
  gdouble x, y, z;x48,1406
  gdouble x, y, z;y48,1406
  gdouble x, y, z;z48,1406
# define ftt_vector_norm(ftt_vector_norm52,1440
# define ftt_vector_distance(ftt_vector_distance53,1506
# define ftt_vector_norm(ftt_vector_norm56,1651
# define ftt_vector_distance(ftt_vector_distance57,1733
  FTT_TRAVERSE_LEAFS          = 1 << 0,FTT_TRAVERSE_LEAFS64,1944
  FTT_TRAVERSE_NON_LEAFS      = 1 << 1,FTT_TRAVERSE_NON_LEAFS65,1984
  FTT_TRAVERSE_LEVEL          = 1 << 2,FTT_TRAVERSE_LEVEL66,2024
  FTT_TRAVERSE_BOUNDARY_FACES = 1 << 3,FTT_TRAVERSE_BOUNDARY_FACES67,2064
  FTT_TRAVERSE_DESTROYED      = 1 << 4,FTT_TRAVERSE_DESTROYED68,2104
  FTT_TRAVERSE_ALL            = FTT_TRAVERSE_LEAFS | FTT_TRAVERSE_NON_LEAFSFTT_TRAVERSE_ALL69,2144
} FttTraverseFlags;FttTraverseFlags70,2220
  FTT_PRE_ORDER,FTT_PRE_ORDER74,2256
  FTT_POST_ORDERFTT_POST_ORDER75,2273
} FttTraverseType;FttTraverseType76,2290
  FTT_RIGHT = 0,FTT_RIGHT80,2325
  FTT_LEFT,FTT_LEFT81,2342
  FTT_TOP,FTT_TOP82,2354
  FTT_BOTTOM,FTT_BOTTOM83,2365
  FTT_FRONT,FTT_FRONT85,2393
  FTT_BACK,FTT_BACK86,2406
  FTT_NEIGHBORSFTT_NEIGHBORS88,2438
} FttDirection;FttDirection89,2454
#define FTT_NEIGHBORS_2D FTT_NEIGHBORS_2D91,2471
#define FTT_CELLS_DIRECTION(FTT_CELLS_DIRECTION92,2513
GTS_C_VAR gchar * ftt_direction_name[FTT_NEIGHBORS]; /* defined in ftt.c */ftt_direction_name94,2559
  FTT_X = 0,FTT_X98,2651
  FTT_Y,FTT_Y99,2664
  FTT_Z,FTT_Z101,2687
  FTT_DIMENSION,FTT_DIMENSION103,2716
  FTT_XY,FTT_XY104,2733
  FTT_XYZ = FTT_XYFTT_XYZ106,2754
} FttComponent;FttComponent110,2823
  FTT_FLAG_ID        = 7,FTT_FLAG_ID113,2855
  FTT_FLAG_DESTROYED = 1 << 3,FTT_FLAG_DESTROYED114,2881
  FTT_FLAG_LEAF      = 1 << 4,        /* used only for I/O operations */FTT_FLAG_LEAF115,2912
  FTT_FLAG_TRAVERSED = FTT_FLAG_LEAF, /* used for face traversal */FTT_FLAG_TRAVERSED116,2985
  FTT_FLAG_USER      =      5         /* user flags start here */FTT_FLAG_USER117,3053
} FttCellFlags;FttCellFlags118,3119
typedef void      (* FttCellTraverseFunc)            (FttCell * cell,FttCellTraverseFunc120,3136
typedef void      (* FttCellInitFunc)                (FttCell * cell,FttCellInitFunc122,3234
struct _FttCellNeighbors {_FttCellNeighbors125,3333
  FttCell * c[FTT_NEIGHBORS];c127,3406
struct _FttCellChildren {_FttCellChildren130,3440
  FttCell * c[FTT_CELLS];c131,3466
struct _FttCell {_FttCell134,3496
  guint flags;flags136,3531
  gpointer data;data137,3546
  struct _FttOct * parent, * children;parent140,3582
  struct _FttOct * parent, * children;children140,3582
struct _FttRootCell {_FttRootCell143,3625
  FttCell cell;cell144,3647
  FttCellNeighbors neighbors;neighbors146,3664
  FttVector pos;pos147,3694
  guint level;level148,3711
  gpointer parent;parent149,3726
struct _FttOct {_FttOct152,3749
  guint level;level153,3766
  FttCell * parent;parent154,3781
  FttCellNeighbors neighbors;neighbors155,3801
  FttVector pos;pos156,3831
  FttCell cell[FTT_CELLS];cell158,3849
struct _FttCellFace {_FttCellFace161,3880
  FttCell * cell, * neighbor;cell162,3902
  FttCell * cell, * neighbor;neighbor162,3902
  FttDirection d;d163,3932
#define  FTT_ROOT_CELL(FTT_ROOT_CELL166,3954
#define  FTT_CELL_ID(FTT_CELL_ID167,4016
#define  FTT_CELL_IS_LEAF(FTT_CELL_IS_LEAF168,4077
#define  FTT_CELL_IS_ROOT(FTT_CELL_IS_ROOT169,4135
#define  FTT_CELL_IS_DESTROYED(FTT_CELL_IS_DESTROYED170,4191
  FTT_BOUNDARY,FTT_BOUNDARY173,4282
  FTT_FINE_FINE,FTT_FINE_FINE174,4298
  FTT_FINE_COARSEFTT_FINE_COARSE175,4315
} FttFaceType;FttFaceType176,4333
#define  FTT_FACE_DIRECT(FTT_FACE_DIRECT178,4349
#define  FTT_FACE_REVERSE(FTT_FACE_REVERSE179,4401
gint                 ftt_opposite_direction[FTT_NEIGHBORS];ftt_opposite_direction185,4571
#define FTT_OPPOSITE_DIRECTION(FTT_OPPOSITE_DIRECTION187,4632
#define FTT_ORTHOGONAL_COMPONENT(FTT_ORTHOGONAL_COMPONENT188,4698
#define g_assert_not_implemented(g_assert_not_implemented192,4790
#define g_assert_not_implemented(g_assert_not_implemented198,4874
#define g_assert_not_implemented(g_assert_not_implemented208,5155
#define              ftt_cell_level(ftt_cell_level221,5526
#define              ftt_cell_parent(ftt_cell_parent224,5726
#define              ftt_cell_dz(ftt_cell_dz226,5851
gdouble ftt_level_size (guint level)ftt_level_size235,6009
gdouble ftt_cell_size (const FttCell * cell)ftt_cell_size254,6236
gdouble ftt_cell_volume (const FttCell * cell)ftt_cell_volume268,6492
void ftt_cell_children (const FttCell * cell,ftt_cell_children292,6947
guint ftt_cell_children_direction (const FttCell * cell,ftt_cell_children_direction322,7659
FttCell * ftt_cell_child_corner (const FttCell * cell,ftt_cell_child_corner367,8741
void ftt_cell_neighbors_not_cached (const FttCell * cell,ftt_cell_neighbors_not_cached433,10788
FttCell * ftt_cell_neighbor_not_cached (const FttCell * cell,ftt_cell_neighbor_not_cached492,12316
void ftt_cell_neighbors (const FttCell * cell,ftt_cell_neighbors540,13541
FttCell * ftt_cell_neighbor (const FttCell * cell,ftt_cell_neighbor563,14124
FttCellFace ftt_cell_face (FttCell * cell,ftt_cell_face583,14557
FttFaceType ftt_face_type (const FttCellFace * face)ftt_face_type600,14828
gboolean ftt_cell_neighbor_is_brother (FttCell * cell, ftt_cell_neighbor_is_brother621,15414
typedef gboolean  (* FttCellRefineFunc)              (FttCell * cell,FttCellRefineFunc672,17482
typedef void      (* FttFaceTraverseFunc)            (FttCellFace * face, FttFaceTraverseFunc712,19100
typedef void      (* FttCellCopyFunc)                (const FttCell * from,FttCellCopyFunc751,20597
typedef void      (* FttCellWriteFunc)               (const FttCell * cell,FttCellWriteFunc757,20865
typedef void      (* FttCellReadFunc)                (FttCell * cell,FttCellReadFunc770,21374
typedef void      (* FttCellCleanupFunc)             (FttCell * cell,FttCellCleanupFunc779,21758
typedef gboolean  (* FttCellCoarsenFunc)        (FttCell * cell,FttCellCoarsenFunc792,22285
struct _FttCellTraverse {_FttCellTraverse801,22640
  FttCell ** cells;cells802,22666
  FttCell ** current;current803,22686
typedef struct _FttCellTraverse FttCellTraverse;FttCellTraverse806,22712
FttCell * ftt_cell_traverse_next (FttCellTraverse * t)ftt_cell_traverse_next816,23069
